### java -jar java-cup-11a.jar -parser  mj -dump src/mjparser/mj.cup 2>&1 javacup.dump
java -jar java-cup-11a.jar -parser  mj -dump src/mjparser/mj.cup &> javacup.dump
mv -f sym.java src/mjparser/
mv: cannot stat ‘sym.java’: No such file or directory
make: *** [src/mjparser/mj.java] Error 1
Warning : Terminal "INT" was declared but never used
Warning : Terminal "LT" was declared but never used
Warning : Terminal "ASSIGN" was declared but never used
Warning : Terminal "THIS" was declared but never used
Warning : Terminal "DOT" was declared but never used
Warning : Terminal "TONE_LITERAL" was declared but never used
Warning : Terminal "BOOLEAN" was declared but never used
Warning : Terminal "RETURN" was declared but never used
Warning : Terminal "NEW" was declared but never used
Warning : Terminal "MEGGYSETAUXLEDS" was declared but never used
Warning : Terminal "MEGGYTONESTART" was declared but never used
Warning : Terminal "MEGGYCOLOR" was declared but never used
Warning : Terminal "MEGGYTONE" was declared but never used
Warning : Terminal "EXTENDS" was declared but never used
Warning : Terminal "MEGGYBUTTON" was declared but never used
Warning : Terminal "LENGTH" was declared but never used
Warning : Non terminal "exp" was declared but never used
Warning : *** Shift/Reduce conflict found in state #54
  between expression ::= expression AND expression (*) 
  and     expression ::= expression (*) PLUS expression 
  under symbol PLUS
  Resolved in favor of shifting.

Warning : *** Shift/Reduce conflict found in state #54
  between expression ::= expression AND expression (*) 
  and     expression ::= expression (*) MINUS expression 
  under symbol MINUS
  Resolved in favor of shifting.

Warning : *** Shift/Reduce conflict found in state #54
  between expression ::= expression AND expression (*) 
  and     expression ::= expression (*) EQUAL expression 
  under symbol EQUAL
  Resolved in favor of shifting.

Warning : *** Shift/Reduce conflict found in state #54
  between expression ::= expression AND expression (*) 
  and     expression ::= expression (*) AND expression 
  under symbol AND
  Resolved in favor of shifting.

Warning : *** Shift/Reduce conflict found in state #52
  between expression ::= expression EQUAL expression (*) 
  and     expression ::= expression (*) PLUS expression 
  under symbol PLUS
  Resolved in favor of shifting.

Warning : *** Shift/Reduce conflict found in state #52
  between expression ::= expression EQUAL expression (*) 
  and     expression ::= expression (*) MINUS expression 
  under symbol MINUS
  Resolved in favor of shifting.

Warning : *** Shift/Reduce conflict found in state #52
  between expression ::= expression EQUAL expression (*) 
  and     expression ::= expression (*) EQUAL expression 
  under symbol EQUAL
  Resolved in favor of shifting.

Warning : *** Shift/Reduce conflict found in state #52
  between expression ::= expression EQUAL expression (*) 
  and     expression ::= expression (*) AND expression 
  under symbol AND
  Resolved in favor of shifting.

Warning : *** Shift/Reduce conflict found in state #51
  between expression ::= expression MINUS expression (*) 
  and     expression ::= expression (*) PLUS expression 
  under symbol PLUS
  Resolved in favor of shifting.

Warning : *** Shift/Reduce conflict found in state #51
  between expression ::= expression MINUS expression (*) 
  and     expression ::= expression (*) MINUS expression 
  under symbol MINUS
  Resolved in favor of shifting.

Warning : *** Shift/Reduce conflict found in state #51
  between expression ::= expression MINUS expression (*) 
  and     expression ::= expression (*) EQUAL expression 
  under symbol EQUAL
  Resolved in favor of shifting.

Warning : *** Shift/Reduce conflict found in state #51
  between expression ::= expression MINUS expression (*) 
  and     expression ::= expression (*) AND expression 
  under symbol AND
  Resolved in favor of shifting.

Warning : *** Shift/Reduce conflict found in state #58
  between statement ::= IF LPAREN expression RPAREN statement (*) 
  and     statement ::= IF LPAREN expression RPAREN statement (*) ELSE statement 
  under symbol ELSE
  Resolved in favor of shifting.

Warning : *** Shift/Reduce conflict found in state #56
  between expression ::= NOT expression (*) 
  and     expression ::= expression (*) PLUS expression 
  under symbol PLUS
  Resolved in favor of shifting.

Warning : *** Shift/Reduce conflict found in state #56
  between expression ::= NOT expression (*) 
  and     expression ::= expression (*) MINUS expression 
  under symbol MINUS
  Resolved in favor of shifting.

Warning : *** Shift/Reduce conflict found in state #56
  between expression ::= NOT expression (*) 
  and     expression ::= expression (*) EQUAL expression 
  under symbol EQUAL
  Resolved in favor of shifting.

Warning : *** Shift/Reduce conflict found in state #56
  between expression ::= NOT expression (*) 
  and     expression ::= expression (*) AND expression 
  under symbol AND
  Resolved in favor of shifting.

Warning : *** Shift/Reduce conflict found in state #44
  between expression ::= LPAREN BYTE RPAREN expression (*) 
  and     expression ::= expression (*) PLUS expression 
  under symbol PLUS
  Resolved in favor of shifting.

Warning : *** Shift/Reduce conflict found in state #44
  between expression ::= LPAREN BYTE RPAREN expression (*) 
  and     expression ::= expression (*) MINUS expression 
  under symbol MINUS
  Resolved in favor of shifting.

Warning : *** Shift/Reduce conflict found in state #44
  between expression ::= LPAREN BYTE RPAREN expression (*) 
  and     expression ::= expression (*) EQUAL expression 
  under symbol EQUAL
  Resolved in favor of shifting.

Warning : *** Shift/Reduce conflict found in state #44
  between expression ::= LPAREN BYTE RPAREN expression (*) 
  and     expression ::= expression (*) AND expression 
  under symbol AND
  Resolved in favor of shifting.

Warning : *** Shift/Reduce conflict found in state #53
  between expression ::= expression PLUS expression (*) 
  and     expression ::= expression (*) PLUS expression 
  under symbol PLUS
  Resolved in favor of shifting.

Warning : *** Shift/Reduce conflict found in state #53
  between expression ::= expression PLUS expression (*) 
  and     expression ::= expression (*) MINUS expression 
  under symbol MINUS
  Resolved in favor of shifting.

Warning : *** Shift/Reduce conflict found in state #53
  between expression ::= expression PLUS expression (*) 
  and     expression ::= expression (*) EQUAL expression 
  under symbol EQUAL
  Resolved in favor of shifting.

Warning : *** Shift/Reduce conflict found in state #53
  between expression ::= expression PLUS expression (*) 
  and     expression ::= expression (*) AND expression 
  under symbol AND
  Resolved in favor of shifting.

Error : *** More conflicts encountered than expected -- parser generation aborted
===== Terminals =====
[0]EOF [1]error [2]PLUS [3]MINUS [4]TIMES 
[5]LPAREN [6]RPAREN [7]LBRACE [8]RBRACE [9]BOOLEAN 
[10]INT [11]BYTE [12]MAIN [13]IMPORT [14]IF 
[15]ELSE [16]LT [17]EQUAL [18]AND [19]NOT 
[20]WHILE [21]COMMA [22]DOT [23]NEW [24]PUBLIC 
[25]RETURN [26]STATIC [27]STRING [28]VOID [29]CLASS 
[30]EXTENDS [31]LBRACKET [32]RBRACKET [33]LENGTH [34]SEMI 
[35]ASSIGN [36]MEGGY [37]MEGGYCOLOR [38]MEGGYBUTTON [39]MEGGYTONE 
[40]MEGGYSETPIXEL [41]MEGGYSETAUXLEDS [42]MEGGYTONESTART [43]MEGGYDELAY [44]MEGGYGETPIXEL 
[45]MEGGYCHECKBUTTON [46]INT_LITERAL [47]ID [48]TRUE [49]FALSE 
[50]COLOR_LITERAL [51]BUTTON_LITERAL [52]TONE_LITERAL [53]THIS [54]UMINUS 


===== Non terminals =====
[0]program [1]exp [2]statement [3]statement_list [4]main_class 
[5]expression [6]NT$0 [7]NT$1 

===== Productions =====
[0] $START ::= program EOF 
[1] program ::= IMPORT MEGGY SEMI main_class 
[2] NT$0 ::= 
[3] NT$1 ::= 
[4] main_class ::= CLASS ID NT$0 LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN LBRACE NT$1 statement_list RBRACE RBRACE 
[5] statement ::= MEGGYSETPIXEL LPAREN expression COMMA expression COMMA expression RPAREN SEMI 
[6] statement ::= MEGGYDELAY LPAREN expression RPAREN SEMI 
[7] statement ::= IF LPAREN expression RPAREN statement 
[8] statement ::= IF LPAREN expression RPAREN statement ELSE statement 
[9] statement ::= WHILE LPAREN expression RPAREN statement 
[10] statement ::= LBRACE statement statement_list RBRACE 
[11] statement_list ::= statement statement_list 
[12] statement_list ::= 
[13] expression ::= expression AND expression 
[14] expression ::= expression EQUAL expression 
[15] expression ::= expression PLUS expression 
[16] expression ::= expression MINUS expression 
[17] expression ::= expression TIMES expression 
[18] expression ::= UMINUS expression 
[19] expression ::= MEGGYGETPIXEL LPAREN expression COMMA expression RPAREN 
[20] expression ::= MEGGYCHECKBUTTON LPAREN expression RPAREN 
[21] expression ::= LPAREN BYTE RPAREN expression 
[22] expression ::= INT_LITERAL 
[23] expression ::= COLOR_LITERAL 
[24] expression ::= BUTTON_LITERAL 
[25] expression ::= TRUE 
[26] expression ::= FALSE 
[27] expression ::= NOT expression 
[28] expression ::= LPAREN expression RPAREN 

===== Viable Prefix Recognizer =====
START lalr_state [0]: {
  [program ::= (*) IMPORT MEGGY SEMI main_class , {EOF }]
  [$START ::= (*) program EOF , {EOF }]
}
transition on IMPORT to state [2]
transition on program to state [1]

-------------------
lalr_state [1]: {
  [$START ::= program (*) EOF , {EOF }]
}
transition on EOF to state [92]

-------------------
lalr_state [2]: {
  [program ::= IMPORT (*) MEGGY SEMI main_class , {EOF }]
}
transition on MEGGY to state [3]

-------------------
lalr_state [3]: {
  [program ::= IMPORT MEGGY (*) SEMI main_class , {EOF }]
}
transition on SEMI to state [4]

-------------------
lalr_state [4]: {
  [program ::= IMPORT MEGGY SEMI (*) main_class , {EOF }]
  [main_class ::= (*) CLASS ID NT$0 LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN LBRACE NT$1 statement_list RBRACE RBRACE , {EOF }]
}
transition on main_class to state [6]
transition on CLASS to state [5]

-------------------
lalr_state [5]: {
  [main_class ::= CLASS (*) ID NT$0 LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN LBRACE NT$1 statement_list RBRACE RBRACE , {EOF }]
}
transition on ID to state [7]

-------------------
lalr_state [6]: {
  [program ::= IMPORT MEGGY SEMI main_class (*) , {EOF }]
}

-------------------
lalr_state [7]: {
  [NT$0 ::= (*) , {LBRACE }]
  [main_class ::= CLASS ID (*) NT$0 LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN LBRACE NT$1 statement_list RBRACE RBRACE , {EOF }]
}
transition on NT$0 to state [8]

-------------------
lalr_state [8]: {
  [main_class ::= CLASS ID NT$0 (*) LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN LBRACE NT$1 statement_list RBRACE RBRACE , {EOF }]
}
transition on LBRACE to state [9]

-------------------
lalr_state [9]: {
  [main_class ::= CLASS ID NT$0 LBRACE (*) PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN LBRACE NT$1 statement_list RBRACE RBRACE , {EOF }]
}
transition on PUBLIC to state [10]

-------------------
lalr_state [10]: {
  [main_class ::= CLASS ID NT$0 LBRACE PUBLIC (*) STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN LBRACE NT$1 statement_list RBRACE RBRACE , {EOF }]
}
transition on STATIC to state [11]

-------------------
lalr_state [11]: {
  [main_class ::= CLASS ID NT$0 LBRACE PUBLIC STATIC (*) VOID MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN LBRACE NT$1 statement_list RBRACE RBRACE , {EOF }]
}
transition on VOID to state [12]

-------------------
lalr_state [12]: {
  [main_class ::= CLASS ID NT$0 LBRACE PUBLIC STATIC VOID (*) MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN LBRACE NT$1 statement_list RBRACE RBRACE , {EOF }]
}
transition on MAIN to state [13]

-------------------
lalr_state [13]: {
  [main_class ::= CLASS ID NT$0 LBRACE PUBLIC STATIC VOID MAIN (*) LPAREN STRING LBRACKET RBRACKET ID RPAREN LBRACE NT$1 statement_list RBRACE RBRACE , {EOF }]
}
transition on LPAREN to state [14]

-------------------
lalr_state [14]: {
  [main_class ::= CLASS ID NT$0 LBRACE PUBLIC STATIC VOID MAIN LPAREN (*) STRING LBRACKET RBRACKET ID RPAREN LBRACE NT$1 statement_list RBRACE RBRACE , {EOF }]
}
transition on STRING to state [15]

-------------------
lalr_state [15]: {
  [main_class ::= CLASS ID NT$0 LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING (*) LBRACKET RBRACKET ID RPAREN LBRACE NT$1 statement_list RBRACE RBRACE , {EOF }]
}
transition on LBRACKET to state [16]

-------------------
lalr_state [16]: {
  [main_class ::= CLASS ID NT$0 LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET (*) RBRACKET ID RPAREN LBRACE NT$1 statement_list RBRACE RBRACE , {EOF }]
}
transition on RBRACKET to state [17]

-------------------
lalr_state [17]: {
  [main_class ::= CLASS ID NT$0 LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET (*) ID RPAREN LBRACE NT$1 statement_list RBRACE RBRACE , {EOF }]
}
transition on ID to state [18]

-------------------
lalr_state [18]: {
  [main_class ::= CLASS ID NT$0 LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID (*) RPAREN LBRACE NT$1 statement_list RBRACE RBRACE , {EOF }]
}
transition on RPAREN to state [19]

-------------------
lalr_state [19]: {
  [main_class ::= CLASS ID NT$0 LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN (*) LBRACE NT$1 statement_list RBRACE RBRACE , {EOF }]
}
transition on LBRACE to state [20]

-------------------
lalr_state [20]: {
  [main_class ::= CLASS ID NT$0 LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN LBRACE (*) NT$1 statement_list RBRACE RBRACE , {EOF }]
  [NT$1 ::= (*) , {LBRACE RBRACE IF WHILE MEGGYSETPIXEL MEGGYDELAY }]
}
transition on NT$1 to state [21]

-------------------
lalr_state [21]: {
  [statement_list ::= (*) statement statement_list , {RBRACE }]
  [statement ::= (*) IF LPAREN expression RPAREN statement ELSE statement , {LBRACE RBRACE IF WHILE MEGGYSETPIXEL MEGGYDELAY }]
  [statement ::= (*) MEGGYSETPIXEL LPAREN expression COMMA expression COMMA expression RPAREN SEMI , {LBRACE RBRACE IF WHILE MEGGYSETPIXEL MEGGYDELAY }]
  [statement ::= (*) LBRACE statement statement_list RBRACE , {LBRACE RBRACE IF WHILE MEGGYSETPIXEL MEGGYDELAY }]
  [statement ::= (*) IF LPAREN expression RPAREN statement , {LBRACE RBRACE IF WHILE MEGGYSETPIXEL MEGGYDELAY }]
  [statement_list ::= (*) , {RBRACE }]
  [statement ::= (*) WHILE LPAREN expression RPAREN statement , {LBRACE RBRACE IF WHILE MEGGYSETPIXEL MEGGYDELAY }]
  [statement ::= (*) MEGGYDELAY LPAREN expression RPAREN SEMI , {LBRACE RBRACE IF WHILE MEGGYSETPIXEL MEGGYDELAY }]
  [main_class ::= CLASS ID NT$0 LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN LBRACE NT$1 (*) statement_list RBRACE RBRACE , {EOF }]
}
transition on IF to state [28]
transition on MEGGYSETPIXEL to state [27]
transition on WHILE to state [26]
transition on MEGGYDELAY to state [25]
transition on statement to state [24]
transition on LBRACE to state [23]
transition on statement_list to state [22]

-------------------
lalr_state [22]: {
  [main_class ::= CLASS ID NT$0 LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN LBRACE NT$1 statement_list (*) RBRACE RBRACE , {EOF }]
}
transition on RBRACE to state [90]

-------------------
lalr_state [23]: {
  [statement ::= (*) IF LPAREN expression RPAREN statement ELSE statement , {LBRACE RBRACE IF WHILE MEGGYSETPIXEL MEGGYDELAY }]
  [statement ::= (*) MEGGYSETPIXEL LPAREN expression COMMA expression COMMA expression RPAREN SEMI , {LBRACE RBRACE IF WHILE MEGGYSETPIXEL MEGGYDELAY }]
  [statement ::= LBRACE (*) statement statement_list RBRACE , {LBRACE RBRACE IF ELSE WHILE MEGGYSETPIXEL MEGGYDELAY }]
  [statement ::= (*) LBRACE statement statement_list RBRACE , {LBRACE RBRACE IF WHILE MEGGYSETPIXEL MEGGYDELAY }]
  [statement ::= (*) IF LPAREN expression RPAREN statement , {LBRACE RBRACE IF WHILE MEGGYSETPIXEL MEGGYDELAY }]
  [statement ::= (*) WHILE LPAREN expression RPAREN statement , {LBRACE RBRACE IF WHILE MEGGYSETPIXEL MEGGYDELAY }]
  [statement ::= (*) MEGGYDELAY LPAREN expression RPAREN SEMI , {LBRACE RBRACE IF WHILE MEGGYSETPIXEL MEGGYDELAY }]
}
transition on IF to state [28]
transition on MEGGYSETPIXEL to state [27]
transition on WHILE to state [26]
transition on MEGGYDELAY to state [25]
transition on statement to state [87]
transition on LBRACE to state [23]

-------------------
lalr_state [24]: {
  [statement_list ::= statement (*) statement_list , {RBRACE }]
  [statement_list ::= (*) statement statement_list , {RBRACE }]
  [statement ::= (*) IF LPAREN expression RPAREN statement ELSE statement , {LBRACE RBRACE IF WHILE MEGGYSETPIXEL MEGGYDELAY }]
  [statement ::= (*) MEGGYSETPIXEL LPAREN expression COMMA expression COMMA expression RPAREN SEMI , {LBRACE RBRACE IF WHILE MEGGYSETPIXEL MEGGYDELAY }]
  [statement ::= (*) LBRACE statement statement_list RBRACE , {LBRACE RBRACE IF WHILE MEGGYSETPIXEL MEGGYDELAY }]
  [statement ::= (*) IF LPAREN expression RPAREN statement , {LBRACE RBRACE IF WHILE MEGGYSETPIXEL MEGGYDELAY }]
  [statement_list ::= (*) , {RBRACE }]
  [statement ::= (*) WHILE LPAREN expression RPAREN statement , {LBRACE RBRACE IF WHILE MEGGYSETPIXEL MEGGYDELAY }]
  [statement ::= (*) MEGGYDELAY LPAREN expression RPAREN SEMI , {LBRACE RBRACE IF WHILE MEGGYSETPIXEL MEGGYDELAY }]
}
transition on IF to state [28]
transition on MEGGYSETPIXEL to state [27]
transition on WHILE to state [26]
transition on MEGGYDELAY to state [25]
transition on statement to state [24]
transition on LBRACE to state [23]
transition on statement_list to state [86]

-------------------
lalr_state [25]: {
  [statement ::= MEGGYDELAY (*) LPAREN expression RPAREN SEMI , {LBRACE RBRACE IF ELSE WHILE MEGGYSETPIXEL MEGGYDELAY }]
}
transition on LPAREN to state [82]

-------------------
lalr_state [26]: {
  [statement ::= WHILE (*) LPAREN expression RPAREN statement , {LBRACE RBRACE IF ELSE WHILE MEGGYSETPIXEL MEGGYDELAY }]
}
transition on LPAREN to state [78]

-------------------
lalr_state [27]: {
  [statement ::= MEGGYSETPIXEL (*) LPAREN expression COMMA expression COMMA expression RPAREN SEMI , {LBRACE RBRACE IF ELSE WHILE MEGGYSETPIXEL MEGGYDELAY }]
}
transition on LPAREN to state [70]

-------------------
lalr_state [28]: {
  [statement ::= IF (*) LPAREN expression RPAREN statement , {LBRACE RBRACE IF ELSE WHILE MEGGYSETPIXEL MEGGYDELAY }]
  [statement ::= IF (*) LPAREN expression RPAREN statement ELSE statement , {LBRACE RBRACE IF ELSE WHILE MEGGYSETPIXEL MEGGYDELAY }]
}
transition on LPAREN to state [29]

-------------------
lalr_state [29]: {
  [expression ::= (*) expression PLUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) MEGGYCHECKBUTTON LPAREN expression RPAREN , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) TRUE , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [statement ::= IF LPAREN (*) expression RPAREN statement ELSE statement , {LBRACE RBRACE IF ELSE WHILE MEGGYSETPIXEL MEGGYDELAY }]
  [expression ::= (*) expression AND expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) UMINUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) LPAREN expression RPAREN , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) expression MINUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) LPAREN BYTE RPAREN expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) FALSE , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) expression EQUAL expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) MEGGYGETPIXEL LPAREN expression COMMA expression RPAREN , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [statement ::= IF LPAREN (*) expression RPAREN statement , {LBRACE RBRACE IF ELSE WHILE MEGGYSETPIXEL MEGGYDELAY }]
  [expression ::= (*) expression TIMES expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) INT_LITERAL , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) NOT expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
}
transition on BUTTON_LITERAL to state [40]
transition on LPAREN to state [39]
transition on COLOR_LITERAL to state [38]
transition on NOT to state [37]
transition on expression to state [36]
transition on MEGGYGETPIXEL to state [35]
transition on FALSE to state [34]
transition on INT_LITERAL to state [33]
transition on TRUE to state [32]
transition on UMINUS to state [31]
transition on MEGGYCHECKBUTTON to state [30]

-------------------
lalr_state [30]: {
  [expression ::= MEGGYCHECKBUTTON (*) LPAREN expression RPAREN , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
}
transition on LPAREN to state [67]

-------------------
lalr_state [31]: {
  [expression ::= (*) MEGGYCHECKBUTTON LPAREN expression RPAREN , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) expression TIMES expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) expression EQUAL expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) LPAREN expression RPAREN , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) TRUE , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) INT_LITERAL , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) MEGGYGETPIXEL LPAREN expression COMMA expression RPAREN , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) expression MINUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) expression AND expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) NOT expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= UMINUS (*) expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) LPAREN BYTE RPAREN expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) UMINUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) expression PLUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) FALSE , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
}
transition on BUTTON_LITERAL to state [40]
transition on LPAREN to state [39]
transition on NOT to state [37]
transition on COLOR_LITERAL to state [38]
transition on expression to state [66]
transition on MEGGYGETPIXEL to state [35]
transition on FALSE to state [34]
transition on INT_LITERAL to state [33]
transition on TRUE to state [32]
transition on UMINUS to state [31]
transition on MEGGYCHECKBUTTON to state [30]

-------------------
lalr_state [32]: {
  [expression ::= TRUE (*) , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
}

-------------------
lalr_state [33]: {
  [expression ::= INT_LITERAL (*) , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
}

-------------------
lalr_state [34]: {
  [expression ::= FALSE (*) , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
}

-------------------
lalr_state [35]: {
  [expression ::= MEGGYGETPIXEL (*) LPAREN expression COMMA expression RPAREN , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
}
transition on LPAREN to state [61]

-------------------
lalr_state [36]: {
  [expression ::= expression (*) MINUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [statement ::= IF LPAREN expression (*) RPAREN statement , {LBRACE RBRACE IF ELSE WHILE MEGGYSETPIXEL MEGGYDELAY }]
  [expression ::= expression (*) AND expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= expression (*) PLUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= expression (*) TIMES expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= expression (*) EQUAL expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [statement ::= IF LPAREN expression (*) RPAREN statement ELSE statement , {LBRACE RBRACE IF ELSE WHILE MEGGYSETPIXEL MEGGYDELAY }]
}
transition on TIMES to state [49]
transition on MINUS to state [48]
transition on EQUAL to state [47]
transition on PLUS to state [46]
transition on AND to state [45]
transition on RPAREN to state [57]

-------------------
lalr_state [37]: {
  [expression ::= (*) MEGGYCHECKBUTTON LPAREN expression RPAREN , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) expression TIMES expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) expression EQUAL expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) LPAREN expression RPAREN , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) TRUE , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) INT_LITERAL , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) MEGGYGETPIXEL LPAREN expression COMMA expression RPAREN , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) expression MINUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) expression AND expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= NOT (*) expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) NOT expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) LPAREN BYTE RPAREN expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) UMINUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) expression PLUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) FALSE , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
}
transition on BUTTON_LITERAL to state [40]
transition on LPAREN to state [39]
transition on NOT to state [37]
transition on COLOR_LITERAL to state [38]
transition on expression to state [56]
transition on MEGGYGETPIXEL to state [35]
transition on FALSE to state [34]
transition on INT_LITERAL to state [33]
transition on TRUE to state [32]
transition on UMINUS to state [31]
transition on MEGGYCHECKBUTTON to state [30]

-------------------
lalr_state [38]: {
  [expression ::= COLOR_LITERAL (*) , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
}

-------------------
lalr_state [39]: {
  [expression ::= (*) expression PLUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) MEGGYCHECKBUTTON LPAREN expression RPAREN , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) TRUE , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) expression AND expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) UMINUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= LPAREN (*) expression RPAREN , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) LPAREN expression RPAREN , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= LPAREN (*) BYTE RPAREN expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) expression MINUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) LPAREN BYTE RPAREN expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) FALSE , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) expression EQUAL expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) MEGGYGETPIXEL LPAREN expression COMMA expression RPAREN , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) expression TIMES expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) INT_LITERAL , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) NOT expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
}
transition on BUTTON_LITERAL to state [40]
transition on BYTE to state [42]
transition on LPAREN to state [39]
transition on COLOR_LITERAL to state [38]
transition on NOT to state [37]
transition on expression to state [41]
transition on FALSE to state [34]
transition on MEGGYGETPIXEL to state [35]
transition on INT_LITERAL to state [33]
transition on TRUE to state [32]
transition on UMINUS to state [31]
transition on MEGGYCHECKBUTTON to state [30]

-------------------
lalr_state [40]: {
  [expression ::= BUTTON_LITERAL (*) , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
}

-------------------
lalr_state [41]: {
  [expression ::= expression (*) MINUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= expression (*) AND expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= expression (*) PLUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= LPAREN expression (*) RPAREN , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= expression (*) TIMES expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= expression (*) EQUAL expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
}
transition on TIMES to state [49]
transition on MINUS to state [48]
transition on EQUAL to state [47]
transition on PLUS to state [46]
transition on AND to state [45]
transition on RPAREN to state [55]

-------------------
lalr_state [42]: {
  [expression ::= LPAREN BYTE (*) RPAREN expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
}
transition on RPAREN to state [43]

-------------------
lalr_state [43]: {
  [expression ::= (*) MEGGYCHECKBUTTON LPAREN expression RPAREN , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) expression TIMES expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) expression EQUAL expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) LPAREN expression RPAREN , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) TRUE , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) INT_LITERAL , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) MEGGYGETPIXEL LPAREN expression COMMA expression RPAREN , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) expression MINUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) expression AND expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= LPAREN BYTE RPAREN (*) expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) NOT expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) LPAREN BYTE RPAREN expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) UMINUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) expression PLUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) FALSE , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
}
transition on BUTTON_LITERAL to state [40]
transition on LPAREN to state [39]
transition on NOT to state [37]
transition on COLOR_LITERAL to state [38]
transition on expression to state [44]
transition on MEGGYGETPIXEL to state [35]
transition on FALSE to state [34]
transition on INT_LITERAL to state [33]
transition on TRUE to state [32]
transition on UMINUS to state [31]
transition on MEGGYCHECKBUTTON to state [30]

-------------------
lalr_state [44]: {
  [expression ::= expression (*) MINUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= expression (*) AND expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= expression (*) PLUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= expression (*) TIMES expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= expression (*) EQUAL expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= LPAREN BYTE RPAREN expression (*) , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
}
transition on TIMES to state [49]
transition on MINUS to state [48]
transition on EQUAL to state [47]
transition on PLUS to state [46]
transition on AND to state [45]

-------------------
lalr_state [45]: {
  [expression ::= (*) MEGGYCHECKBUTTON LPAREN expression RPAREN , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) expression TIMES expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) expression EQUAL expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) LPAREN expression RPAREN , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) TRUE , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) INT_LITERAL , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= expression AND (*) expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) MEGGYGETPIXEL LPAREN expression COMMA expression RPAREN , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) expression MINUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) expression AND expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) NOT expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) LPAREN BYTE RPAREN expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) UMINUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) expression PLUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) FALSE , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
}
transition on BUTTON_LITERAL to state [40]
transition on LPAREN to state [39]
transition on NOT to state [37]
transition on COLOR_LITERAL to state [38]
transition on expression to state [54]
transition on MEGGYGETPIXEL to state [35]
transition on FALSE to state [34]
transition on INT_LITERAL to state [33]
transition on TRUE to state [32]
transition on UMINUS to state [31]
transition on MEGGYCHECKBUTTON to state [30]

-------------------
lalr_state [46]: {
  [expression ::= (*) MEGGYCHECKBUTTON LPAREN expression RPAREN , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) expression TIMES expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) expression EQUAL expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) LPAREN expression RPAREN , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) TRUE , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) INT_LITERAL , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) MEGGYGETPIXEL LPAREN expression COMMA expression RPAREN , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) expression MINUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) expression AND expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) NOT expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= expression PLUS (*) expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) LPAREN BYTE RPAREN expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) UMINUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) expression PLUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) FALSE , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
}
transition on BUTTON_LITERAL to state [40]
transition on LPAREN to state [39]
transition on NOT to state [37]
transition on COLOR_LITERAL to state [38]
transition on expression to state [53]
transition on MEGGYGETPIXEL to state [35]
transition on FALSE to state [34]
transition on INT_LITERAL to state [33]
transition on TRUE to state [32]
transition on UMINUS to state [31]
transition on MEGGYCHECKBUTTON to state [30]

-------------------
lalr_state [47]: {
  [expression ::= (*) MEGGYCHECKBUTTON LPAREN expression RPAREN , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= expression EQUAL (*) expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) expression TIMES expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) expression EQUAL expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) LPAREN expression RPAREN , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) TRUE , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) INT_LITERAL , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) MEGGYGETPIXEL LPAREN expression COMMA expression RPAREN , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) expression MINUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) expression AND expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) NOT expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) LPAREN BYTE RPAREN expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) UMINUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) expression PLUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) FALSE , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
}
transition on BUTTON_LITERAL to state [40]
transition on LPAREN to state [39]
transition on NOT to state [37]
transition on COLOR_LITERAL to state [38]
transition on expression to state [52]
transition on MEGGYGETPIXEL to state [35]
transition on FALSE to state [34]
transition on INT_LITERAL to state [33]
transition on TRUE to state [32]
transition on UMINUS to state [31]
transition on MEGGYCHECKBUTTON to state [30]

-------------------
lalr_state [48]: {
  [expression ::= (*) MEGGYCHECKBUTTON LPAREN expression RPAREN , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) expression TIMES expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) expression EQUAL expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) LPAREN expression RPAREN , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) TRUE , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) INT_LITERAL , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= expression MINUS (*) expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) MEGGYGETPIXEL LPAREN expression COMMA expression RPAREN , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) expression MINUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) expression AND expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) NOT expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) LPAREN BYTE RPAREN expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) UMINUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) expression PLUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) FALSE , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
}
transition on BUTTON_LITERAL to state [40]
transition on LPAREN to state [39]
transition on NOT to state [37]
transition on COLOR_LITERAL to state [38]
transition on expression to state [51]
transition on MEGGYGETPIXEL to state [35]
transition on FALSE to state [34]
transition on INT_LITERAL to state [33]
transition on TRUE to state [32]
transition on UMINUS to state [31]
transition on MEGGYCHECKBUTTON to state [30]

-------------------
lalr_state [49]: {
  [expression ::= (*) MEGGYCHECKBUTTON LPAREN expression RPAREN , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) expression TIMES expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) expression EQUAL expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) LPAREN expression RPAREN , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) TRUE , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) INT_LITERAL , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) MEGGYGETPIXEL LPAREN expression COMMA expression RPAREN , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) expression MINUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) expression AND expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) NOT expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) LPAREN BYTE RPAREN expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) UMINUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) expression PLUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) FALSE , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= expression TIMES (*) expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
}
transition on BUTTON_LITERAL to state [40]
transition on LPAREN to state [39]
transition on NOT to state [37]
transition on COLOR_LITERAL to state [38]
transition on expression to state [50]
transition on MEGGYGETPIXEL to state [35]
transition on FALSE to state [34]
transition on INT_LITERAL to state [33]
transition on TRUE to state [32]
transition on UMINUS to state [31]
transition on MEGGYCHECKBUTTON to state [30]

-------------------
lalr_state [50]: {
  [expression ::= expression (*) MINUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= expression (*) AND expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= expression (*) PLUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= expression TIMES expression (*) , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= expression (*) TIMES expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= expression (*) EQUAL expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
}
transition on TIMES to state [49]
transition on MINUS to state [48]
transition on EQUAL to state [47]
transition on PLUS to state [46]
transition on AND to state [45]

-------------------
lalr_state [51]: {
  [expression ::= expression (*) MINUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= expression (*) AND expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= expression (*) PLUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= expression (*) TIMES expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= expression (*) EQUAL expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= expression MINUS expression (*) , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
}
transition on TIMES to state [49]
transition on MINUS to state [48]
transition on EQUAL to state [47]
transition on PLUS to state [46]
transition on AND to state [45]

-------------------
lalr_state [52]: {
  [expression ::= expression (*) MINUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= expression (*) AND expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= expression (*) PLUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= expression EQUAL expression (*) , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= expression (*) TIMES expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= expression (*) EQUAL expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
}
transition on TIMES to state [49]
transition on MINUS to state [48]
transition on EQUAL to state [47]
transition on PLUS to state [46]
transition on AND to state [45]

-------------------
lalr_state [53]: {
  [expression ::= expression (*) MINUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= expression (*) AND expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= expression PLUS expression (*) , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= expression (*) PLUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= expression (*) TIMES expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= expression (*) EQUAL expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
}
transition on TIMES to state [49]
transition on MINUS to state [48]
transition on EQUAL to state [47]
transition on PLUS to state [46]
transition on AND to state [45]

-------------------
lalr_state [54]: {
  [expression ::= expression (*) MINUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= expression (*) AND expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= expression (*) PLUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= expression (*) TIMES expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= expression (*) EQUAL expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= expression AND expression (*) , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
}
transition on TIMES to state [49]
transition on MINUS to state [48]
transition on EQUAL to state [47]
transition on PLUS to state [46]
transition on AND to state [45]

-------------------
lalr_state [55]: {
  [expression ::= LPAREN expression RPAREN (*) , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
}

-------------------
lalr_state [56]: {
  [expression ::= expression (*) MINUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= expression (*) AND expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= expression (*) PLUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= expression (*) TIMES expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= expression (*) EQUAL expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= NOT expression (*) , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
}
transition on TIMES to state [49]
transition on MINUS to state [48]
transition on EQUAL to state [47]
transition on PLUS to state [46]
transition on AND to state [45]

-------------------
lalr_state [57]: {
  [statement ::= (*) IF LPAREN expression RPAREN statement ELSE statement , {LBRACE RBRACE IF ELSE WHILE MEGGYSETPIXEL MEGGYDELAY }]
  [statement ::= IF LPAREN expression RPAREN (*) statement , {LBRACE RBRACE IF ELSE WHILE MEGGYSETPIXEL MEGGYDELAY }]
  [statement ::= (*) MEGGYSETPIXEL LPAREN expression COMMA expression COMMA expression RPAREN SEMI , {LBRACE RBRACE IF ELSE WHILE MEGGYSETPIXEL MEGGYDELAY }]
  [statement ::= (*) LBRACE statement statement_list RBRACE , {LBRACE RBRACE IF ELSE WHILE MEGGYSETPIXEL MEGGYDELAY }]
  [statement ::= (*) IF LPAREN expression RPAREN statement , {LBRACE RBRACE IF ELSE WHILE MEGGYSETPIXEL MEGGYDELAY }]
  [statement ::= (*) WHILE LPAREN expression RPAREN statement , {LBRACE RBRACE IF ELSE WHILE MEGGYSETPIXEL MEGGYDELAY }]
  [statement ::= IF LPAREN expression RPAREN (*) statement ELSE statement , {LBRACE RBRACE IF ELSE WHILE MEGGYSETPIXEL MEGGYDELAY }]
  [statement ::= (*) MEGGYDELAY LPAREN expression RPAREN SEMI , {LBRACE RBRACE IF ELSE WHILE MEGGYSETPIXEL MEGGYDELAY }]
}
transition on IF to state [28]
transition on MEGGYSETPIXEL to state [27]
transition on WHILE to state [26]
transition on MEGGYDELAY to state [25]
transition on statement to state [58]
transition on LBRACE to state [23]

-------------------
lalr_state [58]: {
  [statement ::= IF LPAREN expression RPAREN statement (*) ELSE statement , {LBRACE RBRACE IF ELSE WHILE MEGGYSETPIXEL MEGGYDELAY }]
  [statement ::= IF LPAREN expression RPAREN statement (*) , {LBRACE RBRACE IF ELSE WHILE MEGGYSETPIXEL MEGGYDELAY }]
}
transition on ELSE to state [59]

-------------------
lalr_state [59]: {
  [statement ::= (*) IF LPAREN expression RPAREN statement ELSE statement , {LBRACE RBRACE IF ELSE WHILE MEGGYSETPIXEL MEGGYDELAY }]
  [statement ::= (*) MEGGYSETPIXEL LPAREN expression COMMA expression COMMA expression RPAREN SEMI , {LBRACE RBRACE IF ELSE WHILE MEGGYSETPIXEL MEGGYDELAY }]
  [statement ::= (*) LBRACE statement statement_list RBRACE , {LBRACE RBRACE IF ELSE WHILE MEGGYSETPIXEL MEGGYDELAY }]
  [statement ::= (*) IF LPAREN expression RPAREN statement , {LBRACE RBRACE IF ELSE WHILE MEGGYSETPIXEL MEGGYDELAY }]
  [statement ::= IF LPAREN expression RPAREN statement ELSE (*) statement , {LBRACE RBRACE IF ELSE WHILE MEGGYSETPIXEL MEGGYDELAY }]
  [statement ::= (*) WHILE LPAREN expression RPAREN statement , {LBRACE RBRACE IF ELSE WHILE MEGGYSETPIXEL MEGGYDELAY }]
  [statement ::= (*) MEGGYDELAY LPAREN expression RPAREN SEMI , {LBRACE RBRACE IF ELSE WHILE MEGGYSETPIXEL MEGGYDELAY }]
}
transition on IF to state [28]
transition on MEGGYSETPIXEL to state [27]
transition on WHILE to state [26]
transition on MEGGYDELAY to state [25]
transition on statement to state [60]
transition on LBRACE to state [23]

-------------------
lalr_state [60]: {
  [statement ::= IF LPAREN expression RPAREN statement ELSE statement (*) , {LBRACE RBRACE IF ELSE WHILE MEGGYSETPIXEL MEGGYDELAY }]
}

-------------------
lalr_state [61]: {
  [expression ::= (*) MEGGYCHECKBUTTON LPAREN expression RPAREN , {PLUS MINUS TIMES EQUAL AND COMMA }]
  [expression ::= (*) expression TIMES expression , {PLUS MINUS TIMES EQUAL AND COMMA }]
  [expression ::= (*) expression EQUAL expression , {PLUS MINUS TIMES EQUAL AND COMMA }]
  [expression ::= (*) LPAREN expression RPAREN , {PLUS MINUS TIMES EQUAL AND COMMA }]
  [expression ::= (*) TRUE , {PLUS MINUS TIMES EQUAL AND COMMA }]
  [expression ::= MEGGYGETPIXEL LPAREN (*) expression COMMA expression RPAREN , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) INT_LITERAL , {PLUS MINUS TIMES EQUAL AND COMMA }]
  [expression ::= (*) MEGGYGETPIXEL LPAREN expression COMMA expression RPAREN , {PLUS MINUS TIMES EQUAL AND COMMA }]
  [expression ::= (*) expression MINUS expression , {PLUS MINUS TIMES EQUAL AND COMMA }]
  [expression ::= (*) expression AND expression , {PLUS MINUS TIMES EQUAL AND COMMA }]
  [expression ::= (*) NOT expression , {PLUS MINUS TIMES EQUAL AND COMMA }]
  [expression ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES EQUAL AND COMMA }]
  [expression ::= (*) LPAREN BYTE RPAREN expression , {PLUS MINUS TIMES EQUAL AND COMMA }]
  [expression ::= (*) UMINUS expression , {PLUS MINUS TIMES EQUAL AND COMMA }]
  [expression ::= (*) expression PLUS expression , {PLUS MINUS TIMES EQUAL AND COMMA }]
  [expression ::= (*) FALSE , {PLUS MINUS TIMES EQUAL AND COMMA }]
  [expression ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES EQUAL AND COMMA }]
}
transition on BUTTON_LITERAL to state [40]
transition on LPAREN to state [39]
transition on NOT to state [37]
transition on COLOR_LITERAL to state [38]
transition on expression to state [62]
transition on MEGGYGETPIXEL to state [35]
transition on FALSE to state [34]
transition on INT_LITERAL to state [33]
transition on TRUE to state [32]
transition on UMINUS to state [31]
transition on MEGGYCHECKBUTTON to state [30]

-------------------
lalr_state [62]: {
  [expression ::= expression (*) MINUS expression , {PLUS MINUS TIMES EQUAL AND COMMA }]
  [expression ::= expression (*) AND expression , {PLUS MINUS TIMES EQUAL AND COMMA }]
  [expression ::= expression (*) PLUS expression , {PLUS MINUS TIMES EQUAL AND COMMA }]
  [expression ::= expression (*) TIMES expression , {PLUS MINUS TIMES EQUAL AND COMMA }]
  [expression ::= MEGGYGETPIXEL LPAREN expression (*) COMMA expression RPAREN , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= expression (*) EQUAL expression , {PLUS MINUS TIMES EQUAL AND COMMA }]
}
transition on TIMES to state [49]
transition on MINUS to state [48]
transition on EQUAL to state [47]
transition on PLUS to state [46]
transition on AND to state [45]
transition on COMMA to state [63]

-------------------
lalr_state [63]: {
  [expression ::= (*) MEGGYCHECKBUTTON LPAREN expression RPAREN , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) expression TIMES expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) expression EQUAL expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= MEGGYGETPIXEL LPAREN expression COMMA (*) expression RPAREN , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) LPAREN expression RPAREN , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) TRUE , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) INT_LITERAL , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) MEGGYGETPIXEL LPAREN expression COMMA expression RPAREN , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) expression MINUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) expression AND expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) NOT expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) LPAREN BYTE RPAREN expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) UMINUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) expression PLUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) FALSE , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES RPAREN EQUAL AND }]
}
transition on BUTTON_LITERAL to state [40]
transition on LPAREN to state [39]
transition on NOT to state [37]
transition on COLOR_LITERAL to state [38]
transition on expression to state [64]
transition on MEGGYGETPIXEL to state [35]
transition on FALSE to state [34]
transition on INT_LITERAL to state [33]
transition on TRUE to state [32]
transition on UMINUS to state [31]
transition on MEGGYCHECKBUTTON to state [30]

-------------------
lalr_state [64]: {
  [expression ::= expression (*) MINUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= expression (*) AND expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= expression (*) PLUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= MEGGYGETPIXEL LPAREN expression COMMA expression (*) RPAREN , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= expression (*) TIMES expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= expression (*) EQUAL expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
}
transition on TIMES to state [49]
transition on MINUS to state [48]
transition on EQUAL to state [47]
transition on PLUS to state [46]
transition on AND to state [45]
transition on RPAREN to state [65]

-------------------
lalr_state [65]: {
  [expression ::= MEGGYGETPIXEL LPAREN expression COMMA expression RPAREN (*) , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
}

-------------------
lalr_state [66]: {
  [expression ::= expression (*) MINUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= expression (*) AND expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= UMINUS expression (*) , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= expression (*) PLUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= expression (*) TIMES expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= expression (*) EQUAL expression , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
}
transition on TIMES to state [49]
transition on MINUS to state [48]
transition on EQUAL to state [47]
transition on PLUS to state [46]
transition on AND to state [45]

-------------------
lalr_state [67]: {
  [expression ::= (*) MEGGYCHECKBUTTON LPAREN expression RPAREN , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) expression TIMES expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) expression EQUAL expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) LPAREN expression RPAREN , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) TRUE , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) INT_LITERAL , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) MEGGYGETPIXEL LPAREN expression COMMA expression RPAREN , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) expression MINUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) expression AND expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) NOT expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) LPAREN BYTE RPAREN expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) UMINUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) expression PLUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= MEGGYCHECKBUTTON LPAREN (*) expression RPAREN , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= (*) FALSE , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES RPAREN EQUAL AND }]
}
transition on BUTTON_LITERAL to state [40]
transition on LPAREN to state [39]
transition on NOT to state [37]
transition on COLOR_LITERAL to state [38]
transition on expression to state [68]
transition on MEGGYGETPIXEL to state [35]
transition on FALSE to state [34]
transition on INT_LITERAL to state [33]
transition on TRUE to state [32]
transition on UMINUS to state [31]
transition on MEGGYCHECKBUTTON to state [30]

-------------------
lalr_state [68]: {
  [expression ::= expression (*) MINUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= expression (*) AND expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= MEGGYCHECKBUTTON LPAREN expression (*) RPAREN , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
  [expression ::= expression (*) PLUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= expression (*) TIMES expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= expression (*) EQUAL expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
}
transition on TIMES to state [49]
transition on MINUS to state [48]
transition on EQUAL to state [47]
transition on PLUS to state [46]
transition on AND to state [45]
transition on RPAREN to state [69]

-------------------
lalr_state [69]: {
  [expression ::= MEGGYCHECKBUTTON LPAREN expression RPAREN (*) , {PLUS MINUS TIMES RPAREN EQUAL AND COMMA }]
}

-------------------
lalr_state [70]: {
  [expression ::= (*) MEGGYCHECKBUTTON LPAREN expression RPAREN , {PLUS MINUS TIMES EQUAL AND COMMA }]
  [expression ::= (*) expression TIMES expression , {PLUS MINUS TIMES EQUAL AND COMMA }]
  [expression ::= (*) expression EQUAL expression , {PLUS MINUS TIMES EQUAL AND COMMA }]
  [statement ::= MEGGYSETPIXEL LPAREN (*) expression COMMA expression COMMA expression RPAREN SEMI , {LBRACE RBRACE IF ELSE WHILE MEGGYSETPIXEL MEGGYDELAY }]
  [expression ::= (*) LPAREN expression RPAREN , {PLUS MINUS TIMES EQUAL AND COMMA }]
  [expression ::= (*) TRUE , {PLUS MINUS TIMES EQUAL AND COMMA }]
  [expression ::= (*) INT_LITERAL , {PLUS MINUS TIMES EQUAL AND COMMA }]
  [expression ::= (*) MEGGYGETPIXEL LPAREN expression COMMA expression RPAREN , {PLUS MINUS TIMES EQUAL AND COMMA }]
  [expression ::= (*) expression MINUS expression , {PLUS MINUS TIMES EQUAL AND COMMA }]
  [expression ::= (*) expression AND expression , {PLUS MINUS TIMES EQUAL AND COMMA }]
  [expression ::= (*) NOT expression , {PLUS MINUS TIMES EQUAL AND COMMA }]
  [expression ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES EQUAL AND COMMA }]
  [expression ::= (*) LPAREN BYTE RPAREN expression , {PLUS MINUS TIMES EQUAL AND COMMA }]
  [expression ::= (*) UMINUS expression , {PLUS MINUS TIMES EQUAL AND COMMA }]
  [expression ::= (*) expression PLUS expression , {PLUS MINUS TIMES EQUAL AND COMMA }]
  [expression ::= (*) FALSE , {PLUS MINUS TIMES EQUAL AND COMMA }]
  [expression ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES EQUAL AND COMMA }]
}
transition on BUTTON_LITERAL to state [40]
transition on LPAREN to state [39]
transition on NOT to state [37]
transition on COLOR_LITERAL to state [38]
transition on expression to state [71]
transition on MEGGYGETPIXEL to state [35]
transition on FALSE to state [34]
transition on INT_LITERAL to state [33]
transition on TRUE to state [32]
transition on UMINUS to state [31]
transition on MEGGYCHECKBUTTON to state [30]

-------------------
lalr_state [71]: {
  [expression ::= expression (*) MINUS expression , {PLUS MINUS TIMES EQUAL AND COMMA }]
  [expression ::= expression (*) AND expression , {PLUS MINUS TIMES EQUAL AND COMMA }]
  [expression ::= expression (*) PLUS expression , {PLUS MINUS TIMES EQUAL AND COMMA }]
  [expression ::= expression (*) TIMES expression , {PLUS MINUS TIMES EQUAL AND COMMA }]
  [expression ::= expression (*) EQUAL expression , {PLUS MINUS TIMES EQUAL AND COMMA }]
  [statement ::= MEGGYSETPIXEL LPAREN expression (*) COMMA expression COMMA expression RPAREN SEMI , {LBRACE RBRACE IF ELSE WHILE MEGGYSETPIXEL MEGGYDELAY }]
}
transition on TIMES to state [49]
transition on MINUS to state [48]
transition on EQUAL to state [47]
transition on PLUS to state [46]
transition on AND to state [45]
transition on COMMA to state [72]

-------------------
lalr_state [72]: {
  [expression ::= (*) MEGGYCHECKBUTTON LPAREN expression RPAREN , {PLUS MINUS TIMES EQUAL AND COMMA }]
  [statement ::= MEGGYSETPIXEL LPAREN expression COMMA (*) expression COMMA expression RPAREN SEMI , {LBRACE RBRACE IF ELSE WHILE MEGGYSETPIXEL MEGGYDELAY }]
  [expression ::= (*) expression TIMES expression , {PLUS MINUS TIMES EQUAL AND COMMA }]
  [expression ::= (*) expression EQUAL expression , {PLUS MINUS TIMES EQUAL AND COMMA }]
  [expression ::= (*) LPAREN expression RPAREN , {PLUS MINUS TIMES EQUAL AND COMMA }]
  [expression ::= (*) TRUE , {PLUS MINUS TIMES EQUAL AND COMMA }]
  [expression ::= (*) INT_LITERAL , {PLUS MINUS TIMES EQUAL AND COMMA }]
  [expression ::= (*) MEGGYGETPIXEL LPAREN expression COMMA expression RPAREN , {PLUS MINUS TIMES EQUAL AND COMMA }]
  [expression ::= (*) expression MINUS expression , {PLUS MINUS TIMES EQUAL AND COMMA }]
  [expression ::= (*) expression AND expression , {PLUS MINUS TIMES EQUAL AND COMMA }]
  [expression ::= (*) NOT expression , {PLUS MINUS TIMES EQUAL AND COMMA }]
  [expression ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES EQUAL AND COMMA }]
  [expression ::= (*) LPAREN BYTE RPAREN expression , {PLUS MINUS TIMES EQUAL AND COMMA }]
  [expression ::= (*) UMINUS expression , {PLUS MINUS TIMES EQUAL AND COMMA }]
  [expression ::= (*) expression PLUS expression , {PLUS MINUS TIMES EQUAL AND COMMA }]
  [expression ::= (*) FALSE , {PLUS MINUS TIMES EQUAL AND COMMA }]
  [expression ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES EQUAL AND COMMA }]
}
transition on BUTTON_LITERAL to state [40]
transition on LPAREN to state [39]
transition on NOT to state [37]
transition on COLOR_LITERAL to state [38]
transition on expression to state [73]
transition on MEGGYGETPIXEL to state [35]
transition on FALSE to state [34]
transition on INT_LITERAL to state [33]
transition on TRUE to state [32]
transition on UMINUS to state [31]
transition on MEGGYCHECKBUTTON to state [30]

-------------------
lalr_state [73]: {
  [expression ::= expression (*) MINUS expression , {PLUS MINUS TIMES EQUAL AND COMMA }]
  [expression ::= expression (*) AND expression , {PLUS MINUS TIMES EQUAL AND COMMA }]
  [expression ::= expression (*) PLUS expression , {PLUS MINUS TIMES EQUAL AND COMMA }]
  [expression ::= expression (*) TIMES expression , {PLUS MINUS TIMES EQUAL AND COMMA }]
  [statement ::= MEGGYSETPIXEL LPAREN expression COMMA expression (*) COMMA expression RPAREN SEMI , {LBRACE RBRACE IF ELSE WHILE MEGGYSETPIXEL MEGGYDELAY }]
  [expression ::= expression (*) EQUAL expression , {PLUS MINUS TIMES EQUAL AND COMMA }]
}
transition on TIMES to state [49]
transition on MINUS to state [48]
transition on EQUAL to state [47]
transition on PLUS to state [46]
transition on AND to state [45]
transition on COMMA to state [74]

-------------------
lalr_state [74]: {
  [expression ::= (*) MEGGYCHECKBUTTON LPAREN expression RPAREN , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) expression TIMES expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) expression EQUAL expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) LPAREN expression RPAREN , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) TRUE , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) INT_LITERAL , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) MEGGYGETPIXEL LPAREN expression COMMA expression RPAREN , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) expression MINUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) expression AND expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) NOT expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) LPAREN BYTE RPAREN expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) UMINUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) expression PLUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) FALSE , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [statement ::= MEGGYSETPIXEL LPAREN expression COMMA expression COMMA (*) expression RPAREN SEMI , {LBRACE RBRACE IF ELSE WHILE MEGGYSETPIXEL MEGGYDELAY }]
}
transition on BUTTON_LITERAL to state [40]
transition on LPAREN to state [39]
transition on NOT to state [37]
transition on COLOR_LITERAL to state [38]
transition on expression to state [75]
transition on MEGGYGETPIXEL to state [35]
transition on FALSE to state [34]
transition on INT_LITERAL to state [33]
transition on TRUE to state [32]
transition on UMINUS to state [31]
transition on MEGGYCHECKBUTTON to state [30]

-------------------
lalr_state [75]: {
  [expression ::= expression (*) MINUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= expression (*) AND expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= expression (*) PLUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [statement ::= MEGGYSETPIXEL LPAREN expression COMMA expression COMMA expression (*) RPAREN SEMI , {LBRACE RBRACE IF ELSE WHILE MEGGYSETPIXEL MEGGYDELAY }]
  [expression ::= expression (*) TIMES expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= expression (*) EQUAL expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
}
transition on TIMES to state [49]
transition on MINUS to state [48]
transition on EQUAL to state [47]
transition on PLUS to state [46]
transition on AND to state [45]
transition on RPAREN to state [76]

-------------------
lalr_state [76]: {
  [statement ::= MEGGYSETPIXEL LPAREN expression COMMA expression COMMA expression RPAREN (*) SEMI , {LBRACE RBRACE IF ELSE WHILE MEGGYSETPIXEL MEGGYDELAY }]
}
transition on SEMI to state [77]

-------------------
lalr_state [77]: {
  [statement ::= MEGGYSETPIXEL LPAREN expression COMMA expression COMMA expression RPAREN SEMI (*) , {LBRACE RBRACE IF ELSE WHILE MEGGYSETPIXEL MEGGYDELAY }]
}

-------------------
lalr_state [78]: {
  [expression ::= (*) MEGGYCHECKBUTTON LPAREN expression RPAREN , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) expression TIMES expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) expression EQUAL expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) LPAREN expression RPAREN , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) TRUE , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) INT_LITERAL , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) MEGGYGETPIXEL LPAREN expression COMMA expression RPAREN , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) expression MINUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) expression AND expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) NOT expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) LPAREN BYTE RPAREN expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) UMINUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) expression PLUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [statement ::= WHILE LPAREN (*) expression RPAREN statement , {LBRACE RBRACE IF ELSE WHILE MEGGYSETPIXEL MEGGYDELAY }]
  [expression ::= (*) FALSE , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES RPAREN EQUAL AND }]
}
transition on BUTTON_LITERAL to state [40]
transition on LPAREN to state [39]
transition on NOT to state [37]
transition on COLOR_LITERAL to state [38]
transition on expression to state [79]
transition on MEGGYGETPIXEL to state [35]
transition on FALSE to state [34]
transition on INT_LITERAL to state [33]
transition on TRUE to state [32]
transition on UMINUS to state [31]
transition on MEGGYCHECKBUTTON to state [30]

-------------------
lalr_state [79]: {
  [expression ::= expression (*) MINUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= expression (*) AND expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [statement ::= WHILE LPAREN expression (*) RPAREN statement , {LBRACE RBRACE IF ELSE WHILE MEGGYSETPIXEL MEGGYDELAY }]
  [expression ::= expression (*) PLUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= expression (*) TIMES expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= expression (*) EQUAL expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
}
transition on TIMES to state [49]
transition on MINUS to state [48]
transition on EQUAL to state [47]
transition on PLUS to state [46]
transition on AND to state [45]
transition on RPAREN to state [80]

-------------------
lalr_state [80]: {
  [statement ::= (*) IF LPAREN expression RPAREN statement ELSE statement , {LBRACE RBRACE IF ELSE WHILE MEGGYSETPIXEL MEGGYDELAY }]
  [statement ::= (*) MEGGYSETPIXEL LPAREN expression COMMA expression COMMA expression RPAREN SEMI , {LBRACE RBRACE IF ELSE WHILE MEGGYSETPIXEL MEGGYDELAY }]
  [statement ::= (*) LBRACE statement statement_list RBRACE , {LBRACE RBRACE IF ELSE WHILE MEGGYSETPIXEL MEGGYDELAY }]
  [statement ::= WHILE LPAREN expression RPAREN (*) statement , {LBRACE RBRACE IF ELSE WHILE MEGGYSETPIXEL MEGGYDELAY }]
  [statement ::= (*) IF LPAREN expression RPAREN statement , {LBRACE RBRACE IF ELSE WHILE MEGGYSETPIXEL MEGGYDELAY }]
  [statement ::= (*) WHILE LPAREN expression RPAREN statement , {LBRACE RBRACE IF ELSE WHILE MEGGYSETPIXEL MEGGYDELAY }]
  [statement ::= (*) MEGGYDELAY LPAREN expression RPAREN SEMI , {LBRACE RBRACE IF ELSE WHILE MEGGYSETPIXEL MEGGYDELAY }]
}
transition on IF to state [28]
transition on MEGGYSETPIXEL to state [27]
transition on WHILE to state [26]
transition on MEGGYDELAY to state [25]
transition on statement to state [81]
transition on LBRACE to state [23]

-------------------
lalr_state [81]: {
  [statement ::= WHILE LPAREN expression RPAREN statement (*) , {LBRACE RBRACE IF ELSE WHILE MEGGYSETPIXEL MEGGYDELAY }]
}

-------------------
lalr_state [82]: {
  [expression ::= (*) MEGGYCHECKBUTTON LPAREN expression RPAREN , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) expression TIMES expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) expression EQUAL expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) LPAREN expression RPAREN , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) TRUE , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) INT_LITERAL , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) MEGGYGETPIXEL LPAREN expression COMMA expression RPAREN , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) expression MINUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) expression AND expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) NOT expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) LPAREN BYTE RPAREN expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) UMINUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) expression PLUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [statement ::= MEGGYDELAY LPAREN (*) expression RPAREN SEMI , {LBRACE RBRACE IF ELSE WHILE MEGGYSETPIXEL MEGGYDELAY }]
  [expression ::= (*) FALSE , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES RPAREN EQUAL AND }]
}
transition on BUTTON_LITERAL to state [40]
transition on LPAREN to state [39]
transition on NOT to state [37]
transition on COLOR_LITERAL to state [38]
transition on expression to state [83]
transition on MEGGYGETPIXEL to state [35]
transition on FALSE to state [34]
transition on INT_LITERAL to state [33]
transition on TRUE to state [32]
transition on UMINUS to state [31]
transition on MEGGYCHECKBUTTON to state [30]

-------------------
lalr_state [83]: {
  [expression ::= expression (*) MINUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= expression (*) AND expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= expression (*) PLUS expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [statement ::= MEGGYDELAY LPAREN expression (*) RPAREN SEMI , {LBRACE RBRACE IF ELSE WHILE MEGGYSETPIXEL MEGGYDELAY }]
  [expression ::= expression (*) TIMES expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
  [expression ::= expression (*) EQUAL expression , {PLUS MINUS TIMES RPAREN EQUAL AND }]
}
transition on TIMES to state [49]
transition on MINUS to state [48]
transition on EQUAL to state [47]
transition on PLUS to state [46]
transition on AND to state [45]
transition on RPAREN to state [84]

-------------------
lalr_state [84]: {
  [statement ::= MEGGYDELAY LPAREN expression RPAREN (*) SEMI , {LBRACE RBRACE IF ELSE WHILE MEGGYSETPIXEL MEGGYDELAY }]
}
transition on SEMI to state [85]

-------------------
lalr_state [85]: {
  [statement ::= MEGGYDELAY LPAREN expression RPAREN SEMI (*) , {LBRACE RBRACE IF ELSE WHILE MEGGYSETPIXEL MEGGYDELAY }]
}

-------------------
lalr_state [86]: {
  [statement_list ::= statement statement_list (*) , {RBRACE }]
}

-------------------
lalr_state [87]: {
  [statement_list ::= (*) statement statement_list , {RBRACE }]
  [statement ::= (*) IF LPAREN expression RPAREN statement ELSE statement , {LBRACE RBRACE IF WHILE MEGGYSETPIXEL MEGGYDELAY }]
  [statement ::= (*) MEGGYSETPIXEL LPAREN expression COMMA expression COMMA expression RPAREN SEMI , {LBRACE RBRACE IF WHILE MEGGYSETPIXEL MEGGYDELAY }]
  [statement ::= LBRACE statement (*) statement_list RBRACE , {LBRACE RBRACE IF ELSE WHILE MEGGYSETPIXEL MEGGYDELAY }]
  [statement ::= (*) LBRACE statement statement_list RBRACE , {LBRACE RBRACE IF WHILE MEGGYSETPIXEL MEGGYDELAY }]
  [statement ::= (*) IF LPAREN expression RPAREN statement , {LBRACE RBRACE IF WHILE MEGGYSETPIXEL MEGGYDELAY }]
  [statement_list ::= (*) , {RBRACE }]
  [statement ::= (*) WHILE LPAREN expression RPAREN statement , {LBRACE RBRACE IF WHILE MEGGYSETPIXEL MEGGYDELAY }]
  [statement ::= (*) MEGGYDELAY LPAREN expression RPAREN SEMI , {LBRACE RBRACE IF WHILE MEGGYSETPIXEL MEGGYDELAY }]
}
transition on IF to state [28]
transition on MEGGYSETPIXEL to state [27]
transition on WHILE to state [26]
transition on MEGGYDELAY to state [25]
transition on statement to state [24]
transition on LBRACE to state [23]
transition on statement_list to state [88]

-------------------
lalr_state [88]: {
  [statement ::= LBRACE statement statement_list (*) RBRACE , {LBRACE RBRACE IF ELSE WHILE MEGGYSETPIXEL MEGGYDELAY }]
}
transition on RBRACE to state [89]

-------------------
lalr_state [89]: {
  [statement ::= LBRACE statement statement_list RBRACE (*) , {LBRACE RBRACE IF ELSE WHILE MEGGYSETPIXEL MEGGYDELAY }]
}

-------------------
lalr_state [90]: {
  [main_class ::= CLASS ID NT$0 LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN LBRACE NT$1 statement_list RBRACE (*) RBRACE , {EOF }]
}
transition on RBRACE to state [91]

-------------------
lalr_state [91]: {
  [main_class ::= CLASS ID NT$0 LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN LBRACE NT$1 statement_list RBRACE RBRACE (*) , {EOF }]
}

-------------------
lalr_state [92]: {
  [$START ::= program EOF (*) , {EOF }]
}

-------------------
------- CUP v0.11a beta 20060608 Parser Generation Summary -------
  1 error and 42 warnings
  55 terminals, 8 non-terminals, and 29 productions declared, 
  producing 93 unique parse states.
  17 terminals declared but not used.
  0 non-terminals declared but not used.
  0 productions never reduced.
  25 conflicts detected (0 expected).
  No code produced.
---------------------------------------------------- (v0.11a beta 20060608)
