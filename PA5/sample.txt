java -jar java-cup-11a.jar -parser  mj -dump src/mjparser/mj.cup &> javacup.dump
mv -f sym.java src/mjparser/
mv: cannot stat ‘sym.java’: No such file or directory
make: *** [src/mjparser/mj.java] Error 1
Warning : Terminal "UMINUS" was declared but never used
Warning : Terminal "MEGGYSETAUXLEDS" was declared but never used
Warning : Terminal "EXTENDS" was declared but never used
Warning : Terminal "LENGTH" was declared but never used
Warning : *** Shift/Reduce conflict found in state #37
  between statement_list ::= (*) 
  and     iden ::= (*) ID 
  under symbol ID
  Resolved in favor of shifting.

Error : *** More conflicts encountered than expected -- parser generation aborted
===== Terminals =====
[0]EOF [1]error [2]PLUS [3]MINUS [4]TIMES 
[5]LPAREN [6]RPAREN [7]LBRACE [8]RBRACE [9]BOOLEAN 
[10]INT [11]BYTE [12]MAIN [13]IMPORT [14]IF 
[15]ELSE [16]LT [17]EQUAL [18]AND [19]NOT 
[20]WHILE [21]COMMA [22]DOT [23]NEW [24]PUBLIC 
[25]RETURN [26]STATIC [27]STRING [28]VOID [29]CLASS 
[30]EXTENDS [31]LBRACKET [32]RBRACKET [33]LENGTH [34]ASSIGN 
[35]SEMI [36]MEGGY [37]MEGGYCOLOR [38]MEGGYBUTTON [39]MEGGYTONE 
[40]MEGGYSETPIXEL [41]MEGGYSETAUXLEDS [42]MEGGYTONESTART [43]MEGGYDELAY [44]MEGGYGETPIXEL 
[45]MEGGYCHECKBUTTON [46]INT_LITERAL [47]ID [48]TRUE [49]FALSE 
[50]COLOR_LITERAL [51]BUTTON_LITERAL [52]TONE_LITERAL [53]THIS [54]UMINUS 


===== Non terminals =====
[0]program [1]exp_list [2]statement [3]statement_list [4]main_class 
[5]class [6]expression [7]method_list [8]class_list [9]method 
[10]type [11]var [12]var_list [13]formal [14]formal_list 
[15]iden 

===== Productions =====
[0] $START ::= program EOF 
[1] program ::= IMPORT MEGGY SEMI main_class class_list 
[2] main_class ::= CLASS iden LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET iden RPAREN LBRACE statement_list RBRACE RBRACE 
[3] var ::= type iden SEMI 
[4] var_list ::= var_list var 
[5] var_list ::= 
[6] class ::= CLASS iden LBRACE var_list method_list RBRACE 
[7] class_list ::= class_list class 
[8] class_list ::= 
[9] method ::= PUBLIC type iden LPAREN formal_list RPAREN LBRACE var_list statement_list RETURN expression SEMI RBRACE 
[10] method ::= PUBLIC type iden LPAREN formal_list RPAREN LBRACE var_list statement_list RBRACE 
[11] method_list ::= method_list method 
[12] method_list ::= 
[13] formal ::= type iden 
[14] formal_list ::= formal_list COMMA formal 
[15] formal_list ::= formal_list formal 
[16] formal_list ::= 
[17] type ::= BOOLEAN 
[18] type ::= BYTE 
[19] type ::= INT 
[20] type ::= VOID 
[21] type ::= MEGGYCOLOR 
[22] type ::= MEGGYBUTTON 
[23] type ::= MEGGYTONE 
[24] type ::= iden 
[25] statement ::= MEGGYSETPIXEL LPAREN expression COMMA expression COMMA expression RPAREN SEMI 
[26] statement ::= MEGGYDELAY LPAREN expression RPAREN SEMI 
[27] statement ::= MEGGYTONESTART LPAREN expression COMMA expression RPAREN SEMI 
[28] statement ::= IF LPAREN expression RPAREN statement 
[29] statement ::= IF LPAREN expression RPAREN statement ELSE statement 
[30] statement ::= WHILE LPAREN expression RPAREN statement 
[31] statement ::= expression DOT iden LPAREN exp_list RPAREN SEMI 
[32] statement ::= LBRACE statement_list RBRACE 
[33] statement ::= iden ASSIGN expression SEMI 
[34] statement_list ::= statement_list statement 
[35] statement_list ::= 
[36] expression ::= expression AND expression 
[37] expression ::= expression EQUAL expression 
[38] expression ::= expression PLUS expression 
[39] expression ::= expression MINUS expression 
[40] expression ::= expression TIMES expression 
[41] expression ::= MINUS expression 
[42] expression ::= expression LT expression 
[43] expression ::= MEGGYGETPIXEL LPAREN expression COMMA expression RPAREN 
[44] expression ::= MEGGYCHECKBUTTON LPAREN expression RPAREN 
[45] expression ::= LPAREN BYTE RPAREN expression 
[46] expression ::= INT_LITERAL 
[47] expression ::= TONE_LITERAL 
[48] expression ::= COLOR_LITERAL 
[49] expression ::= BUTTON_LITERAL 
[50] expression ::= TRUE 
[51] expression ::= FALSE 
[52] expression ::= NOT expression 
[53] expression ::= LPAREN expression RPAREN 
[54] expression ::= iden 
[55] expression ::= THIS 
[56] expression ::= NEW iden LPAREN RPAREN 
[57] expression ::= expression DOT iden LPAREN exp_list RPAREN 
[58] exp_list ::= exp_list COMMA expression 
[59] exp_list ::= exp_list expression 
[60] exp_list ::= 
[61] iden ::= ID 

===== Viable Prefix Recognizer =====
START lalr_state [0]: {
  [program ::= (*) IMPORT MEGGY SEMI main_class class_list , {EOF }]
  [$START ::= (*) program EOF , {EOF }]
}
transition on IMPORT to state [2]
transition on program to state [1]

-------------------
lalr_state [1]: {
  [$START ::= program (*) EOF , {EOF }]
}
transition on EOF to state [164]

-------------------
lalr_state [2]: {
  [program ::= IMPORT (*) MEGGY SEMI main_class class_list , {EOF }]
}
transition on MEGGY to state [3]

-------------------
lalr_state [3]: {
  [program ::= IMPORT MEGGY (*) SEMI main_class class_list , {EOF }]
}
transition on SEMI to state [4]

-------------------
lalr_state [4]: {
  [main_class ::= (*) CLASS iden LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET iden RPAREN LBRACE statement_list RBRACE RBRACE , {EOF CLASS }]
  [program ::= IMPORT MEGGY SEMI (*) main_class class_list , {EOF }]
}
transition on main_class to state [6]
transition on CLASS to state [5]

-------------------
lalr_state [5]: {
  [main_class ::= CLASS (*) iden LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET iden RPAREN LBRACE statement_list RBRACE RBRACE , {EOF CLASS }]
  [iden ::= (*) ID , {LBRACE }]
}
transition on iden to state [148]
transition on ID to state [10]

-------------------
lalr_state [6]: {
  [class_list ::= (*) , {EOF CLASS }]
  [program ::= IMPORT MEGGY SEMI main_class (*) class_list , {EOF }]
  [class_list ::= (*) class_list class , {EOF CLASS }]
}
transition on class_list to state [7]

-------------------
lalr_state [7]: {
  [program ::= IMPORT MEGGY SEMI main_class class_list (*) , {EOF }]
  [class_list ::= class_list (*) class , {EOF CLASS }]
  [class ::= (*) CLASS iden LBRACE var_list method_list RBRACE , {EOF CLASS }]
}
transition on class to state [9]
transition on CLASS to state [8]

-------------------
lalr_state [8]: {
  [class ::= CLASS (*) iden LBRACE var_list method_list RBRACE , {EOF CLASS }]
  [iden ::= (*) ID , {LBRACE }]
}
transition on iden to state [11]
transition on ID to state [10]

-------------------
lalr_state [9]: {
  [class_list ::= class_list class (*) , {EOF CLASS }]
}

-------------------
lalr_state [10]: {
  [iden ::= ID (*) , {PLUS MINUS TIMES LPAREN RPAREN LBRACE BOOLEAN INT BYTE LT EQUAL AND NOT COMMA DOT NEW VOID ASSIGN SEMI MEGGYCOLOR MEGGYBUTTON MEGGYTONE MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}

-------------------
lalr_state [11]: {
  [class ::= CLASS iden (*) LBRACE var_list method_list RBRACE , {EOF CLASS }]
}
transition on LBRACE to state [12]

-------------------
lalr_state [12]: {
  [var_list ::= (*) , {RBRACE BOOLEAN INT BYTE PUBLIC VOID MEGGYCOLOR MEGGYBUTTON MEGGYTONE ID }]
  [var_list ::= (*) var_list var , {RBRACE BOOLEAN INT BYTE PUBLIC VOID MEGGYCOLOR MEGGYBUTTON MEGGYTONE ID }]
  [class ::= CLASS iden LBRACE (*) var_list method_list RBRACE , {EOF CLASS }]
}
transition on var_list to state [13]

-------------------
lalr_state [13]: {
  [type ::= (*) VOID , {ID }]
  [type ::= (*) BOOLEAN , {ID }]
  [method_list ::= (*) method_list method , {RBRACE PUBLIC }]
  [type ::= (*) MEGGYBUTTON , {ID }]
  [type ::= (*) INT , {ID }]
  [var_list ::= var_list (*) var , {RBRACE BOOLEAN INT BYTE PUBLIC VOID MEGGYCOLOR MEGGYBUTTON MEGGYTONE ID }]
  [type ::= (*) iden , {ID }]
  [type ::= (*) MEGGYCOLOR , {ID }]
  [type ::= (*) BYTE , {ID }]
  [class ::= CLASS iden LBRACE var_list (*) method_list RBRACE , {EOF CLASS }]
  [iden ::= (*) ID , {ID }]
  [method_list ::= (*) , {RBRACE PUBLIC }]
  [var ::= (*) type iden SEMI , {RBRACE BOOLEAN INT BYTE PUBLIC VOID MEGGYCOLOR MEGGYBUTTON MEGGYTONE ID }]
  [type ::= (*) MEGGYTONE , {ID }]
}
transition on var to state [24]
transition on BYTE to state [23]
transition on MEGGYCOLOR to state [22]
transition on method_list to state [21]
transition on type to state [20]
transition on MEGGYBUTTON to state [19]
transition on ID to state [10]
transition on MEGGYTONE to state [18]
transition on iden to state [17]
transition on VOID to state [16]
transition on BOOLEAN to state [15]
transition on INT to state [14]

-------------------
lalr_state [14]: {
  [type ::= INT (*) , {ID }]
}

-------------------
lalr_state [15]: {
  [type ::= BOOLEAN (*) , {ID }]
}

-------------------
lalr_state [16]: {
  [type ::= VOID (*) , {ID }]
}

-------------------
lalr_state [17]: {
  [type ::= iden (*) , {ID }]
}

-------------------
lalr_state [18]: {
  [type ::= MEGGYTONE (*) , {ID }]
}

-------------------
lalr_state [19]: {
  [type ::= MEGGYBUTTON (*) , {ID }]
}

-------------------
lalr_state [20]: {
  [iden ::= (*) ID , {SEMI }]
  [var ::= type (*) iden SEMI , {MINUS LPAREN LBRACE RBRACE BOOLEAN INT BYTE IF NOT WHILE NEW PUBLIC RETURN VOID MEGGYCOLOR MEGGYBUTTON MEGGYTONE MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on iden to state [146]
transition on ID to state [10]

-------------------
lalr_state [21]: {
  [method ::= (*) PUBLIC type iden LPAREN formal_list RPAREN LBRACE var_list statement_list RBRACE , {RBRACE PUBLIC }]
  [class ::= CLASS iden LBRACE var_list method_list (*) RBRACE , {EOF CLASS }]
  [method ::= (*) PUBLIC type iden LPAREN formal_list RPAREN LBRACE var_list statement_list RETURN expression SEMI RBRACE , {RBRACE PUBLIC }]
  [method_list ::= method_list (*) method , {RBRACE PUBLIC }]
}
transition on method to state [27]
transition on PUBLIC to state [26]
transition on RBRACE to state [25]

-------------------
lalr_state [22]: {
  [type ::= MEGGYCOLOR (*) , {ID }]
}

-------------------
lalr_state [23]: {
  [type ::= BYTE (*) , {ID }]
}

-------------------
lalr_state [24]: {
  [var_list ::= var_list var (*) , {MINUS LPAREN LBRACE RBRACE BOOLEAN INT BYTE IF NOT WHILE NEW PUBLIC RETURN VOID MEGGYCOLOR MEGGYBUTTON MEGGYTONE MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}

-------------------
lalr_state [25]: {
  [class ::= CLASS iden LBRACE var_list method_list RBRACE (*) , {EOF CLASS }]
}

-------------------
lalr_state [26]: {
  [type ::= (*) VOID , {ID }]
  [type ::= (*) BOOLEAN , {ID }]
  [type ::= (*) MEGGYBUTTON , {ID }]
  [type ::= (*) INT , {ID }]
  [method ::= PUBLIC (*) type iden LPAREN formal_list RPAREN LBRACE var_list statement_list RBRACE , {RBRACE PUBLIC }]
  [type ::= (*) iden , {ID }]
  [type ::= (*) MEGGYCOLOR , {ID }]
  [type ::= (*) BYTE , {ID }]
  [iden ::= (*) ID , {ID }]
  [method ::= PUBLIC (*) type iden LPAREN formal_list RPAREN LBRACE var_list statement_list RETURN expression SEMI RBRACE , {RBRACE PUBLIC }]
  [type ::= (*) MEGGYTONE , {ID }]
}
transition on BYTE to state [23]
transition on type to state [28]
transition on MEGGYCOLOR to state [22]
transition on MEGGYBUTTON to state [19]
transition on ID to state [10]
transition on MEGGYTONE to state [18]
transition on iden to state [17]
transition on VOID to state [16]
transition on BOOLEAN to state [15]
transition on INT to state [14]

-------------------
lalr_state [27]: {
  [method_list ::= method_list method (*) , {RBRACE PUBLIC }]
}

-------------------
lalr_state [28]: {
  [method ::= PUBLIC type (*) iden LPAREN formal_list RPAREN LBRACE var_list statement_list RBRACE , {RBRACE PUBLIC }]
  [method ::= PUBLIC type (*) iden LPAREN formal_list RPAREN LBRACE var_list statement_list RETURN expression SEMI RBRACE , {RBRACE PUBLIC }]
  [iden ::= (*) ID , {LPAREN }]
}
transition on iden to state [29]
transition on ID to state [10]

-------------------
lalr_state [29]: {
  [method ::= PUBLIC type iden (*) LPAREN formal_list RPAREN LBRACE var_list statement_list RBRACE , {RBRACE PUBLIC }]
  [method ::= PUBLIC type iden (*) LPAREN formal_list RPAREN LBRACE var_list statement_list RETURN expression SEMI RBRACE , {RBRACE PUBLIC }]
}
transition on LPAREN to state [30]

-------------------
lalr_state [30]: {
  [formal_list ::= (*) , {RPAREN BOOLEAN INT BYTE COMMA VOID MEGGYCOLOR MEGGYBUTTON MEGGYTONE ID }]
  [method ::= PUBLIC type iden LPAREN (*) formal_list RPAREN LBRACE var_list statement_list RETURN expression SEMI RBRACE , {RBRACE PUBLIC }]
  [formal_list ::= (*) formal_list formal , {RPAREN BOOLEAN INT BYTE COMMA VOID MEGGYCOLOR MEGGYBUTTON MEGGYTONE ID }]
  [formal_list ::= (*) formal_list COMMA formal , {RPAREN BOOLEAN INT BYTE COMMA VOID MEGGYCOLOR MEGGYBUTTON MEGGYTONE ID }]
  [method ::= PUBLIC type iden LPAREN (*) formal_list RPAREN LBRACE var_list statement_list RBRACE , {RBRACE PUBLIC }]
}
transition on formal_list to state [31]

-------------------
lalr_state [31]: {
  [type ::= (*) VOID , {ID }]
  [type ::= (*) BOOLEAN , {ID }]
  [formal_list ::= formal_list (*) COMMA formal , {RPAREN BOOLEAN INT BYTE COMMA VOID MEGGYCOLOR MEGGYBUTTON MEGGYTONE ID }]
  [method ::= PUBLIC type iden LPAREN formal_list (*) RPAREN LBRACE var_list statement_list RBRACE , {RBRACE PUBLIC }]
  [type ::= (*) MEGGYBUTTON , {ID }]
  [type ::= (*) INT , {ID }]
  [formal ::= (*) type iden , {RPAREN BOOLEAN INT BYTE COMMA VOID MEGGYCOLOR MEGGYBUTTON MEGGYTONE ID }]
  [type ::= (*) iden , {ID }]
  [method ::= PUBLIC type iden LPAREN formal_list (*) RPAREN LBRACE var_list statement_list RETURN expression SEMI RBRACE , {RBRACE PUBLIC }]
  [type ::= (*) MEGGYCOLOR , {ID }]
  [type ::= (*) BYTE , {ID }]
  [formal_list ::= formal_list (*) formal , {RPAREN BOOLEAN INT BYTE COMMA VOID MEGGYCOLOR MEGGYBUTTON MEGGYTONE ID }]
  [iden ::= (*) ID , {ID }]
  [type ::= (*) MEGGYTONE , {ID }]
}
transition on BYTE to state [23]
transition on RPAREN to state [35]
transition on COMMA to state [34]
transition on type to state [33]
transition on MEGGYCOLOR to state [22]
transition on MEGGYBUTTON to state [19]
transition on ID to state [10]
transition on MEGGYTONE to state [18]
transition on iden to state [17]
transition on VOID to state [16]
transition on BOOLEAN to state [15]
transition on formal to state [32]
transition on INT to state [14]

-------------------
lalr_state [32]: {
  [formal_list ::= formal_list formal (*) , {RPAREN BOOLEAN INT BYTE COMMA VOID MEGGYCOLOR MEGGYBUTTON MEGGYTONE ID }]
}

-------------------
lalr_state [33]: {
  [formal ::= type (*) iden , {RPAREN BOOLEAN INT BYTE COMMA VOID MEGGYCOLOR MEGGYBUTTON MEGGYTONE ID }]
  [iden ::= (*) ID , {RPAREN BOOLEAN INT BYTE COMMA VOID MEGGYCOLOR MEGGYBUTTON MEGGYTONE ID }]
}
transition on iden to state [145]
transition on ID to state [10]

-------------------
lalr_state [34]: {
  [formal_list ::= formal_list COMMA (*) formal , {RPAREN BOOLEAN INT BYTE COMMA VOID MEGGYCOLOR MEGGYBUTTON MEGGYTONE ID }]
  [type ::= (*) VOID , {ID }]
  [type ::= (*) BOOLEAN , {ID }]
  [type ::= (*) MEGGYBUTTON , {ID }]
  [type ::= (*) INT , {ID }]
  [formal ::= (*) type iden , {RPAREN BOOLEAN INT BYTE COMMA VOID MEGGYCOLOR MEGGYBUTTON MEGGYTONE ID }]
  [type ::= (*) iden , {ID }]
  [type ::= (*) MEGGYCOLOR , {ID }]
  [type ::= (*) BYTE , {ID }]
  [iden ::= (*) ID , {ID }]
  [type ::= (*) MEGGYTONE , {ID }]
}
transition on BYTE to state [23]
transition on type to state [33]
transition on MEGGYCOLOR to state [22]
transition on MEGGYBUTTON to state [19]
transition on ID to state [10]
transition on MEGGYTONE to state [18]
transition on iden to state [17]
transition on VOID to state [16]
transition on BOOLEAN to state [15]
transition on formal to state [144]
transition on INT to state [14]

-------------------
lalr_state [35]: {
  [method ::= PUBLIC type iden LPAREN formal_list RPAREN (*) LBRACE var_list statement_list RETURN expression SEMI RBRACE , {RBRACE PUBLIC }]
  [method ::= PUBLIC type iden LPAREN formal_list RPAREN (*) LBRACE var_list statement_list RBRACE , {RBRACE PUBLIC }]
}
transition on LBRACE to state [36]

-------------------
lalr_state [36]: {
  [method ::= PUBLIC type iden LPAREN formal_list RPAREN LBRACE (*) var_list statement_list RETURN expression SEMI RBRACE , {RBRACE PUBLIC }]
  [var_list ::= (*) , {MINUS LPAREN LBRACE RBRACE BOOLEAN INT BYTE IF NOT WHILE NEW RETURN VOID MEGGYCOLOR MEGGYBUTTON MEGGYTONE MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [var_list ::= (*) var_list var , {MINUS LPAREN LBRACE RBRACE BOOLEAN INT BYTE IF NOT WHILE NEW RETURN VOID MEGGYCOLOR MEGGYBUTTON MEGGYTONE MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [method ::= PUBLIC type iden LPAREN formal_list RPAREN LBRACE (*) var_list statement_list RBRACE , {RBRACE PUBLIC }]
}
transition on var_list to state [37]

-------------------
lalr_state [37]: {
  [type ::= (*) VOID , {ID }]
  [type ::= (*) BOOLEAN , {ID }]
  [method ::= PUBLIC type iden LPAREN formal_list RPAREN LBRACE var_list (*) statement_list RBRACE , {RBRACE PUBLIC }]
  [statement_list ::= (*) statement_list statement , {MINUS LPAREN LBRACE RBRACE IF NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [type ::= (*) MEGGYBUTTON , {ID }]
  [type ::= (*) INT , {ID }]
  [method ::= PUBLIC type iden LPAREN formal_list RPAREN LBRACE var_list (*) statement_list RETURN expression SEMI RBRACE , {RBRACE PUBLIC }]
  [var_list ::= var_list (*) var , {MINUS LPAREN LBRACE RBRACE BOOLEAN INT BYTE IF NOT WHILE NEW RETURN VOID MEGGYCOLOR MEGGYBUTTON MEGGYTONE MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [type ::= (*) iden , {ID }]
  [type ::= (*) MEGGYCOLOR , {ID }]
  [type ::= (*) BYTE , {ID }]
  [iden ::= (*) ID , {ID }]
  [statement_list ::= (*) , {MINUS LPAREN LBRACE RBRACE IF NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [var ::= (*) type iden SEMI , {MINUS LPAREN LBRACE RBRACE BOOLEAN INT BYTE IF NOT WHILE NEW RETURN VOID MEGGYCOLOR MEGGYBUTTON MEGGYTONE MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [type ::= (*) MEGGYTONE , {ID }]
}
transition on var to state [24]
transition on BYTE to state [23]
transition on statement_list to state [38]
transition on MEGGYCOLOR to state [22]
transition on type to state [20]
transition on MEGGYBUTTON to state [19]
transition on ID to state [10]
transition on MEGGYTONE to state [18]
transition on iden to state [17]
transition on VOID to state [16]
transition on BOOLEAN to state [15]
transition on INT to state [14]

-------------------
lalr_state [38]: {
  [expression ::= (*) NOT expression , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) expression DOT iden LPAREN exp_list RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [statement ::= (*) MEGGYSETPIXEL LPAREN expression COMMA expression COMMA expression RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [statement ::= (*) WHILE LPAREN expression RPAREN statement , {MINUS LPAREN LBRACE RBRACE IF NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression TIMES expression , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) LPAREN BYTE RPAREN expression , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) TRUE , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) THIS , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [statement ::= (*) IF LPAREN expression RPAREN statement , {MINUS LPAREN LBRACE RBRACE IF NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [statement ::= (*) iden ASSIGN expression SEMI , {MINUS LPAREN LBRACE RBRACE IF NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression PLUS expression , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) MEGGYGETPIXEL LPAREN expression COMMA expression RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) LPAREN expression RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [method ::= PUBLIC type iden LPAREN formal_list RPAREN LBRACE var_list statement_list (*) RETURN expression SEMI RBRACE , {RBRACE PUBLIC }]
  [statement ::= (*) MEGGYDELAY LPAREN expression RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [statement ::= (*) expression DOT iden LPAREN exp_list RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression AND expression , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) MINUS expression , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) INT_LITERAL , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) FALSE , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) NEW iden LPAREN RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [iden ::= (*) ID , {PLUS MINUS TIMES LT EQUAL AND DOT ASSIGN }]
  [statement ::= (*) IF LPAREN expression RPAREN statement ELSE statement , {MINUS LPAREN LBRACE RBRACE IF NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [statement_list ::= statement_list (*) statement , {MINUS LPAREN LBRACE RBRACE IF NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression MINUS expression , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) MEGGYCHECKBUTTON LPAREN expression RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) iden , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [method ::= PUBLIC type iden LPAREN formal_list RPAREN LBRACE var_list statement_list (*) RBRACE , {RBRACE PUBLIC }]
  [statement ::= (*) MEGGYTONESTART LPAREN expression COMMA expression RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [statement ::= (*) LBRACE statement_list RBRACE , {MINUS LPAREN LBRACE RBRACE IF NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression EQUAL expression , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) expression LT expression , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) TONE_LITERAL , {PLUS MINUS TIMES LT EQUAL AND DOT }]
}
transition on iden to state [62]
transition on MEGGYGETPIXEL to state [61]
transition on MEGGYDELAY to state [60]
transition on NEW to state [59]
transition on BUTTON_LITERAL to state [58]
transition on MINUS to state [57]
transition on FALSE to state [56]
transition on MEGGYCHECKBUTTON to state [55]
transition on expression to state [54]
transition on COLOR_LITERAL to state [53]
transition on MEGGYSETPIXEL to state [52]
transition on INT_LITERAL to state [51]
transition on THIS to state [50]
transition on ID to state [10]
transition on LPAREN to state [49]
transition on LBRACE to state [48]
transition on IF to state [47]
transition on TONE_LITERAL to state [46]
transition on TRUE to state [45]
transition on RETURN to state [44]
transition on NOT to state [43]
transition on WHILE to state [42]
transition on RBRACE to state [41]
transition on statement to state [40]
transition on MEGGYTONESTART to state [39]

-------------------
lalr_state [39]: {
  [statement ::= MEGGYTONESTART (*) LPAREN expression COMMA expression RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on LPAREN to state [138]

-------------------
lalr_state [40]: {
  [statement_list ::= statement_list statement (*) , {MINUS LPAREN LBRACE RBRACE IF NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}

-------------------
lalr_state [41]: {
  [method ::= PUBLIC type iden LPAREN formal_list RPAREN LBRACE var_list statement_list RBRACE (*) , {RBRACE PUBLIC }]
}

-------------------
lalr_state [42]: {
  [statement ::= WHILE (*) LPAREN expression RPAREN statement , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on LPAREN to state [134]

-------------------
lalr_state [43]: {
  [expression ::= (*) NOT expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression DOT iden LPAREN exp_list RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression TIMES expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) LPAREN BYTE RPAREN expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) TRUE , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) THIS , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression PLUS expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) MEGGYGETPIXEL LPAREN expression COMMA expression RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) LPAREN expression RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression AND expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) MINUS expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) INT_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) FALSE , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) NEW iden LPAREN RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [iden ::= (*) ID , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression MINUS expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) MEGGYCHECKBUTTON LPAREN expression RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) iden , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression EQUAL expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression LT expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) TONE_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= NOT (*) expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on BUTTON_LITERAL to state [58]
transition on LPAREN to state [49]
transition on COLOR_LITERAL to state [53]
transition on NOT to state [43]
transition on TONE_LITERAL to state [46]
transition on THIS to state [50]
transition on expression to state [133]
transition on ID to state [10]
transition on MEGGYGETPIXEL to state [61]
transition on FALSE to state [56]
transition on iden to state [64]
transition on INT_LITERAL to state [51]
transition on TRUE to state [45]
transition on NEW to state [59]
transition on MEGGYCHECKBUTTON to state [55]
transition on MINUS to state [57]

-------------------
lalr_state [44]: {
  [expression ::= (*) NOT expression , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [expression ::= (*) expression DOT iden LPAREN exp_list RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [expression ::= (*) expression TIMES expression , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [expression ::= (*) LPAREN BYTE RPAREN expression , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [expression ::= (*) TRUE , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [expression ::= (*) THIS , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [expression ::= (*) expression PLUS expression , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [expression ::= (*) MEGGYGETPIXEL LPAREN expression COMMA expression RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [expression ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [expression ::= (*) LPAREN expression RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [method ::= PUBLIC type iden LPAREN formal_list RPAREN LBRACE var_list statement_list RETURN (*) expression SEMI RBRACE , {RBRACE PUBLIC }]
  [expression ::= (*) expression AND expression , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [expression ::= (*) MINUS expression , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [expression ::= (*) INT_LITERAL , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [expression ::= (*) FALSE , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [expression ::= (*) NEW iden LPAREN RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [iden ::= (*) ID , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [expression ::= (*) expression MINUS expression , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [expression ::= (*) MEGGYCHECKBUTTON LPAREN expression RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [expression ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [expression ::= (*) iden , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [expression ::= (*) expression EQUAL expression , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [expression ::= (*) expression LT expression , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [expression ::= (*) TONE_LITERAL , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
}
transition on BUTTON_LITERAL to state [58]
transition on LPAREN to state [49]
transition on COLOR_LITERAL to state [53]
transition on NOT to state [43]
transition on TONE_LITERAL to state [46]
transition on THIS to state [50]
transition on expression to state [130]
transition on ID to state [10]
transition on MEGGYGETPIXEL to state [61]
transition on FALSE to state [56]
transition on iden to state [64]
transition on INT_LITERAL to state [51]
transition on TRUE to state [45]
transition on NEW to state [59]
transition on MEGGYCHECKBUTTON to state [55]
transition on MINUS to state [57]

-------------------
lalr_state [45]: {
  [expression ::= TRUE (*) , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}

-------------------
lalr_state [46]: {
  [expression ::= TONE_LITERAL (*) , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}

-------------------
lalr_state [47]: {
  [statement ::= IF (*) LPAREN expression RPAREN statement ELSE statement , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [statement ::= IF (*) LPAREN expression RPAREN statement , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on LPAREN to state [124]

-------------------
lalr_state [48]: {
  [statement_list ::= (*) , {MINUS LPAREN LBRACE RBRACE IF NOT WHILE NEW MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [statement ::= LBRACE (*) statement_list RBRACE , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [statement_list ::= (*) statement_list statement , {MINUS LPAREN LBRACE RBRACE IF NOT WHILE NEW MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on statement_list to state [122]

-------------------
lalr_state [49]: {
  [expression ::= (*) NOT expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) expression DOT iden LPAREN exp_list RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) expression TIMES expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= LPAREN (*) BYTE RPAREN expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) LPAREN BYTE RPAREN expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) TRUE , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) THIS , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) expression PLUS expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) MEGGYGETPIXEL LPAREN expression COMMA expression RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= LPAREN (*) expression RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) LPAREN expression RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) expression AND expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) MINUS expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) INT_LITERAL , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) FALSE , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) NEW iden LPAREN RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [iden ::= (*) ID , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) expression MINUS expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) MEGGYCHECKBUTTON LPAREN expression RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) iden , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) expression EQUAL expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) expression LT expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) TONE_LITERAL , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
}
transition on BUTTON_LITERAL to state [58]
transition on BYTE to state [118]
transition on LPAREN to state [49]
transition on COLOR_LITERAL to state [53]
transition on NOT to state [43]
transition on TONE_LITERAL to state [46]
transition on THIS to state [50]
transition on expression to state [117]
transition on ID to state [10]
transition on MEGGYGETPIXEL to state [61]
transition on FALSE to state [56]
transition on iden to state [64]
transition on INT_LITERAL to state [51]
transition on TRUE to state [45]
transition on NEW to state [59]
transition on MEGGYCHECKBUTTON to state [55]
transition on MINUS to state [57]

-------------------
lalr_state [50]: {
  [expression ::= THIS (*) , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}

-------------------
lalr_state [51]: {
  [expression ::= INT_LITERAL (*) , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}

-------------------
lalr_state [52]: {
  [statement ::= MEGGYSETPIXEL (*) LPAREN expression COMMA expression COMMA expression RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on LPAREN to state [109]

-------------------
lalr_state [53]: {
  [expression ::= COLOR_LITERAL (*) , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}

-------------------
lalr_state [54]: {
  [expression ::= expression (*) PLUS expression , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= expression (*) DOT iden LPAREN exp_list RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= expression (*) TIMES expression , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= expression (*) EQUAL expression , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= expression (*) LT expression , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [statement ::= expression (*) DOT iden LPAREN exp_list RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) MINUS expression , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= expression (*) AND expression , {PLUS MINUS TIMES LT EQUAL AND DOT }]
}
transition on DOT to state [103]
transition on TIMES to state [72]
transition on MINUS to state [71]
transition on EQUAL to state [69]
transition on PLUS to state [68]
transition on AND to state [67]
transition on LT to state [66]

-------------------
lalr_state [55]: {
  [expression ::= MEGGYCHECKBUTTON (*) LPAREN expression RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on LPAREN to state [100]

-------------------
lalr_state [56]: {
  [expression ::= FALSE (*) , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}

-------------------
lalr_state [57]: {
  [expression ::= (*) NOT expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression DOT iden LPAREN exp_list RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression TIMES expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) LPAREN BYTE RPAREN expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) TRUE , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) THIS , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression PLUS expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) MEGGYGETPIXEL LPAREN expression COMMA expression RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) LPAREN expression RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= MINUS (*) expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression AND expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) MINUS expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) INT_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) FALSE , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) NEW iden LPAREN RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [iden ::= (*) ID , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression MINUS expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) MEGGYCHECKBUTTON LPAREN expression RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) iden , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression EQUAL expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression LT expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) TONE_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on BUTTON_LITERAL to state [58]
transition on LPAREN to state [49]
transition on COLOR_LITERAL to state [53]
transition on NOT to state [43]
transition on TONE_LITERAL to state [46]
transition on THIS to state [50]
transition on expression to state [99]
transition on ID to state [10]
transition on MEGGYGETPIXEL to state [61]
transition on FALSE to state [56]
transition on iden to state [64]
transition on INT_LITERAL to state [51]
transition on TRUE to state [45]
transition on NEW to state [59]
transition on MEGGYCHECKBUTTON to state [55]
transition on MINUS to state [57]

-------------------
lalr_state [58]: {
  [expression ::= BUTTON_LITERAL (*) , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}

-------------------
lalr_state [59]: {
  [expression ::= NEW (*) iden LPAREN RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [iden ::= (*) ID , {LPAREN }]
}
transition on iden to state [96]
transition on ID to state [10]

-------------------
lalr_state [60]: {
  [statement ::= MEGGYDELAY (*) LPAREN expression RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on LPAREN to state [92]

-------------------
lalr_state [61]: {
  [expression ::= MEGGYGETPIXEL (*) LPAREN expression COMMA expression RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on LPAREN to state [87]

-------------------
lalr_state [62]: {
  [expression ::= iden (*) , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [statement ::= iden (*) ASSIGN expression SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on ASSIGN to state [63]

-------------------
lalr_state [63]: {
  [expression ::= (*) NOT expression , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [expression ::= (*) expression DOT iden LPAREN exp_list RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [expression ::= (*) expression TIMES expression , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [expression ::= (*) LPAREN BYTE RPAREN expression , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [expression ::= (*) TRUE , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [expression ::= (*) THIS , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [statement ::= iden ASSIGN (*) expression SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression PLUS expression , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [expression ::= (*) MEGGYGETPIXEL LPAREN expression COMMA expression RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [expression ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [expression ::= (*) LPAREN expression RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [expression ::= (*) expression AND expression , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [expression ::= (*) MINUS expression , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [expression ::= (*) INT_LITERAL , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [expression ::= (*) FALSE , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [expression ::= (*) NEW iden LPAREN RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [iden ::= (*) ID , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [expression ::= (*) expression MINUS expression , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [expression ::= (*) MEGGYCHECKBUTTON LPAREN expression RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [expression ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [expression ::= (*) iden , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [expression ::= (*) expression EQUAL expression , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [expression ::= (*) expression LT expression , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [expression ::= (*) TONE_LITERAL , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
}
transition on BUTTON_LITERAL to state [58]
transition on LPAREN to state [49]
transition on COLOR_LITERAL to state [53]
transition on NOT to state [43]
transition on TONE_LITERAL to state [46]
transition on THIS to state [50]
transition on expression to state [65]
transition on ID to state [10]
transition on MEGGYGETPIXEL to state [61]
transition on FALSE to state [56]
transition on iden to state [64]
transition on INT_LITERAL to state [51]
transition on TRUE to state [45]
transition on NEW to state [59]
transition on MEGGYCHECKBUTTON to state [55]
transition on MINUS to state [57]

-------------------
lalr_state [64]: {
  [expression ::= iden (*) , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}

-------------------
lalr_state [65]: {
  [expression ::= expression (*) PLUS expression , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [expression ::= expression (*) DOT iden LPAREN exp_list RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [expression ::= expression (*) TIMES expression , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [expression ::= expression (*) EQUAL expression , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [expression ::= expression (*) LT expression , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [expression ::= expression (*) MINUS expression , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [statement ::= iden ASSIGN expression (*) SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) AND expression , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
}
transition on DOT to state [73]
transition on TIMES to state [72]
transition on MINUS to state [71]
transition on SEMI to state [70]
transition on EQUAL to state [69]
transition on PLUS to state [68]
transition on AND to state [67]
transition on LT to state [66]

-------------------
lalr_state [66]: {
  [expression ::= (*) NOT expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression DOT iden LPAREN exp_list RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression TIMES expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) LPAREN BYTE RPAREN expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) TRUE , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) THIS , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression PLUS expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) MEGGYGETPIXEL LPAREN expression COMMA expression RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) LPAREN expression RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression AND expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) MINUS expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) INT_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) FALSE , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) NEW iden LPAREN RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [iden ::= (*) ID , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression MINUS expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) MEGGYCHECKBUTTON LPAREN expression RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) iden , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression LT (*) expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression EQUAL expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression LT expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) TONE_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on BUTTON_LITERAL to state [58]
transition on LPAREN to state [49]
transition on COLOR_LITERAL to state [53]
transition on NOT to state [43]
transition on TONE_LITERAL to state [46]
transition on THIS to state [50]
transition on expression to state [86]
transition on ID to state [10]
transition on MEGGYGETPIXEL to state [61]
transition on FALSE to state [56]
transition on iden to state [64]
transition on INT_LITERAL to state [51]
transition on TRUE to state [45]
transition on NEW to state [59]
transition on MEGGYCHECKBUTTON to state [55]
transition on MINUS to state [57]

-------------------
lalr_state [67]: {
  [expression ::= (*) NOT expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression DOT iden LPAREN exp_list RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression TIMES expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) LPAREN BYTE RPAREN expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) TRUE , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) THIS , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression PLUS expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) MEGGYGETPIXEL LPAREN expression COMMA expression RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) LPAREN expression RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression AND (*) expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression AND expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) MINUS expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) INT_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) FALSE , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) NEW iden LPAREN RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [iden ::= (*) ID , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression MINUS expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) MEGGYCHECKBUTTON LPAREN expression RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) iden , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression EQUAL expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression LT expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) TONE_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on BUTTON_LITERAL to state [58]
transition on LPAREN to state [49]
transition on COLOR_LITERAL to state [53]
transition on NOT to state [43]
transition on TONE_LITERAL to state [46]
transition on THIS to state [50]
transition on expression to state [85]
transition on ID to state [10]
transition on MEGGYGETPIXEL to state [61]
transition on FALSE to state [56]
transition on iden to state [64]
transition on INT_LITERAL to state [51]
transition on TRUE to state [45]
transition on NEW to state [59]
transition on MEGGYCHECKBUTTON to state [55]
transition on MINUS to state [57]

-------------------
lalr_state [68]: {
  [expression ::= (*) NOT expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression DOT iden LPAREN exp_list RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression TIMES expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) LPAREN BYTE RPAREN expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) TRUE , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) THIS , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression PLUS (*) expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression PLUS expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) MEGGYGETPIXEL LPAREN expression COMMA expression RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) LPAREN expression RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression AND expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) MINUS expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) INT_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) FALSE , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) NEW iden LPAREN RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [iden ::= (*) ID , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression MINUS expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) MEGGYCHECKBUTTON LPAREN expression RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) iden , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression EQUAL expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression LT expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) TONE_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on BUTTON_LITERAL to state [58]
transition on LPAREN to state [49]
transition on COLOR_LITERAL to state [53]
transition on NOT to state [43]
transition on TONE_LITERAL to state [46]
transition on THIS to state [50]
transition on expression to state [84]
transition on ID to state [10]
transition on MEGGYGETPIXEL to state [61]
transition on FALSE to state [56]
transition on iden to state [64]
transition on INT_LITERAL to state [51]
transition on TRUE to state [45]
transition on NEW to state [59]
transition on MEGGYCHECKBUTTON to state [55]
transition on MINUS to state [57]

-------------------
lalr_state [69]: {
  [expression ::= (*) NOT expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression DOT iden LPAREN exp_list RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression TIMES expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) LPAREN BYTE RPAREN expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) TRUE , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) THIS , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression PLUS expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) MEGGYGETPIXEL LPAREN expression COMMA expression RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) LPAREN expression RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression AND expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) MINUS expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) INT_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) FALSE , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) NEW iden LPAREN RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [iden ::= (*) ID , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression MINUS expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) MEGGYCHECKBUTTON LPAREN expression RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) iden , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression EQUAL (*) expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression EQUAL expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression LT expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) TONE_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on BUTTON_LITERAL to state [58]
transition on LPAREN to state [49]
transition on COLOR_LITERAL to state [53]
transition on NOT to state [43]
transition on TONE_LITERAL to state [46]
transition on THIS to state [50]
transition on expression to state [83]
transition on ID to state [10]
transition on MEGGYGETPIXEL to state [61]
transition on FALSE to state [56]
transition on iden to state [64]
transition on INT_LITERAL to state [51]
transition on TRUE to state [45]
transition on NEW to state [59]
transition on MEGGYCHECKBUTTON to state [55]
transition on MINUS to state [57]

-------------------
lalr_state [70]: {
  [statement ::= iden ASSIGN expression SEMI (*) , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}

-------------------
lalr_state [71]: {
  [expression ::= (*) NOT expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression DOT iden LPAREN exp_list RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression TIMES expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) LPAREN BYTE RPAREN expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) TRUE , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) THIS , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression PLUS expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) MEGGYGETPIXEL LPAREN expression COMMA expression RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) LPAREN expression RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression AND expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) MINUS expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) INT_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) FALSE , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) NEW iden LPAREN RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [iden ::= (*) ID , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression MINUS (*) expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression MINUS expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) MEGGYCHECKBUTTON LPAREN expression RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) iden , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression EQUAL expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression LT expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) TONE_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on BUTTON_LITERAL to state [58]
transition on LPAREN to state [49]
transition on COLOR_LITERAL to state [53]
transition on NOT to state [43]
transition on TONE_LITERAL to state [46]
transition on THIS to state [50]
transition on expression to state [82]
transition on ID to state [10]
transition on MEGGYGETPIXEL to state [61]
transition on FALSE to state [56]
transition on iden to state [64]
transition on INT_LITERAL to state [51]
transition on TRUE to state [45]
transition on NEW to state [59]
transition on MEGGYCHECKBUTTON to state [55]
transition on MINUS to state [57]

-------------------
lalr_state [72]: {
  [expression ::= (*) NOT expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression DOT iden LPAREN exp_list RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression TIMES (*) expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression TIMES expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) LPAREN BYTE RPAREN expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) TRUE , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) THIS , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression PLUS expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) MEGGYGETPIXEL LPAREN expression COMMA expression RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) LPAREN expression RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression AND expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) MINUS expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) INT_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) FALSE , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) NEW iden LPAREN RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [iden ::= (*) ID , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression MINUS expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) MEGGYCHECKBUTTON LPAREN expression RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) iden , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression EQUAL expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression LT expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) TONE_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on BUTTON_LITERAL to state [58]
transition on LPAREN to state [49]
transition on COLOR_LITERAL to state [53]
transition on NOT to state [43]
transition on TONE_LITERAL to state [46]
transition on THIS to state [50]
transition on expression to state [81]
transition on ID to state [10]
transition on MEGGYGETPIXEL to state [61]
transition on FALSE to state [56]
transition on iden to state [64]
transition on INT_LITERAL to state [51]
transition on TRUE to state [45]
transition on NEW to state [59]
transition on MEGGYCHECKBUTTON to state [55]
transition on MINUS to state [57]

-------------------
lalr_state [73]: {
  [expression ::= expression DOT (*) iden LPAREN exp_list RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [iden ::= (*) ID , {LPAREN }]
}
transition on iden to state [74]
transition on ID to state [10]

-------------------
lalr_state [74]: {
  [expression ::= expression DOT iden (*) LPAREN exp_list RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on LPAREN to state [75]

-------------------
lalr_state [75]: {
  [exp_list ::= (*) , {MINUS LPAREN RPAREN NOT COMMA NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp_list ::= (*) exp_list expression , {MINUS LPAREN RPAREN NOT COMMA NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp_list ::= (*) exp_list COMMA expression , {MINUS LPAREN RPAREN NOT COMMA NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression DOT iden LPAREN (*) exp_list RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on exp_list to state [76]

-------------------
lalr_state [76]: {
  [expression ::= (*) NOT expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression DOT iden LPAREN exp_list RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression TIMES expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) LPAREN BYTE RPAREN expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) TRUE , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) THIS , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression PLUS expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) MEGGYGETPIXEL LPAREN expression COMMA expression RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp_list ::= exp_list (*) COMMA expression , {MINUS LPAREN RPAREN NOT COMMA NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) LPAREN expression RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression AND expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) MINUS expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) INT_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) FALSE , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) NEW iden LPAREN RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [iden ::= (*) ID , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression MINUS expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) MEGGYCHECKBUTTON LPAREN expression RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp_list ::= exp_list (*) expression , {MINUS LPAREN RPAREN NOT COMMA NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) iden , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression DOT iden LPAREN exp_list (*) RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression EQUAL expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression LT expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) TONE_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on iden to state [64]
transition on MEGGYGETPIXEL to state [61]
transition on NEW to state [59]
transition on BUTTON_LITERAL to state [58]
transition on MINUS to state [57]
transition on FALSE to state [56]
transition on MEGGYCHECKBUTTON to state [55]
transition on expression to state [79]
transition on COMMA to state [78]
transition on COLOR_LITERAL to state [53]
transition on INT_LITERAL to state [51]
transition on THIS to state [50]
transition on ID to state [10]
transition on LPAREN to state [49]
transition on TONE_LITERAL to state [46]
transition on TRUE to state [45]
transition on NOT to state [43]
transition on RPAREN to state [77]

-------------------
lalr_state [77]: {
  [expression ::= expression DOT iden LPAREN exp_list RPAREN (*) , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}

-------------------
lalr_state [78]: {
  [expression ::= (*) NOT expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression DOT iden LPAREN exp_list RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression TIMES expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) LPAREN BYTE RPAREN expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) TRUE , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) THIS , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression PLUS expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) MEGGYGETPIXEL LPAREN expression COMMA expression RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp_list ::= exp_list COMMA (*) expression , {MINUS LPAREN RPAREN NOT COMMA NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) LPAREN expression RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression AND expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) MINUS expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) INT_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) FALSE , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) NEW iden LPAREN RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [iden ::= (*) ID , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression MINUS expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) MEGGYCHECKBUTTON LPAREN expression RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) iden , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression EQUAL expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression LT expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) TONE_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on BUTTON_LITERAL to state [58]
transition on LPAREN to state [49]
transition on COLOR_LITERAL to state [53]
transition on NOT to state [43]
transition on TONE_LITERAL to state [46]
transition on THIS to state [50]
transition on expression to state [80]
transition on ID to state [10]
transition on MEGGYGETPIXEL to state [61]
transition on FALSE to state [56]
transition on iden to state [64]
transition on INT_LITERAL to state [51]
transition on TRUE to state [45]
transition on NEW to state [59]
transition on MEGGYCHECKBUTTON to state [55]
transition on MINUS to state [57]

-------------------
lalr_state [79]: {
  [expression ::= expression (*) PLUS expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) DOT iden LPAREN exp_list RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp_list ::= exp_list expression (*) , {MINUS LPAREN RPAREN NOT COMMA NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) TIMES expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) EQUAL expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) LT expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) MINUS expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) AND expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on DOT to state [73]
transition on TIMES to state [72]
transition on MINUS to state [71]
transition on EQUAL to state [69]
transition on PLUS to state [68]
transition on AND to state [67]
transition on LT to state [66]

-------------------
lalr_state [80]: {
  [expression ::= expression (*) PLUS expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) DOT iden LPAREN exp_list RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) TIMES expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) EQUAL expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) LT expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp_list ::= exp_list COMMA expression (*) , {MINUS LPAREN RPAREN NOT COMMA NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) MINUS expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) AND expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on DOT to state [73]
transition on TIMES to state [72]
transition on MINUS to state [71]
transition on EQUAL to state [69]
transition on PLUS to state [68]
transition on AND to state [67]
transition on LT to state [66]

-------------------
lalr_state [81]: {
  [expression ::= expression (*) PLUS expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression TIMES expression (*) , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) DOT iden LPAREN exp_list RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) TIMES expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) EQUAL expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) LT expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) MINUS expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) AND expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on DOT to state [73]
transition on TIMES to state [72]
transition on MINUS to state [71]
transition on EQUAL to state [69]
transition on PLUS to state [68]
transition on AND to state [67]
transition on LT to state [66]

-------------------
lalr_state [82]: {
  [expression ::= expression (*) PLUS expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) DOT iden LPAREN exp_list RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) TIMES expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) EQUAL expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression MINUS expression (*) , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) LT expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) MINUS expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) AND expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on DOT to state [73]
transition on TIMES to state [72]
transition on MINUS to state [71]
transition on EQUAL to state [69]
transition on PLUS to state [68]
transition on AND to state [67]
transition on LT to state [66]

-------------------
lalr_state [83]: {
  [expression ::= expression (*) PLUS expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) DOT iden LPAREN exp_list RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression EQUAL expression (*) , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) TIMES expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) EQUAL expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) LT expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) MINUS expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) AND expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on DOT to state [73]
transition on TIMES to state [72]
transition on MINUS to state [71]
transition on EQUAL to state [69]
transition on PLUS to state [68]
transition on AND to state [67]
transition on LT to state [66]

-------------------
lalr_state [84]: {
  [expression ::= expression (*) PLUS expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) DOT iden LPAREN exp_list RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) TIMES expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) EQUAL expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) LT expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) MINUS expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) AND expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression PLUS expression (*) , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on DOT to state [73]
transition on TIMES to state [72]
transition on MINUS to state [71]
transition on EQUAL to state [69]
transition on PLUS to state [68]
transition on AND to state [67]
transition on LT to state [66]

-------------------
lalr_state [85]: {
  [expression ::= expression (*) PLUS expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) DOT iden LPAREN exp_list RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) TIMES expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) EQUAL expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) LT expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression AND expression (*) , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) MINUS expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) AND expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on DOT to state [73]
transition on TIMES to state [72]
transition on MINUS to state [71]
transition on EQUAL to state [69]
transition on PLUS to state [68]
transition on AND to state [67]
transition on LT to state [66]

-------------------
lalr_state [86]: {
  [expression ::= expression (*) PLUS expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) DOT iden LPAREN exp_list RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) TIMES expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) EQUAL expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression LT expression (*) , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) LT expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) MINUS expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) AND expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on DOT to state [73]
transition on TIMES to state [72]
transition on MINUS to state [71]
transition on EQUAL to state [69]
transition on PLUS to state [68]
transition on AND to state [67]
transition on LT to state [66]

-------------------
lalr_state [87]: {
  [expression ::= (*) NOT expression , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) expression DOT iden LPAREN exp_list RPAREN , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) expression TIMES expression , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) LPAREN BYTE RPAREN expression , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) TRUE , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) THIS , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= MEGGYGETPIXEL LPAREN (*) expression COMMA expression RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression PLUS expression , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) MEGGYGETPIXEL LPAREN expression COMMA expression RPAREN , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) LPAREN expression RPAREN , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) expression AND expression , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) MINUS expression , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) INT_LITERAL , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) FALSE , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) NEW iden LPAREN RPAREN , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [iden ::= (*) ID , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) expression MINUS expression , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) MEGGYCHECKBUTTON LPAREN expression RPAREN , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) iden , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) expression EQUAL expression , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) expression LT expression , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) TONE_LITERAL , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
}
transition on BUTTON_LITERAL to state [58]
transition on LPAREN to state [49]
transition on COLOR_LITERAL to state [53]
transition on NOT to state [43]
transition on TONE_LITERAL to state [46]
transition on THIS to state [50]
transition on expression to state [88]
transition on ID to state [10]
transition on MEGGYGETPIXEL to state [61]
transition on FALSE to state [56]
transition on iden to state [64]
transition on INT_LITERAL to state [51]
transition on TRUE to state [45]
transition on NEW to state [59]
transition on MEGGYCHECKBUTTON to state [55]
transition on MINUS to state [57]

-------------------
lalr_state [88]: {
  [expression ::= expression (*) PLUS expression , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= MEGGYGETPIXEL LPAREN expression (*) COMMA expression RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) DOT iden LPAREN exp_list RPAREN , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= expression (*) TIMES expression , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= expression (*) EQUAL expression , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= expression (*) LT expression , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= expression (*) MINUS expression , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= expression (*) AND expression , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
}
transition on DOT to state [73]
transition on TIMES to state [72]
transition on MINUS to state [71]
transition on EQUAL to state [69]
transition on PLUS to state [68]
transition on AND to state [67]
transition on LT to state [66]
transition on COMMA to state [89]

-------------------
lalr_state [89]: {
  [expression ::= (*) NOT expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) expression DOT iden LPAREN exp_list RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) expression TIMES expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) LPAREN BYTE RPAREN expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) TRUE , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) THIS , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= MEGGYGETPIXEL LPAREN expression COMMA (*) expression RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression PLUS expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) MEGGYGETPIXEL LPAREN expression COMMA expression RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) LPAREN expression RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) expression AND expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) MINUS expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) INT_LITERAL , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) FALSE , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) NEW iden LPAREN RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [iden ::= (*) ID , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) expression MINUS expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) MEGGYCHECKBUTTON LPAREN expression RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) iden , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) expression EQUAL expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) expression LT expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) TONE_LITERAL , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
}
transition on BUTTON_LITERAL to state [58]
transition on LPAREN to state [49]
transition on COLOR_LITERAL to state [53]
transition on NOT to state [43]
transition on TONE_LITERAL to state [46]
transition on THIS to state [50]
transition on expression to state [90]
transition on ID to state [10]
transition on MEGGYGETPIXEL to state [61]
transition on FALSE to state [56]
transition on iden to state [64]
transition on INT_LITERAL to state [51]
transition on TRUE to state [45]
transition on NEW to state [59]
transition on MEGGYCHECKBUTTON to state [55]
transition on MINUS to state [57]

-------------------
lalr_state [90]: {
  [expression ::= expression (*) PLUS expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= expression (*) DOT iden LPAREN exp_list RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= expression (*) TIMES expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= expression (*) EQUAL expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= expression (*) LT expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= expression (*) MINUS expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= expression (*) AND expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= MEGGYGETPIXEL LPAREN expression COMMA expression (*) RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on DOT to state [73]
transition on TIMES to state [72]
transition on MINUS to state [71]
transition on EQUAL to state [69]
transition on PLUS to state [68]
transition on AND to state [67]
transition on RPAREN to state [91]
transition on LT to state [66]

-------------------
lalr_state [91]: {
  [expression ::= MEGGYGETPIXEL LPAREN expression COMMA expression RPAREN (*) , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}

-------------------
lalr_state [92]: {
  [expression ::= (*) NOT expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) expression DOT iden LPAREN exp_list RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) expression TIMES expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) LPAREN BYTE RPAREN expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) TRUE , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) THIS , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) expression PLUS expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) MEGGYGETPIXEL LPAREN expression COMMA expression RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) LPAREN expression RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [statement ::= MEGGYDELAY LPAREN (*) expression RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression AND expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) MINUS expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) INT_LITERAL , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) FALSE , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) NEW iden LPAREN RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [iden ::= (*) ID , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) expression MINUS expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) MEGGYCHECKBUTTON LPAREN expression RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) iden , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) expression EQUAL expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) expression LT expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) TONE_LITERAL , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
}
transition on BUTTON_LITERAL to state [58]
transition on LPAREN to state [49]
transition on COLOR_LITERAL to state [53]
transition on NOT to state [43]
transition on TONE_LITERAL to state [46]
transition on THIS to state [50]
transition on expression to state [93]
transition on ID to state [10]
transition on MEGGYGETPIXEL to state [61]
transition on FALSE to state [56]
transition on iden to state [64]
transition on INT_LITERAL to state [51]
transition on TRUE to state [45]
transition on NEW to state [59]
transition on MEGGYCHECKBUTTON to state [55]
transition on MINUS to state [57]

-------------------
lalr_state [93]: {
  [expression ::= expression (*) PLUS expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= expression (*) DOT iden LPAREN exp_list RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [statement ::= MEGGYDELAY LPAREN expression (*) RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) TIMES expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= expression (*) EQUAL expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= expression (*) LT expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= expression (*) MINUS expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= expression (*) AND expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
}
transition on DOT to state [73]
transition on TIMES to state [72]
transition on MINUS to state [71]
transition on EQUAL to state [69]
transition on PLUS to state [68]
transition on AND to state [67]
transition on RPAREN to state [94]
transition on LT to state [66]

-------------------
lalr_state [94]: {
  [statement ::= MEGGYDELAY LPAREN expression RPAREN (*) SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on SEMI to state [95]

-------------------
lalr_state [95]: {
  [statement ::= MEGGYDELAY LPAREN expression RPAREN SEMI (*) , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}

-------------------
lalr_state [96]: {
  [expression ::= NEW iden (*) LPAREN RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on LPAREN to state [97]

-------------------
lalr_state [97]: {
  [expression ::= NEW iden LPAREN (*) RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on RPAREN to state [98]

-------------------
lalr_state [98]: {
  [expression ::= NEW iden LPAREN RPAREN (*) , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}

-------------------
lalr_state [99]: {
  [expression ::= expression (*) PLUS expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) DOT iden LPAREN exp_list RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) TIMES expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) EQUAL expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) LT expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) MINUS expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) AND expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= MINUS expression (*) , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on DOT to state [73]
transition on TIMES to state [72]
transition on MINUS to state [71]
transition on EQUAL to state [69]
transition on PLUS to state [68]
transition on AND to state [67]
transition on LT to state [66]

-------------------
lalr_state [100]: {
  [expression ::= (*) NOT expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) expression DOT iden LPAREN exp_list RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) expression TIMES expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) LPAREN BYTE RPAREN expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) TRUE , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) THIS , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) expression PLUS expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) MEGGYGETPIXEL LPAREN expression COMMA expression RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) LPAREN expression RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) expression AND expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) MINUS expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) INT_LITERAL , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) FALSE , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) NEW iden LPAREN RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [iden ::= (*) ID , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= MEGGYCHECKBUTTON LPAREN (*) expression RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression MINUS expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) MEGGYCHECKBUTTON LPAREN expression RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) iden , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) expression EQUAL expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) expression LT expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) TONE_LITERAL , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
}
transition on BUTTON_LITERAL to state [58]
transition on LPAREN to state [49]
transition on COLOR_LITERAL to state [53]
transition on NOT to state [43]
transition on TONE_LITERAL to state [46]
transition on THIS to state [50]
transition on expression to state [101]
transition on ID to state [10]
transition on MEGGYGETPIXEL to state [61]
transition on FALSE to state [56]
transition on iden to state [64]
transition on INT_LITERAL to state [51]
transition on TRUE to state [45]
transition on NEW to state [59]
transition on MEGGYCHECKBUTTON to state [55]
transition on MINUS to state [57]

-------------------
lalr_state [101]: {
  [expression ::= expression (*) PLUS expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= expression (*) DOT iden LPAREN exp_list RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= expression (*) TIMES expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= expression (*) EQUAL expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= expression (*) LT expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= expression (*) MINUS expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= MEGGYCHECKBUTTON LPAREN expression (*) RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) AND expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
}
transition on DOT to state [73]
transition on TIMES to state [72]
transition on MINUS to state [71]
transition on EQUAL to state [69]
transition on PLUS to state [68]
transition on AND to state [67]
transition on RPAREN to state [102]
transition on LT to state [66]

-------------------
lalr_state [102]: {
  [expression ::= MEGGYCHECKBUTTON LPAREN expression RPAREN (*) , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}

-------------------
lalr_state [103]: {
  [expression ::= expression DOT (*) iden LPAREN exp_list RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [statement ::= expression DOT (*) iden LPAREN exp_list RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [iden ::= (*) ID , {LPAREN }]
}
transition on iden to state [104]
transition on ID to state [10]

-------------------
lalr_state [104]: {
  [statement ::= expression DOT iden (*) LPAREN exp_list RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression DOT iden (*) LPAREN exp_list RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT }]
}
transition on LPAREN to state [105]

-------------------
lalr_state [105]: {
  [exp_list ::= (*) , {MINUS LPAREN RPAREN NOT COMMA NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [statement ::= expression DOT iden LPAREN (*) exp_list RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp_list ::= (*) exp_list expression , {MINUS LPAREN RPAREN NOT COMMA NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp_list ::= (*) exp_list COMMA expression , {MINUS LPAREN RPAREN NOT COMMA NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression DOT iden LPAREN (*) exp_list RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT }]
}
transition on exp_list to state [106]

-------------------
lalr_state [106]: {
  [expression ::= (*) NOT expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression DOT iden LPAREN exp_list RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression TIMES expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) LPAREN BYTE RPAREN expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) TRUE , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) THIS , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression PLUS expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) MEGGYGETPIXEL LPAREN expression COMMA expression RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [statement ::= expression DOT iden LPAREN exp_list (*) RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp_list ::= exp_list (*) COMMA expression , {MINUS LPAREN RPAREN NOT COMMA NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) LPAREN expression RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression AND expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) MINUS expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) INT_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) FALSE , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) NEW iden LPAREN RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [iden ::= (*) ID , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression MINUS expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) MEGGYCHECKBUTTON LPAREN expression RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp_list ::= exp_list (*) expression , {MINUS LPAREN RPAREN NOT COMMA NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) iden , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression DOT iden LPAREN exp_list (*) RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) expression EQUAL expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression LT expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) TONE_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on iden to state [64]
transition on MEGGYGETPIXEL to state [61]
transition on NEW to state [59]
transition on BUTTON_LITERAL to state [58]
transition on MINUS to state [57]
transition on FALSE to state [56]
transition on MEGGYCHECKBUTTON to state [55]
transition on expression to state [79]
transition on COMMA to state [78]
transition on COLOR_LITERAL to state [53]
transition on INT_LITERAL to state [51]
transition on THIS to state [50]
transition on ID to state [10]
transition on LPAREN to state [49]
transition on TONE_LITERAL to state [46]
transition on TRUE to state [45]
transition on NOT to state [43]
transition on RPAREN to state [107]

-------------------
lalr_state [107]: {
  [statement ::= expression DOT iden LPAREN exp_list RPAREN (*) SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression DOT iden LPAREN exp_list RPAREN (*) , {PLUS MINUS TIMES LT EQUAL AND DOT }]
}
transition on SEMI to state [108]

-------------------
lalr_state [108]: {
  [statement ::= expression DOT iden LPAREN exp_list RPAREN SEMI (*) , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}

-------------------
lalr_state [109]: {
  [expression ::= (*) NOT expression , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) expression DOT iden LPAREN exp_list RPAREN , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [statement ::= MEGGYSETPIXEL LPAREN (*) expression COMMA expression COMMA expression RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression TIMES expression , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) LPAREN BYTE RPAREN expression , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) TRUE , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) THIS , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) expression PLUS expression , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) MEGGYGETPIXEL LPAREN expression COMMA expression RPAREN , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) LPAREN expression RPAREN , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) expression AND expression , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) MINUS expression , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) INT_LITERAL , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) FALSE , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) NEW iden LPAREN RPAREN , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [iden ::= (*) ID , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) expression MINUS expression , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) MEGGYCHECKBUTTON LPAREN expression RPAREN , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) iden , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) expression EQUAL expression , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) expression LT expression , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) TONE_LITERAL , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
}
transition on BUTTON_LITERAL to state [58]
transition on LPAREN to state [49]
transition on COLOR_LITERAL to state [53]
transition on NOT to state [43]
transition on TONE_LITERAL to state [46]
transition on THIS to state [50]
transition on expression to state [110]
transition on ID to state [10]
transition on MEGGYGETPIXEL to state [61]
transition on FALSE to state [56]
transition on iden to state [64]
transition on INT_LITERAL to state [51]
transition on TRUE to state [45]
transition on NEW to state [59]
transition on MEGGYCHECKBUTTON to state [55]
transition on MINUS to state [57]

-------------------
lalr_state [110]: {
  [expression ::= expression (*) PLUS expression , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= expression (*) DOT iden LPAREN exp_list RPAREN , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= expression (*) TIMES expression , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= expression (*) EQUAL expression , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= expression (*) LT expression , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [statement ::= MEGGYSETPIXEL LPAREN expression (*) COMMA expression COMMA expression RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) MINUS expression , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= expression (*) AND expression , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
}
transition on DOT to state [73]
transition on TIMES to state [72]
transition on MINUS to state [71]
transition on EQUAL to state [69]
transition on PLUS to state [68]
transition on AND to state [67]
transition on LT to state [66]
transition on COMMA to state [111]

-------------------
lalr_state [111]: {
  [expression ::= (*) NOT expression , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [statement ::= MEGGYSETPIXEL LPAREN expression COMMA (*) expression COMMA expression RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression DOT iden LPAREN exp_list RPAREN , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) expression TIMES expression , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) LPAREN BYTE RPAREN expression , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) TRUE , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) THIS , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) expression PLUS expression , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) MEGGYGETPIXEL LPAREN expression COMMA expression RPAREN , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) LPAREN expression RPAREN , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) expression AND expression , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) MINUS expression , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) INT_LITERAL , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) FALSE , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) NEW iden LPAREN RPAREN , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [iden ::= (*) ID , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) expression MINUS expression , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) MEGGYCHECKBUTTON LPAREN expression RPAREN , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) iden , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) expression EQUAL expression , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) expression LT expression , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) TONE_LITERAL , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
}
transition on BUTTON_LITERAL to state [58]
transition on LPAREN to state [49]
transition on COLOR_LITERAL to state [53]
transition on NOT to state [43]
transition on TONE_LITERAL to state [46]
transition on THIS to state [50]
transition on expression to state [112]
transition on ID to state [10]
transition on MEGGYGETPIXEL to state [61]
transition on FALSE to state [56]
transition on iden to state [64]
transition on INT_LITERAL to state [51]
transition on TRUE to state [45]
transition on NEW to state [59]
transition on MEGGYCHECKBUTTON to state [55]
transition on MINUS to state [57]

-------------------
lalr_state [112]: {
  [expression ::= expression (*) PLUS expression , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= expression (*) DOT iden LPAREN exp_list RPAREN , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= expression (*) TIMES expression , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= expression (*) EQUAL expression , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [statement ::= MEGGYSETPIXEL LPAREN expression COMMA expression (*) COMMA expression RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) LT expression , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= expression (*) MINUS expression , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= expression (*) AND expression , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
}
transition on DOT to state [73]
transition on TIMES to state [72]
transition on MINUS to state [71]
transition on EQUAL to state [69]
transition on PLUS to state [68]
transition on AND to state [67]
transition on LT to state [66]
transition on COMMA to state [113]

-------------------
lalr_state [113]: {
  [expression ::= (*) NOT expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) expression DOT iden LPAREN exp_list RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) expression TIMES expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) LPAREN BYTE RPAREN expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) TRUE , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) THIS , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) expression PLUS expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) MEGGYGETPIXEL LPAREN expression COMMA expression RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) LPAREN expression RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) expression AND expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) MINUS expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) INT_LITERAL , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) FALSE , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) NEW iden LPAREN RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [iden ::= (*) ID , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) expression MINUS expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) MEGGYCHECKBUTTON LPAREN expression RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) iden , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) expression EQUAL expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) expression LT expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [statement ::= MEGGYSETPIXEL LPAREN expression COMMA expression COMMA (*) expression RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) TONE_LITERAL , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
}
transition on BUTTON_LITERAL to state [58]
transition on LPAREN to state [49]
transition on COLOR_LITERAL to state [53]
transition on NOT to state [43]
transition on TONE_LITERAL to state [46]
transition on THIS to state [50]
transition on expression to state [114]
transition on ID to state [10]
transition on MEGGYGETPIXEL to state [61]
transition on FALSE to state [56]
transition on iden to state [64]
transition on INT_LITERAL to state [51]
transition on TRUE to state [45]
transition on NEW to state [59]
transition on MEGGYCHECKBUTTON to state [55]
transition on MINUS to state [57]

-------------------
lalr_state [114]: {
  [expression ::= expression (*) PLUS expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= expression (*) DOT iden LPAREN exp_list RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [statement ::= MEGGYSETPIXEL LPAREN expression COMMA expression COMMA expression (*) RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) TIMES expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= expression (*) EQUAL expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= expression (*) LT expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= expression (*) MINUS expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= expression (*) AND expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
}
transition on DOT to state [73]
transition on TIMES to state [72]
transition on MINUS to state [71]
transition on EQUAL to state [69]
transition on PLUS to state [68]
transition on AND to state [67]
transition on RPAREN to state [115]
transition on LT to state [66]

-------------------
lalr_state [115]: {
  [statement ::= MEGGYSETPIXEL LPAREN expression COMMA expression COMMA expression RPAREN (*) SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on SEMI to state [116]

-------------------
lalr_state [116]: {
  [statement ::= MEGGYSETPIXEL LPAREN expression COMMA expression COMMA expression RPAREN SEMI (*) , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}

-------------------
lalr_state [117]: {
  [expression ::= expression (*) PLUS expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= expression (*) DOT iden LPAREN exp_list RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= expression (*) TIMES expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= expression (*) EQUAL expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= LPAREN expression (*) RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) LT expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= expression (*) MINUS expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= expression (*) AND expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
}
transition on DOT to state [73]
transition on TIMES to state [72]
transition on MINUS to state [71]
transition on EQUAL to state [69]
transition on PLUS to state [68]
transition on AND to state [67]
transition on RPAREN to state [121]
transition on LT to state [66]

-------------------
lalr_state [118]: {
  [expression ::= LPAREN BYTE (*) RPAREN expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on RPAREN to state [119]

-------------------
lalr_state [119]: {
  [expression ::= (*) NOT expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression DOT iden LPAREN exp_list RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= LPAREN BYTE RPAREN (*) expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression TIMES expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) LPAREN BYTE RPAREN expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) TRUE , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) THIS , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression PLUS expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) MEGGYGETPIXEL LPAREN expression COMMA expression RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) LPAREN expression RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression AND expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) MINUS expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) INT_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) FALSE , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) NEW iden LPAREN RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [iden ::= (*) ID , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression MINUS expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) MEGGYCHECKBUTTON LPAREN expression RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) iden , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression EQUAL expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression LT expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) TONE_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on BUTTON_LITERAL to state [58]
transition on LPAREN to state [49]
transition on COLOR_LITERAL to state [53]
transition on NOT to state [43]
transition on TONE_LITERAL to state [46]
transition on THIS to state [50]
transition on expression to state [120]
transition on ID to state [10]
transition on MEGGYGETPIXEL to state [61]
transition on FALSE to state [56]
transition on iden to state [64]
transition on INT_LITERAL to state [51]
transition on TRUE to state [45]
transition on NEW to state [59]
transition on MEGGYCHECKBUTTON to state [55]
transition on MINUS to state [57]

-------------------
lalr_state [120]: {
  [expression ::= expression (*) PLUS expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) DOT iden LPAREN exp_list RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= LPAREN BYTE RPAREN expression (*) , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) TIMES expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) EQUAL expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) LT expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) MINUS expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) AND expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on DOT to state [73]
transition on TIMES to state [72]
transition on MINUS to state [71]
transition on EQUAL to state [69]
transition on PLUS to state [68]
transition on AND to state [67]
transition on LT to state [66]

-------------------
lalr_state [121]: {
  [expression ::= LPAREN expression RPAREN (*) , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}

-------------------
lalr_state [122]: {
  [expression ::= (*) NOT expression , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) expression DOT iden LPAREN exp_list RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [statement ::= (*) MEGGYSETPIXEL LPAREN expression COMMA expression COMMA expression RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF NOT WHILE NEW MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [statement ::= (*) WHILE LPAREN expression RPAREN statement , {MINUS LPAREN LBRACE RBRACE IF NOT WHILE NEW MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression TIMES expression , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) LPAREN BYTE RPAREN expression , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) TRUE , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) THIS , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [statement ::= (*) IF LPAREN expression RPAREN statement , {MINUS LPAREN LBRACE RBRACE IF NOT WHILE NEW MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [statement ::= (*) iden ASSIGN expression SEMI , {MINUS LPAREN LBRACE RBRACE IF NOT WHILE NEW MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression PLUS expression , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) MEGGYGETPIXEL LPAREN expression COMMA expression RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) LPAREN expression RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [statement ::= (*) MEGGYDELAY LPAREN expression RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF NOT WHILE NEW MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [statement ::= (*) expression DOT iden LPAREN exp_list RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF NOT WHILE NEW MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression AND expression , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) MINUS expression , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) INT_LITERAL , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) FALSE , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) NEW iden LPAREN RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [iden ::= (*) ID , {PLUS MINUS TIMES LT EQUAL AND DOT ASSIGN }]
  [statement ::= (*) IF LPAREN expression RPAREN statement ELSE statement , {MINUS LPAREN LBRACE RBRACE IF NOT WHILE NEW MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [statement_list ::= statement_list (*) statement , {MINUS LPAREN LBRACE RBRACE IF NOT WHILE NEW MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression MINUS expression , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) MEGGYCHECKBUTTON LPAREN expression RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) iden , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [statement ::= LBRACE statement_list (*) RBRACE , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [statement ::= (*) MEGGYTONESTART LPAREN expression COMMA expression RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF NOT WHILE NEW MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [statement ::= (*) LBRACE statement_list RBRACE , {MINUS LPAREN LBRACE RBRACE IF NOT WHILE NEW MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression EQUAL expression , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) expression LT expression , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) TONE_LITERAL , {PLUS MINUS TIMES LT EQUAL AND DOT }]
}
transition on iden to state [62]
transition on MEGGYGETPIXEL to state [61]
transition on MEGGYDELAY to state [60]
transition on NEW to state [59]
transition on BUTTON_LITERAL to state [58]
transition on MINUS to state [57]
transition on FALSE to state [56]
transition on MEGGYCHECKBUTTON to state [55]
transition on expression to state [54]
transition on COLOR_LITERAL to state [53]
transition on MEGGYSETPIXEL to state [52]
transition on INT_LITERAL to state [51]
transition on THIS to state [50]
transition on ID to state [10]
transition on LPAREN to state [49]
transition on LBRACE to state [48]
transition on IF to state [47]
transition on TONE_LITERAL to state [46]
transition on TRUE to state [45]
transition on NOT to state [43]
transition on WHILE to state [42]
transition on RBRACE to state [123]
transition on statement to state [40]
transition on MEGGYTONESTART to state [39]

-------------------
lalr_state [123]: {
  [statement ::= LBRACE statement_list RBRACE (*) , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}

-------------------
lalr_state [124]: {
  [expression ::= (*) NOT expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) expression DOT iden LPAREN exp_list RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) expression TIMES expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) LPAREN BYTE RPAREN expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) TRUE , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) THIS , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [statement ::= IF LPAREN (*) expression RPAREN statement , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression PLUS expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) MEGGYGETPIXEL LPAREN expression COMMA expression RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) LPAREN expression RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) expression AND expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) MINUS expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) INT_LITERAL , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) FALSE , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) NEW iden LPAREN RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [iden ::= (*) ID , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [statement ::= IF LPAREN (*) expression RPAREN statement ELSE statement , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression MINUS expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) MEGGYCHECKBUTTON LPAREN expression RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) iden , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) expression EQUAL expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) expression LT expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) TONE_LITERAL , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
}
transition on BUTTON_LITERAL to state [58]
transition on LPAREN to state [49]
transition on COLOR_LITERAL to state [53]
transition on NOT to state [43]
transition on TONE_LITERAL to state [46]
transition on THIS to state [50]
transition on expression to state [125]
transition on ID to state [10]
transition on MEGGYGETPIXEL to state [61]
transition on FALSE to state [56]
transition on iden to state [64]
transition on INT_LITERAL to state [51]
transition on TRUE to state [45]
transition on NEW to state [59]
transition on MEGGYCHECKBUTTON to state [55]
transition on MINUS to state [57]

-------------------
lalr_state [125]: {
  [expression ::= expression (*) TIMES expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= expression (*) EQUAL expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [statement ::= IF LPAREN expression (*) RPAREN statement , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) DOT iden LPAREN exp_list RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= expression (*) LT expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= expression (*) MINUS expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= expression (*) AND expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= expression (*) PLUS expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [statement ::= IF LPAREN expression (*) RPAREN statement ELSE statement , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on DOT to state [73]
transition on TIMES to state [72]
transition on MINUS to state [71]
transition on EQUAL to state [69]
transition on PLUS to state [68]
transition on AND to state [67]
transition on RPAREN to state [126]
transition on LT to state [66]

-------------------
lalr_state [126]: {
  [expression ::= (*) NOT expression , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) expression DOT iden LPAREN exp_list RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [statement ::= (*) MEGGYSETPIXEL LPAREN expression COMMA expression COMMA expression RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [statement ::= (*) WHILE LPAREN expression RPAREN statement , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression TIMES expression , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) LPAREN BYTE RPAREN expression , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) TRUE , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) THIS , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [statement ::= IF LPAREN expression RPAREN (*) statement , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [statement ::= (*) IF LPAREN expression RPAREN statement , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [statement ::= (*) iden ASSIGN expression SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression PLUS expression , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) MEGGYGETPIXEL LPAREN expression COMMA expression RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) LPAREN expression RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [statement ::= (*) MEGGYDELAY LPAREN expression RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [statement ::= (*) expression DOT iden LPAREN exp_list RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression AND expression , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) MINUS expression , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) INT_LITERAL , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) FALSE , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) NEW iden LPAREN RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [statement ::= IF LPAREN expression RPAREN (*) statement ELSE statement , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [iden ::= (*) ID , {PLUS MINUS TIMES LT EQUAL AND DOT ASSIGN }]
  [statement ::= (*) IF LPAREN expression RPAREN statement ELSE statement , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression MINUS expression , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) MEGGYCHECKBUTTON LPAREN expression RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) iden , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [statement ::= (*) MEGGYTONESTART LPAREN expression COMMA expression RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [statement ::= (*) LBRACE statement_list RBRACE , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression EQUAL expression , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) expression LT expression , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) TONE_LITERAL , {PLUS MINUS TIMES LT EQUAL AND DOT }]
}
transition on iden to state [62]
transition on MEGGYGETPIXEL to state [61]
transition on MEGGYDELAY to state [60]
transition on NEW to state [59]
transition on BUTTON_LITERAL to state [58]
transition on MINUS to state [57]
transition on FALSE to state [56]
transition on MEGGYCHECKBUTTON to state [55]
transition on expression to state [54]
transition on COLOR_LITERAL to state [53]
transition on MEGGYSETPIXEL to state [52]
transition on INT_LITERAL to state [51]
transition on THIS to state [50]
transition on ID to state [10]
transition on LPAREN to state [49]
transition on LBRACE to state [48]
transition on IF to state [47]
transition on TONE_LITERAL to state [46]
transition on TRUE to state [45]
transition on NOT to state [43]
transition on WHILE to state [42]
transition on statement to state [127]
transition on MEGGYTONESTART to state [39]

-------------------
lalr_state [127]: {
  [statement ::= IF LPAREN expression RPAREN statement (*) , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [statement ::= IF LPAREN expression RPAREN statement (*) ELSE statement , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on ELSE to state [128]

-------------------
lalr_state [128]: {
  [expression ::= (*) NOT expression , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) expression DOT iden LPAREN exp_list RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [statement ::= (*) MEGGYSETPIXEL LPAREN expression COMMA expression COMMA expression RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [statement ::= (*) WHILE LPAREN expression RPAREN statement , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression TIMES expression , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) LPAREN BYTE RPAREN expression , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) TRUE , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) THIS , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [statement ::= (*) IF LPAREN expression RPAREN statement , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [statement ::= (*) iden ASSIGN expression SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression PLUS expression , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) MEGGYGETPIXEL LPAREN expression COMMA expression RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) LPAREN expression RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [statement ::= (*) MEGGYDELAY LPAREN expression RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [statement ::= (*) expression DOT iden LPAREN exp_list RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression AND expression , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) MINUS expression , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) INT_LITERAL , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [statement ::= IF LPAREN expression RPAREN statement ELSE (*) statement , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) FALSE , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) NEW iden LPAREN RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [iden ::= (*) ID , {PLUS MINUS TIMES LT EQUAL AND DOT ASSIGN }]
  [statement ::= (*) IF LPAREN expression RPAREN statement ELSE statement , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression MINUS expression , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) MEGGYCHECKBUTTON LPAREN expression RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) iden , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [statement ::= (*) MEGGYTONESTART LPAREN expression COMMA expression RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [statement ::= (*) LBRACE statement_list RBRACE , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression EQUAL expression , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) expression LT expression , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) TONE_LITERAL , {PLUS MINUS TIMES LT EQUAL AND DOT }]
}
transition on iden to state [62]
transition on MEGGYGETPIXEL to state [61]
transition on MEGGYDELAY to state [60]
transition on NEW to state [59]
transition on BUTTON_LITERAL to state [58]
transition on MINUS to state [57]
transition on FALSE to state [56]
transition on MEGGYCHECKBUTTON to state [55]
transition on expression to state [54]
transition on COLOR_LITERAL to state [53]
transition on MEGGYSETPIXEL to state [52]
transition on INT_LITERAL to state [51]
transition on THIS to state [50]
transition on ID to state [10]
transition on LPAREN to state [49]
transition on LBRACE to state [48]
transition on IF to state [47]
transition on TONE_LITERAL to state [46]
transition on TRUE to state [45]
transition on NOT to state [43]
transition on WHILE to state [42]
transition on statement to state [129]
transition on MEGGYTONESTART to state [39]

-------------------
lalr_state [129]: {
  [statement ::= IF LPAREN expression RPAREN statement ELSE statement (*) , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}

-------------------
lalr_state [130]: {
  [expression ::= expression (*) PLUS expression , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [expression ::= expression (*) DOT iden LPAREN exp_list RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [expression ::= expression (*) TIMES expression , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [expression ::= expression (*) EQUAL expression , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [expression ::= expression (*) LT expression , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [expression ::= expression (*) MINUS expression , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [method ::= PUBLIC type iden LPAREN formal_list RPAREN LBRACE var_list statement_list RETURN expression (*) SEMI RBRACE , {RBRACE PUBLIC }]
  [expression ::= expression (*) AND expression , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
}
transition on DOT to state [73]
transition on TIMES to state [72]
transition on MINUS to state [71]
transition on SEMI to state [131]
transition on EQUAL to state [69]
transition on PLUS to state [68]
transition on AND to state [67]
transition on LT to state [66]

-------------------
lalr_state [131]: {
  [method ::= PUBLIC type iden LPAREN formal_list RPAREN LBRACE var_list statement_list RETURN expression SEMI (*) RBRACE , {RBRACE PUBLIC }]
}
transition on RBRACE to state [132]

-------------------
lalr_state [132]: {
  [method ::= PUBLIC type iden LPAREN formal_list RPAREN LBRACE var_list statement_list RETURN expression SEMI RBRACE (*) , {RBRACE PUBLIC }]
}

-------------------
lalr_state [133]: {
  [expression ::= expression (*) PLUS expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) DOT iden LPAREN exp_list RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) TIMES expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) EQUAL expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) LT expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) MINUS expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) AND expression , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= NOT expression (*) , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on DOT to state [73]
transition on TIMES to state [72]
transition on MINUS to state [71]
transition on EQUAL to state [69]
transition on PLUS to state [68]
transition on AND to state [67]
transition on LT to state [66]

-------------------
lalr_state [134]: {
  [expression ::= (*) NOT expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) expression DOT iden LPAREN exp_list RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [statement ::= WHILE LPAREN (*) expression RPAREN statement , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression TIMES expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) LPAREN BYTE RPAREN expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) TRUE , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) THIS , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) expression PLUS expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) MEGGYGETPIXEL LPAREN expression COMMA expression RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) LPAREN expression RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) expression AND expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) MINUS expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) INT_LITERAL , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) FALSE , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) NEW iden LPAREN RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [iden ::= (*) ID , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) expression MINUS expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) MEGGYCHECKBUTTON LPAREN expression RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) iden , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) expression EQUAL expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) expression LT expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) TONE_LITERAL , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
}
transition on BUTTON_LITERAL to state [58]
transition on LPAREN to state [49]
transition on COLOR_LITERAL to state [53]
transition on NOT to state [43]
transition on TONE_LITERAL to state [46]
transition on THIS to state [50]
transition on expression to state [135]
transition on ID to state [10]
transition on MEGGYGETPIXEL to state [61]
transition on FALSE to state [56]
transition on iden to state [64]
transition on INT_LITERAL to state [51]
transition on TRUE to state [45]
transition on NEW to state [59]
transition on MEGGYCHECKBUTTON to state [55]
transition on MINUS to state [57]

-------------------
lalr_state [135]: {
  [expression ::= expression (*) PLUS expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= expression (*) DOT iden LPAREN exp_list RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= expression (*) TIMES expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= expression (*) EQUAL expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= expression (*) LT expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= expression (*) MINUS expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= expression (*) AND expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [statement ::= WHILE LPAREN expression (*) RPAREN statement , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on DOT to state [73]
transition on TIMES to state [72]
transition on MINUS to state [71]
transition on EQUAL to state [69]
transition on PLUS to state [68]
transition on AND to state [67]
transition on RPAREN to state [136]
transition on LT to state [66]

-------------------
lalr_state [136]: {
  [expression ::= (*) NOT expression , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [statement ::= WHILE LPAREN expression RPAREN (*) statement , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression DOT iden LPAREN exp_list RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [statement ::= (*) MEGGYSETPIXEL LPAREN expression COMMA expression COMMA expression RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [statement ::= (*) WHILE LPAREN expression RPAREN statement , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression TIMES expression , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) LPAREN BYTE RPAREN expression , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) TRUE , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) THIS , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [statement ::= (*) IF LPAREN expression RPAREN statement , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [statement ::= (*) iden ASSIGN expression SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression PLUS expression , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) MEGGYGETPIXEL LPAREN expression COMMA expression RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) LPAREN expression RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [statement ::= (*) MEGGYDELAY LPAREN expression RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [statement ::= (*) expression DOT iden LPAREN exp_list RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression AND expression , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) MINUS expression , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) INT_LITERAL , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) FALSE , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) NEW iden LPAREN RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [iden ::= (*) ID , {PLUS MINUS TIMES LT EQUAL AND DOT ASSIGN }]
  [statement ::= (*) IF LPAREN expression RPAREN statement ELSE statement , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression MINUS expression , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) MEGGYCHECKBUTTON LPAREN expression RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) iden , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [statement ::= (*) MEGGYTONESTART LPAREN expression COMMA expression RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [statement ::= (*) LBRACE statement_list RBRACE , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression EQUAL expression , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) expression LT expression , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) TONE_LITERAL , {PLUS MINUS TIMES LT EQUAL AND DOT }]
}
transition on iden to state [62]
transition on MEGGYGETPIXEL to state [61]
transition on MEGGYDELAY to state [60]
transition on NEW to state [59]
transition on BUTTON_LITERAL to state [58]
transition on MINUS to state [57]
transition on FALSE to state [56]
transition on MEGGYCHECKBUTTON to state [55]
transition on expression to state [54]
transition on COLOR_LITERAL to state [53]
transition on MEGGYSETPIXEL to state [52]
transition on INT_LITERAL to state [51]
transition on THIS to state [50]
transition on ID to state [10]
transition on LPAREN to state [49]
transition on LBRACE to state [48]
transition on IF to state [47]
transition on TONE_LITERAL to state [46]
transition on TRUE to state [45]
transition on NOT to state [43]
transition on WHILE to state [42]
transition on statement to state [137]
transition on MEGGYTONESTART to state [39]

-------------------
lalr_state [137]: {
  [statement ::= WHILE LPAREN expression RPAREN statement (*) , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}

-------------------
lalr_state [138]: {
  [expression ::= (*) NOT expression , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) expression DOT iden LPAREN exp_list RPAREN , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) expression TIMES expression , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) LPAREN BYTE RPAREN expression , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) TRUE , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) THIS , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) expression PLUS expression , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) MEGGYGETPIXEL LPAREN expression COMMA expression RPAREN , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) LPAREN expression RPAREN , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) expression AND expression , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) MINUS expression , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) INT_LITERAL , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) FALSE , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) NEW iden LPAREN RPAREN , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [iden ::= (*) ID , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) expression MINUS expression , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) MEGGYCHECKBUTTON LPAREN expression RPAREN , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) iden , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [statement ::= MEGGYTONESTART LPAREN (*) expression COMMA expression RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression EQUAL expression , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) expression LT expression , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= (*) TONE_LITERAL , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
}
transition on BUTTON_LITERAL to state [58]
transition on LPAREN to state [49]
transition on COLOR_LITERAL to state [53]
transition on NOT to state [43]
transition on TONE_LITERAL to state [46]
transition on THIS to state [50]
transition on expression to state [139]
transition on ID to state [10]
transition on MEGGYGETPIXEL to state [61]
transition on FALSE to state [56]
transition on iden to state [64]
transition on INT_LITERAL to state [51]
transition on TRUE to state [45]
transition on NEW to state [59]
transition on MEGGYCHECKBUTTON to state [55]
transition on MINUS to state [57]

-------------------
lalr_state [139]: {
  [expression ::= expression (*) PLUS expression , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= expression (*) DOT iden LPAREN exp_list RPAREN , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= expression (*) TIMES expression , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= expression (*) EQUAL expression , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= expression (*) LT expression , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= expression (*) MINUS expression , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [expression ::= expression (*) AND expression , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [statement ::= MEGGYTONESTART LPAREN expression (*) COMMA expression RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on DOT to state [73]
transition on TIMES to state [72]
transition on MINUS to state [71]
transition on EQUAL to state [69]
transition on PLUS to state [68]
transition on AND to state [67]
transition on LT to state [66]
transition on COMMA to state [140]

-------------------
lalr_state [140]: {
  [expression ::= (*) NOT expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) expression DOT iden LPAREN exp_list RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) expression TIMES expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) LPAREN BYTE RPAREN expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) TRUE , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) THIS , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) expression PLUS expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) MEGGYGETPIXEL LPAREN expression COMMA expression RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) LPAREN expression RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) expression AND expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) MINUS expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) INT_LITERAL , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) FALSE , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) NEW iden LPAREN RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [iden ::= (*) ID , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) expression MINUS expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) MEGGYCHECKBUTTON LPAREN expression RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [statement ::= MEGGYTONESTART LPAREN expression COMMA (*) expression RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) iden , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) expression EQUAL expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) expression LT expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= (*) TONE_LITERAL , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
}
transition on BUTTON_LITERAL to state [58]
transition on LPAREN to state [49]
transition on COLOR_LITERAL to state [53]
transition on NOT to state [43]
transition on TONE_LITERAL to state [46]
transition on THIS to state [50]
transition on expression to state [141]
transition on ID to state [10]
transition on MEGGYGETPIXEL to state [61]
transition on FALSE to state [56]
transition on iden to state [64]
transition on INT_LITERAL to state [51]
transition on TRUE to state [45]
transition on NEW to state [59]
transition on MEGGYCHECKBUTTON to state [55]
transition on MINUS to state [57]

-------------------
lalr_state [141]: {
  [expression ::= expression (*) PLUS expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= expression (*) DOT iden LPAREN exp_list RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= expression (*) TIMES expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= expression (*) EQUAL expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= expression (*) LT expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [statement ::= MEGGYTONESTART LPAREN expression COMMA expression (*) RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= expression (*) MINUS expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [expression ::= expression (*) AND expression , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
}
transition on DOT to state [73]
transition on TIMES to state [72]
transition on MINUS to state [71]
transition on EQUAL to state [69]
transition on PLUS to state [68]
transition on AND to state [67]
transition on RPAREN to state [142]
transition on LT to state [66]

-------------------
lalr_state [142]: {
  [statement ::= MEGGYTONESTART LPAREN expression COMMA expression RPAREN (*) SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on SEMI to state [143]

-------------------
lalr_state [143]: {
  [statement ::= MEGGYTONESTART LPAREN expression COMMA expression RPAREN SEMI (*) , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}

-------------------
lalr_state [144]: {
  [formal_list ::= formal_list COMMA formal (*) , {RPAREN BOOLEAN INT BYTE COMMA VOID MEGGYCOLOR MEGGYBUTTON MEGGYTONE ID }]
}

-------------------
lalr_state [145]: {
  [formal ::= type iden (*) , {RPAREN BOOLEAN INT BYTE COMMA VOID MEGGYCOLOR MEGGYBUTTON MEGGYTONE ID }]
}

-------------------
lalr_state [146]: {
  [var ::= type iden (*) SEMI , {MINUS LPAREN LBRACE RBRACE BOOLEAN INT BYTE IF NOT WHILE NEW PUBLIC RETURN VOID MEGGYCOLOR MEGGYBUTTON MEGGYTONE MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on SEMI to state [147]

-------------------
lalr_state [147]: {
  [var ::= type iden SEMI (*) , {MINUS LPAREN LBRACE RBRACE BOOLEAN INT BYTE IF NOT WHILE NEW PUBLIC RETURN VOID MEGGYCOLOR MEGGYBUTTON MEGGYTONE MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}

-------------------
lalr_state [148]: {
  [main_class ::= CLASS iden (*) LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET iden RPAREN LBRACE statement_list RBRACE RBRACE , {EOF CLASS }]
}
transition on LBRACE to state [149]

-------------------
lalr_state [149]: {
  [main_class ::= CLASS iden LBRACE (*) PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET iden RPAREN LBRACE statement_list RBRACE RBRACE , {EOF CLASS }]
}
transition on PUBLIC to state [150]

-------------------
lalr_state [150]: {
  [main_class ::= CLASS iden LBRACE PUBLIC (*) STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET iden RPAREN LBRACE statement_list RBRACE RBRACE , {EOF CLASS }]
}
transition on STATIC to state [151]

-------------------
lalr_state [151]: {
  [main_class ::= CLASS iden LBRACE PUBLIC STATIC (*) VOID MAIN LPAREN STRING LBRACKET RBRACKET iden RPAREN LBRACE statement_list RBRACE RBRACE , {EOF CLASS }]
}
transition on VOID to state [152]

-------------------
lalr_state [152]: {
  [main_class ::= CLASS iden LBRACE PUBLIC STATIC VOID (*) MAIN LPAREN STRING LBRACKET RBRACKET iden RPAREN LBRACE statement_list RBRACE RBRACE , {EOF CLASS }]
}
transition on MAIN to state [153]

-------------------
lalr_state [153]: {
  [main_class ::= CLASS iden LBRACE PUBLIC STATIC VOID MAIN (*) LPAREN STRING LBRACKET RBRACKET iden RPAREN LBRACE statement_list RBRACE RBRACE , {EOF CLASS }]
}
transition on LPAREN to state [154]

-------------------
lalr_state [154]: {
  [main_class ::= CLASS iden LBRACE PUBLIC STATIC VOID MAIN LPAREN (*) STRING LBRACKET RBRACKET iden RPAREN LBRACE statement_list RBRACE RBRACE , {EOF CLASS }]
}
transition on STRING to state [155]

-------------------
lalr_state [155]: {
  [main_class ::= CLASS iden LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING (*) LBRACKET RBRACKET iden RPAREN LBRACE statement_list RBRACE RBRACE , {EOF CLASS }]
}
transition on LBRACKET to state [156]

-------------------
lalr_state [156]: {
  [main_class ::= CLASS iden LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET (*) RBRACKET iden RPAREN LBRACE statement_list RBRACE RBRACE , {EOF CLASS }]
}
transition on RBRACKET to state [157]

-------------------
lalr_state [157]: {
  [main_class ::= CLASS iden LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET (*) iden RPAREN LBRACE statement_list RBRACE RBRACE , {EOF CLASS }]
  [iden ::= (*) ID , {RPAREN }]
}
transition on iden to state [158]
transition on ID to state [10]

-------------------
lalr_state [158]: {
  [main_class ::= CLASS iden LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET iden (*) RPAREN LBRACE statement_list RBRACE RBRACE , {EOF CLASS }]
}
transition on RPAREN to state [159]

-------------------
lalr_state [159]: {
  [main_class ::= CLASS iden LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET iden RPAREN (*) LBRACE statement_list RBRACE RBRACE , {EOF CLASS }]
}
transition on LBRACE to state [160]

-------------------
lalr_state [160]: {
  [statement_list ::= (*) , {MINUS LPAREN LBRACE RBRACE IF NOT WHILE NEW MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [statement_list ::= (*) statement_list statement , {MINUS LPAREN LBRACE RBRACE IF NOT WHILE NEW MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [main_class ::= CLASS iden LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET iden RPAREN LBRACE (*) statement_list RBRACE RBRACE , {EOF CLASS }]
}
transition on statement_list to state [161]

-------------------
lalr_state [161]: {
  [expression ::= (*) NOT expression , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) expression DOT iden LPAREN exp_list RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [statement ::= (*) MEGGYSETPIXEL LPAREN expression COMMA expression COMMA expression RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF NOT WHILE NEW MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [statement ::= (*) WHILE LPAREN expression RPAREN statement , {MINUS LPAREN LBRACE RBRACE IF NOT WHILE NEW MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression TIMES expression , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) LPAREN BYTE RPAREN expression , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) TRUE , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) THIS , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [statement ::= (*) IF LPAREN expression RPAREN statement , {MINUS LPAREN LBRACE RBRACE IF NOT WHILE NEW MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [statement ::= (*) iden ASSIGN expression SEMI , {MINUS LPAREN LBRACE RBRACE IF NOT WHILE NEW MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression PLUS expression , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) MEGGYGETPIXEL LPAREN expression COMMA expression RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) LPAREN expression RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [main_class ::= CLASS iden LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET iden RPAREN LBRACE statement_list (*) RBRACE RBRACE , {EOF CLASS }]
  [statement ::= (*) MEGGYDELAY LPAREN expression RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF NOT WHILE NEW MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [statement ::= (*) expression DOT iden LPAREN exp_list RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF NOT WHILE NEW MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression AND expression , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) MINUS expression , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) INT_LITERAL , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) FALSE , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) NEW iden LPAREN RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [iden ::= (*) ID , {PLUS MINUS TIMES LT EQUAL AND DOT ASSIGN }]
  [statement ::= (*) IF LPAREN expression RPAREN statement ELSE statement , {MINUS LPAREN LBRACE RBRACE IF NOT WHILE NEW MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [statement_list ::= statement_list (*) statement , {MINUS LPAREN LBRACE RBRACE IF NOT WHILE NEW MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression MINUS expression , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) MEGGYCHECKBUTTON LPAREN expression RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) iden , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [statement ::= (*) MEGGYTONESTART LPAREN expression COMMA expression RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF NOT WHILE NEW MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [statement ::= (*) LBRACE statement_list RBRACE , {MINUS LPAREN LBRACE RBRACE IF NOT WHILE NEW MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [expression ::= (*) expression EQUAL expression , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) expression LT expression , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [expression ::= (*) TONE_LITERAL , {PLUS MINUS TIMES LT EQUAL AND DOT }]
}
transition on iden to state [62]
transition on MEGGYGETPIXEL to state [61]
transition on MEGGYDELAY to state [60]
transition on NEW to state [59]
transition on BUTTON_LITERAL to state [58]
transition on MINUS to state [57]
transition on FALSE to state [56]
transition on MEGGYCHECKBUTTON to state [55]
transition on expression to state [54]
transition on COLOR_LITERAL to state [53]
transition on MEGGYSETPIXEL to state [52]
transition on INT_LITERAL to state [51]
transition on THIS to state [50]
transition on ID to state [10]
transition on LPAREN to state [49]
transition on LBRACE to state [48]
transition on IF to state [47]
transition on TONE_LITERAL to state [46]
transition on TRUE to state [45]
transition on NOT to state [43]
transition on WHILE to state [42]
transition on RBRACE to state [162]
transition on statement to state [40]
transition on MEGGYTONESTART to state [39]

-------------------
lalr_state [162]: {
  [main_class ::= CLASS iden LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET iden RPAREN LBRACE statement_list RBRACE (*) RBRACE , {EOF CLASS }]
}
transition on RBRACE to state [163]

-------------------
lalr_state [163]: {
  [main_class ::= CLASS iden LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET iden RPAREN LBRACE statement_list RBRACE RBRACE (*) , {EOF CLASS }]
}

-------------------
lalr_state [164]: {
  [$START ::= program EOF (*) , {EOF }]
}

-------------------
------- CUP v0.11a beta 20060608 Parser Generation Summary -------
  1 error and 5 warnings
  55 terminals, 16 non-terminals, and 62 productions declared, 
  producing 165 unique parse states.
  4 terminals declared but not used.
  0 non-terminals declared but not used.
  0 productions never reduced.
  1 conflict detected (0 expected).
  No code produced.
---------------------------------------------------- (v0.11a beta 20060608)
