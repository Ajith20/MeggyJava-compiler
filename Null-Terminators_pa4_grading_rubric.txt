This assignment is graded on a 100 point scale. Your submission will be graded with the following breakdown:

     15 points: Extension of your parser spec to correctly scan all tokens and parse for the PA4 grammar demonstrated with test cases
     
     15 points: Creates a symbol table that accurately represents the static scoping of the MeggyJava programs of PA4

     10 points: Check for undefined, doubly defined, and incorrectly typed symbols
     
     15 points: Performs correct type checking for the PA4 grammar rules according to the MJ.jar reference compiler type errors
     (-5 in some cases, it seems you are detecting errors in valid code. See PA4raindrop, which should be valid)

     10 points: Continues to perform code generation to AVR assembly code for the PA3 AST nodes using a visitor

     15 points: Performs correct code geneation to AVR assembly code for the added features in PA4 grammar:
     	Meggy.toneStart
	less than operator
	user-defined methods
	method calls
	(-5 PA4Example4 hangs on execution infinitely. MazeSolver throws null pointer exception

10 points: test cases for PA4 features

5 points: README file explaining the file structure (your test files) and other comments you want your TA to know (e.g. features not implemented)

5 points: Follows instructions for submission correctly

Total: 90/100

