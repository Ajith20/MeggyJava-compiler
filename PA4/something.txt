java -jar java-cup-11a.jar -parser  mj -dump src/mjparser/mj.cup &> javacup.dump
mv -f sym.java src/mjparser/
mv: cannot stat `sym.java': No such file or directory
make: *** [src/mjparser/mj.java] Error 1
Warning : Terminal "ASSIGN" was declared but never used
Warning : Terminal "MEGGYSETAUXLEDS" was declared but never used
Warning : Terminal "EXTENDS" was declared but never used
Warning : Terminal "LENGTH" was declared but never used
Warning : *** Shift/Reduce conflict found in state #128
  between exp ::= NOT exp (*) 
  and     exp ::= exp (*) DOT ID LPAREN exp_list RPAREN 
  under symbol DOT
  Resolved in favor of shifting.

Error : *** More conflicts encountered than expected -- parser generation aborted
===== Terminals =====
[0]EOF [1]error [2]PLUS [3]MINUS [4]TIMES 
[5]LPAREN [6]RPAREN [7]LBRACE [8]RBRACE [9]BOOLEAN 
[10]INT [11]BYTE [12]MAIN [13]IMPORT [14]IF 
[15]ELSE [16]LT [17]EQUAL [18]AND [19]NOT 
[20]WHILE [21]COMMA [22]DOT [23]NEW [24]PUBLIC 
[25]RETURN [26]STATIC [27]STRING [28]VOID [29]CLASS 
[30]EXTENDS [31]LBRACKET [32]RBRACKET [33]LENGTH [34]SEMI 
[35]ASSIGN [36]MEGGY [37]MEGGYCOLOR [38]MEGGYBUTTON [39]MEGGYTONE 
[40]MEGGYSETPIXEL [41]MEGGYSETAUXLEDS [42]MEGGYTONESTART [43]MEGGYDELAY [44]MEGGYGETPIXEL 
[45]MEGGYCHECKBUTTON [46]INT_LITERAL [47]ID [48]TRUE [49]FALSE 
[50]COLOR_LITERAL [51]BUTTON_LITERAL [52]TONE_LITERAL [53]THIS [54]UMINUS 


===== Non terminals =====
[0]program [1]exp [2]exp_list [3]statement [4]statement_list 
[5]main_class [6]class [7]class_list [8]type [9]formal 
[10]formal_list [11]method [12]method_list [13]NT$0 [14]NT$1 
[15]NT$2 [16]NT$3 [17]NT$4 [18]NT$5 [19]NT$6 
[20]NT$7 

===== Productions =====
[0] $START ::= program EOF 
[1] program ::= IMPORT MEGGY SEMI main_class class_list 
[2] NT$0 ::= 
[3] NT$1 ::= 
[4] main_class ::= CLASS ID NT$0 LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN statement NT$1 RBRACE 
[5] class ::= CLASS ID LBRACE method_list RBRACE 
[6] class_list ::= class_list class 
[7] class_list ::= 
[8] method ::= PUBLIC type ID LPAREN formal_list RPAREN LBRACE statement_list RETURN exp SEMI 
[9] method ::= PUBLIC type ID LPAREN formal_list RPAREN LBRACE statement_list 
[10] method_list ::= method_list method 
[11] method_list ::= 
[12] formal ::= type ID 
[13] formal_list ::= formal_list COMMA formal 
[14] formal_list ::= formal_list formal 
[15] formal_list ::= 
[16] NT$2 ::= 
[17] NT$3 ::= 
[18] NT$4 ::= 
[19] NT$5 ::= 
[20] NT$6 ::= 
[21] NT$7 ::= 
[22] type ::= BOOLEAN NT$2 BYTE NT$3 INT NT$4 VOID NT$5 MEGGYCOLOR NT$6 MEGGYBUTTON NT$7 MEGGYTONE 
[23] statement ::= LBRACE statement_list RBRACE 
[24] statement ::= MEGGYSETPIXEL LPAREN exp COMMA exp COMMA exp RPAREN SEMI 
[25] statement ::= MEGGYDELAY LPAREN exp RPAREN SEMI 
[26] statement ::= IF LPAREN exp RPAREN statement 
[27] statement ::= IF LPAREN exp RPAREN statement ELSE statement 
[28] statement ::= WHILE LPAREN exp RPAREN statement 
[29] statement ::= MEGGYTONESTART LPAREN exp COMMA exp RPAREN SEMI 
[30] statement ::= exp DOT ID LPAREN exp_list RPAREN SEMI 
[31] statement_list ::= statement_list statement 
[32] statement_list ::= 
[33] exp ::= exp AND exp 
[34] exp ::= exp TIMES exp 
[35] exp ::= exp PLUS exp 
[36] exp ::= exp EQUAL exp 
[37] exp ::= exp MINUS exp 
[38] exp ::= exp LT exp 
[39] exp ::= MINUS exp 
[40] exp ::= MEGGYGETPIXEL LPAREN exp COMMA exp RPAREN 
[41] exp ::= MEGGYCHECKBUTTON LPAREN exp RPAREN 
[42] exp ::= LPAREN BYTE RPAREN exp 
[43] exp ::= INT_LITERAL 
[44] exp ::= COLOR_LITERAL 
[45] exp ::= BUTTON_LITERAL 
[46] exp ::= TONE_LITERAL 
[47] exp ::= TRUE 
[48] exp ::= FALSE 
[49] exp ::= NOT exp 
[50] exp ::= LPAREN exp RPAREN 
[51] exp ::= ID 
[52] exp ::= THIS 
[53] exp ::= NEW ID LPAREN RPAREN 
[54] exp ::= exp DOT ID LPAREN exp_list RPAREN 
[55] exp_list ::= exp_list COMMA exp 
[56] exp_list ::= exp_list exp 
[57] exp_list ::= 

===== Viable Prefix Recognizer =====
START lalr_state [0]: {
  [program ::= (*) IMPORT MEGGY SEMI main_class class_list , {EOF }]
  [$START ::= (*) program EOF , {EOF }]
}
transition on IMPORT to state [2]
transition on program to state [1]

-------------------
lalr_state [1]: {
  [$START ::= program (*) EOF , {EOF }]
}
transition on EOF to state [156]

-------------------
lalr_state [2]: {
  [program ::= IMPORT (*) MEGGY SEMI main_class class_list , {EOF }]
}
transition on MEGGY to state [3]

-------------------
lalr_state [3]: {
  [program ::= IMPORT MEGGY (*) SEMI main_class class_list , {EOF }]
}
transition on SEMI to state [4]

-------------------
lalr_state [4]: {
  [program ::= IMPORT MEGGY SEMI (*) main_class class_list , {EOF }]
  [main_class ::= (*) CLASS ID NT$0 LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN statement NT$1 RBRACE , {EOF CLASS }]
}
transition on main_class to state [6]
transition on CLASS to state [5]

-------------------
lalr_state [5]: {
  [main_class ::= CLASS (*) ID NT$0 LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN statement NT$1 RBRACE , {EOF CLASS }]
}
transition on ID to state [140]

-------------------
lalr_state [6]: {
  [program ::= IMPORT MEGGY SEMI main_class (*) class_list , {EOF }]
  [class_list ::= (*) , {EOF CLASS }]
  [class_list ::= (*) class_list class , {EOF CLASS }]
}
transition on class_list to state [7]

-------------------
lalr_state [7]: {
  [class ::= (*) CLASS ID LBRACE method_list RBRACE , {EOF CLASS }]
  [program ::= IMPORT MEGGY SEMI main_class class_list (*) , {EOF }]
  [class_list ::= class_list (*) class , {EOF CLASS }]
}
transition on CLASS to state [9]
transition on class to state [8]

-------------------
lalr_state [8]: {
  [class_list ::= class_list class (*) , {EOF CLASS }]
}

-------------------
lalr_state [9]: {
  [class ::= CLASS (*) ID LBRACE method_list RBRACE , {EOF CLASS }]
}
transition on ID to state [10]

-------------------
lalr_state [10]: {
  [class ::= CLASS ID (*) LBRACE method_list RBRACE , {EOF CLASS }]
}
transition on LBRACE to state [11]

-------------------
lalr_state [11]: {
  [method_list ::= (*) method_list method , {RBRACE PUBLIC }]
  [class ::= CLASS ID LBRACE (*) method_list RBRACE , {EOF CLASS }]
  [method_list ::= (*) , {RBRACE PUBLIC }]
}
transition on method_list to state [12]

-------------------
lalr_state [12]: {
  [method ::= (*) PUBLIC type ID LPAREN formal_list RPAREN LBRACE statement_list RETURN exp SEMI , {RBRACE PUBLIC }]
  [method_list ::= method_list (*) method , {RBRACE PUBLIC }]
  [method ::= (*) PUBLIC type ID LPAREN formal_list RPAREN LBRACE statement_list , {RBRACE PUBLIC }]
  [class ::= CLASS ID LBRACE method_list (*) RBRACE , {EOF CLASS }]
}
transition on method to state [15]
transition on PUBLIC to state [14]
transition on RBRACE to state [13]

-------------------
lalr_state [13]: {
  [class ::= CLASS ID LBRACE method_list RBRACE (*) , {EOF CLASS }]
}

-------------------
lalr_state [14]: {
  [method ::= PUBLIC (*) type ID LPAREN formal_list RPAREN LBRACE statement_list , {RBRACE PUBLIC }]
  [type ::= (*) BOOLEAN NT$2 BYTE NT$3 INT NT$4 VOID NT$5 MEGGYCOLOR NT$6 MEGGYBUTTON NT$7 MEGGYTONE , {ID }]
  [method ::= PUBLIC (*) type ID LPAREN formal_list RPAREN LBRACE statement_list RETURN exp SEMI , {RBRACE PUBLIC }]
}
transition on BOOLEAN to state [17]
transition on type to state [16]

-------------------
lalr_state [15]: {
  [method_list ::= method_list method (*) , {RBRACE PUBLIC }]
}

-------------------
lalr_state [16]: {
  [method ::= PUBLIC type (*) ID LPAREN formal_list RPAREN LBRACE statement_list , {RBRACE PUBLIC }]
  [method ::= PUBLIC type (*) ID LPAREN formal_list RPAREN LBRACE statement_list RETURN exp SEMI , {RBRACE PUBLIC }]
}
transition on ID to state [30]

-------------------
lalr_state [17]: {
  [NT$2 ::= (*) , {BYTE }]
  [type ::= BOOLEAN (*) NT$2 BYTE NT$3 INT NT$4 VOID NT$5 MEGGYCOLOR NT$6 MEGGYBUTTON NT$7 MEGGYTONE , {ID }]
}
transition on NT$2 to state [18]

-------------------
lalr_state [18]: {
  [type ::= BOOLEAN NT$2 (*) BYTE NT$3 INT NT$4 VOID NT$5 MEGGYCOLOR NT$6 MEGGYBUTTON NT$7 MEGGYTONE , {ID }]
}
transition on BYTE to state [19]

-------------------
lalr_state [19]: {
  [type ::= BOOLEAN NT$2 BYTE (*) NT$3 INT NT$4 VOID NT$5 MEGGYCOLOR NT$6 MEGGYBUTTON NT$7 MEGGYTONE , {ID }]
  [NT$3 ::= (*) , {INT }]
}
transition on NT$3 to state [20]

-------------------
lalr_state [20]: {
  [type ::= BOOLEAN NT$2 BYTE NT$3 (*) INT NT$4 VOID NT$5 MEGGYCOLOR NT$6 MEGGYBUTTON NT$7 MEGGYTONE , {ID }]
}
transition on INT to state [21]

-------------------
lalr_state [21]: {
  [NT$4 ::= (*) , {VOID }]
  [type ::= BOOLEAN NT$2 BYTE NT$3 INT (*) NT$4 VOID NT$5 MEGGYCOLOR NT$6 MEGGYBUTTON NT$7 MEGGYTONE , {ID }]
}
transition on NT$4 to state [22]

-------------------
lalr_state [22]: {
  [type ::= BOOLEAN NT$2 BYTE NT$3 INT NT$4 (*) VOID NT$5 MEGGYCOLOR NT$6 MEGGYBUTTON NT$7 MEGGYTONE , {ID }]
}
transition on VOID to state [23]

-------------------
lalr_state [23]: {
  [NT$5 ::= (*) , {MEGGYCOLOR }]
  [type ::= BOOLEAN NT$2 BYTE NT$3 INT NT$4 VOID (*) NT$5 MEGGYCOLOR NT$6 MEGGYBUTTON NT$7 MEGGYTONE , {ID }]
}
transition on NT$5 to state [24]

-------------------
lalr_state [24]: {
  [type ::= BOOLEAN NT$2 BYTE NT$3 INT NT$4 VOID NT$5 (*) MEGGYCOLOR NT$6 MEGGYBUTTON NT$7 MEGGYTONE , {ID }]
}
transition on MEGGYCOLOR to state [25]

-------------------
lalr_state [25]: {
  [type ::= BOOLEAN NT$2 BYTE NT$3 INT NT$4 VOID NT$5 MEGGYCOLOR (*) NT$6 MEGGYBUTTON NT$7 MEGGYTONE , {ID }]
  [NT$6 ::= (*) , {MEGGYBUTTON }]
}
transition on NT$6 to state [26]

-------------------
lalr_state [26]: {
  [type ::= BOOLEAN NT$2 BYTE NT$3 INT NT$4 VOID NT$5 MEGGYCOLOR NT$6 (*) MEGGYBUTTON NT$7 MEGGYTONE , {ID }]
}
transition on MEGGYBUTTON to state [27]

-------------------
lalr_state [27]: {
  [NT$7 ::= (*) , {MEGGYTONE }]
  [type ::= BOOLEAN NT$2 BYTE NT$3 INT NT$4 VOID NT$5 MEGGYCOLOR NT$6 MEGGYBUTTON (*) NT$7 MEGGYTONE , {ID }]
}
transition on NT$7 to state [28]

-------------------
lalr_state [28]: {
  [type ::= BOOLEAN NT$2 BYTE NT$3 INT NT$4 VOID NT$5 MEGGYCOLOR NT$6 MEGGYBUTTON NT$7 (*) MEGGYTONE , {ID }]
}
transition on MEGGYTONE to state [29]

-------------------
lalr_state [29]: {
  [type ::= BOOLEAN NT$2 BYTE NT$3 INT NT$4 VOID NT$5 MEGGYCOLOR NT$6 MEGGYBUTTON NT$7 MEGGYTONE (*) , {ID }]
}

-------------------
lalr_state [30]: {
  [method ::= PUBLIC type ID (*) LPAREN formal_list RPAREN LBRACE statement_list , {RBRACE PUBLIC }]
  [method ::= PUBLIC type ID (*) LPAREN formal_list RPAREN LBRACE statement_list RETURN exp SEMI , {RBRACE PUBLIC }]
}
transition on LPAREN to state [31]

-------------------
lalr_state [31]: {
  [formal_list ::= (*) formal_list COMMA formal , {RPAREN BOOLEAN COMMA }]
  [method ::= PUBLIC type ID LPAREN (*) formal_list RPAREN LBRACE statement_list , {RBRACE PUBLIC }]
  [formal_list ::= (*) , {RPAREN BOOLEAN COMMA }]
  [method ::= PUBLIC type ID LPAREN (*) formal_list RPAREN LBRACE statement_list RETURN exp SEMI , {RBRACE PUBLIC }]
  [formal_list ::= (*) formal_list formal , {RPAREN BOOLEAN COMMA }]
}
transition on formal_list to state [32]

-------------------
lalr_state [32]: {
  [formal_list ::= formal_list (*) COMMA formal , {RPAREN BOOLEAN COMMA }]
  [method ::= PUBLIC type ID LPAREN formal_list (*) RPAREN LBRACE statement_list , {RBRACE PUBLIC }]
  [formal ::= (*) type ID , {RPAREN BOOLEAN COMMA }]
  [method ::= PUBLIC type ID LPAREN formal_list (*) RPAREN LBRACE statement_list RETURN exp SEMI , {RBRACE PUBLIC }]
  [formal_list ::= formal_list (*) formal , {RPAREN BOOLEAN COMMA }]
  [type ::= (*) BOOLEAN NT$2 BYTE NT$3 INT NT$4 VOID NT$5 MEGGYCOLOR NT$6 MEGGYBUTTON NT$7 MEGGYTONE , {ID }]
}
transition on BOOLEAN to state [17]
transition on type to state [36]
transition on formal to state [35]
transition on RPAREN to state [34]
transition on COMMA to state [33]

-------------------
lalr_state [33]: {
  [formal_list ::= formal_list COMMA (*) formal , {RPAREN BOOLEAN COMMA }]
  [formal ::= (*) type ID , {RPAREN BOOLEAN COMMA }]
  [type ::= (*) BOOLEAN NT$2 BYTE NT$3 INT NT$4 VOID NT$5 MEGGYCOLOR NT$6 MEGGYBUTTON NT$7 MEGGYTONE , {ID }]
}
transition on BOOLEAN to state [17]
transition on formal to state [139]
transition on type to state [36]

-------------------
lalr_state [34]: {
  [method ::= PUBLIC type ID LPAREN formal_list RPAREN (*) LBRACE statement_list , {RBRACE PUBLIC }]
  [method ::= PUBLIC type ID LPAREN formal_list RPAREN (*) LBRACE statement_list RETURN exp SEMI , {RBRACE PUBLIC }]
}
transition on LBRACE to state [38]

-------------------
lalr_state [35]: {
  [formal_list ::= formal_list formal (*) , {RPAREN BOOLEAN COMMA }]
}

-------------------
lalr_state [36]: {
  [formal ::= type (*) ID , {RPAREN BOOLEAN COMMA }]
}
transition on ID to state [37]

-------------------
lalr_state [37]: {
  [formal ::= type ID (*) , {RPAREN BOOLEAN COMMA }]
}

-------------------
lalr_state [38]: {
  [method ::= PUBLIC type ID LPAREN formal_list RPAREN LBRACE (*) statement_list , {RBRACE PUBLIC }]
  [statement_list ::= (*) , {MINUS LPAREN LBRACE RBRACE IF NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [method ::= PUBLIC type ID LPAREN formal_list RPAREN LBRACE (*) statement_list RETURN exp SEMI , {RBRACE PUBLIC }]
  [statement_list ::= (*) statement_list statement , {MINUS LPAREN LBRACE RBRACE IF NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on statement_list to state [39]

-------------------
lalr_state [39]: {
  [exp ::= (*) THIS , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [method ::= PUBLIC type ID LPAREN formal_list RPAREN LBRACE statement_list (*) RETURN exp SEMI , {RBRACE PUBLIC }]
  [statement ::= (*) MEGGYDELAY LPAREN exp RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [statement ::= (*) exp DOT ID LPAREN exp_list RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp PLUS exp , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) MEGGYGETPIXEL LPAREN exp COMMA exp RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) LPAREN exp RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [statement ::= (*) LBRACE statement_list RBRACE , {MINUS LPAREN LBRACE RBRACE IF NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [statement ::= (*) WHILE LPAREN exp RPAREN statement , {MINUS LPAREN LBRACE RBRACE IF NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp AND exp , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) exp LT exp , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) INT_LITERAL , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) FALSE , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) NEW ID LPAREN RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [method ::= PUBLIC type ID LPAREN formal_list RPAREN LBRACE statement_list (*) , {RBRACE PUBLIC }]
  [statement ::= (*) IF LPAREN exp RPAREN statement , {MINUS LPAREN LBRACE RBRACE IF NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [statement_list ::= statement_list (*) statement , {MINUS LPAREN LBRACE RBRACE IF NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp EQUAL exp , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) MEGGYCHECKBUTTON LPAREN exp RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) TONE_LITERAL , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) ID , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [statement ::= (*) MEGGYSETPIXEL LPAREN exp COMMA exp COMMA exp RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [statement ::= (*) MEGGYTONESTART LPAREN exp COMMA exp RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp TIMES exp , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) MINUS exp , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) NOT exp , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) exp DOT ID LPAREN exp_list RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [statement ::= (*) IF LPAREN exp RPAREN statement ELSE statement , {MINUS LPAREN LBRACE RBRACE IF NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp MINUS exp , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) LPAREN BYTE RPAREN exp , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) TRUE , {PLUS MINUS TIMES LT EQUAL AND DOT }]
}
transition on MEGGYGETPIXEL to state [62]
transition on MEGGYDELAY to state [61]
transition on NEW to state [60]
transition on BUTTON_LITERAL to state [59]
transition on FALSE to state [58]
transition on MINUS to state [57]
transition on MEGGYCHECKBUTTON to state [56]
transition on COLOR_LITERAL to state [55]
transition on MEGGYSETPIXEL to state [54]
transition on INT_LITERAL to state [53]
transition on THIS to state [52]
transition on ID to state [51]
transition on LBRACE to state [50]
transition on LPAREN to state [49]
transition on IF to state [48]
transition on TONE_LITERAL to state [47]
transition on exp to state [46]
transition on TRUE to state [45]
transition on RETURN to state [44]
transition on NOT to state [43]
transition on WHILE to state [42]
transition on statement to state [41]
transition on MEGGYTONESTART to state [40]

-------------------
lalr_state [40]: {
  [statement ::= MEGGYTONESTART (*) LPAREN exp COMMA exp RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on LPAREN to state [133]

-------------------
lalr_state [41]: {
  [statement_list ::= statement_list statement (*) , {MINUS LPAREN LBRACE RBRACE IF NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}

-------------------
lalr_state [42]: {
  [statement ::= WHILE (*) LPAREN exp RPAREN statement , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on LPAREN to state [129]

-------------------
lalr_state [43]: {
  [exp ::= (*) THIS , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp PLUS exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) MEGGYGETPIXEL LPAREN exp COMMA exp RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) LPAREN exp RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp AND exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp LT exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) INT_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) FALSE , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) NEW ID LPAREN RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp EQUAL exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) MEGGYCHECKBUTTON LPAREN exp RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) TONE_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) ID , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp TIMES exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) MINUS exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= NOT (*) exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) NOT exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp DOT ID LPAREN exp_list RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp MINUS exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) LPAREN BYTE RPAREN exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) TRUE , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on BUTTON_LITERAL to state [59]
transition on LPAREN to state [49]
transition on COLOR_LITERAL to state [55]
transition on NOT to state [43]
transition on TONE_LITERAL to state [47]
transition on THIS to state [52]
transition on ID to state [51]
transition on MEGGYGETPIXEL to state [62]
transition on FALSE to state [58]
transition on INT_LITERAL to state [53]
transition on exp to state [128]
transition on TRUE to state [45]
transition on NEW to state [60]
transition on MEGGYCHECKBUTTON to state [56]
transition on MINUS to state [57]

-------------------
lalr_state [44]: {
  [exp ::= (*) THIS , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [method ::= PUBLIC type ID LPAREN formal_list RPAREN LBRACE statement_list RETURN (*) exp SEMI , {RBRACE PUBLIC }]
  [exp ::= (*) exp PLUS exp , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [exp ::= (*) MEGGYGETPIXEL LPAREN exp COMMA exp RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [exp ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [exp ::= (*) LPAREN exp RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [exp ::= (*) exp AND exp , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [exp ::= (*) exp LT exp , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [exp ::= (*) INT_LITERAL , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [exp ::= (*) FALSE , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [exp ::= (*) NEW ID LPAREN RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [exp ::= (*) exp EQUAL exp , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [exp ::= (*) MEGGYCHECKBUTTON LPAREN exp RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [exp ::= (*) TONE_LITERAL , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [exp ::= (*) ID , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [exp ::= (*) exp TIMES exp , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [exp ::= (*) MINUS exp , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [exp ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [exp ::= (*) NOT exp , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [exp ::= (*) exp DOT ID LPAREN exp_list RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [exp ::= (*) exp MINUS exp , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [exp ::= (*) LPAREN BYTE RPAREN exp , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [exp ::= (*) TRUE , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
}
transition on BUTTON_LITERAL to state [59]
transition on LPAREN to state [49]
transition on COLOR_LITERAL to state [55]
transition on NOT to state [43]
transition on TONE_LITERAL to state [47]
transition on THIS to state [52]
transition on ID to state [51]
transition on MEGGYGETPIXEL to state [62]
transition on FALSE to state [58]
transition on INT_LITERAL to state [53]
transition on exp to state [126]
transition on TRUE to state [45]
transition on NEW to state [60]
transition on MEGGYCHECKBUTTON to state [56]
transition on MINUS to state [57]

-------------------
lalr_state [45]: {
  [exp ::= TRUE (*) , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}

-------------------
lalr_state [46]: {
  [exp ::= exp (*) LT exp , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= exp (*) PLUS exp , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= exp (*) DOT ID LPAREN exp_list RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= exp (*) MINUS exp , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= exp (*) TIMES exp , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= exp (*) EQUAL exp , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= exp (*) AND exp , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [statement ::= exp (*) DOT ID LPAREN exp_list RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on DOT to state [120]
transition on TIMES to state [71]
transition on MINUS to state [70]
transition on EQUAL to state [69]
transition on PLUS to state [68]
transition on AND to state [67]
transition on LT to state [66]

-------------------
lalr_state [47]: {
  [exp ::= TONE_LITERAL (*) , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}

-------------------
lalr_state [48]: {
  [statement ::= IF (*) LPAREN exp RPAREN statement ELSE statement , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [statement ::= IF (*) LPAREN exp RPAREN statement , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on LPAREN to state [114]

-------------------
lalr_state [49]: {
  [exp ::= (*) THIS , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) exp PLUS exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) MEGGYGETPIXEL LPAREN exp COMMA exp RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= LPAREN (*) exp RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) LPAREN exp RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) exp AND exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) exp LT exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) INT_LITERAL , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) FALSE , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) NEW ID LPAREN RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) exp EQUAL exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) MEGGYCHECKBUTTON LPAREN exp RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) TONE_LITERAL , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) ID , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) exp TIMES exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) MINUS exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) NOT exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) exp DOT ID LPAREN exp_list RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) exp MINUS exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= LPAREN (*) BYTE RPAREN exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) LPAREN BYTE RPAREN exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) TRUE , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
}
transition on BUTTON_LITERAL to state [59]
transition on LPAREN to state [49]
transition on BYTE to state [110]
transition on COLOR_LITERAL to state [55]
transition on NOT to state [43]
transition on TONE_LITERAL to state [47]
transition on THIS to state [52]
transition on ID to state [51]
transition on MEGGYGETPIXEL to state [62]
transition on FALSE to state [58]
transition on INT_LITERAL to state [53]
transition on exp to state [109]
transition on TRUE to state [45]
transition on NEW to state [60]
transition on MEGGYCHECKBUTTON to state [56]
transition on MINUS to state [57]

-------------------
lalr_state [50]: {
  [statement_list ::= (*) , {MINUS LPAREN LBRACE RBRACE IF NOT WHILE NEW MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [statement ::= LBRACE (*) statement_list RBRACE , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [statement_list ::= (*) statement_list statement , {MINUS LPAREN LBRACE RBRACE IF NOT WHILE NEW MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on statement_list to state [107]

-------------------
lalr_state [51]: {
  [exp ::= ID (*) , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}

-------------------
lalr_state [52]: {
  [exp ::= THIS (*) , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}

-------------------
lalr_state [53]: {
  [exp ::= INT_LITERAL (*) , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}

-------------------
lalr_state [54]: {
  [statement ::= MEGGYSETPIXEL (*) LPAREN exp COMMA exp COMMA exp RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on LPAREN to state [99]

-------------------
lalr_state [55]: {
  [exp ::= COLOR_LITERAL (*) , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}

-------------------
lalr_state [56]: {
  [exp ::= MEGGYCHECKBUTTON (*) LPAREN exp RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on LPAREN to state [96]

-------------------
lalr_state [57]: {
  [exp ::= (*) THIS , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp PLUS exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) MEGGYGETPIXEL LPAREN exp COMMA exp RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) LPAREN exp RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp AND exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp LT exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) INT_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) FALSE , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) NEW ID LPAREN RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp EQUAL exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) MEGGYCHECKBUTTON LPAREN exp RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) TONE_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) ID , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= MINUS (*) exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp TIMES exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) MINUS exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) NOT exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp DOT ID LPAREN exp_list RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp MINUS exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) LPAREN BYTE RPAREN exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) TRUE , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on BUTTON_LITERAL to state [59]
transition on LPAREN to state [49]
transition on COLOR_LITERAL to state [55]
transition on NOT to state [43]
transition on TONE_LITERAL to state [47]
transition on THIS to state [52]
transition on ID to state [51]
transition on MEGGYGETPIXEL to state [62]
transition on FALSE to state [58]
transition on INT_LITERAL to state [53]
transition on exp to state [95]
transition on TRUE to state [45]
transition on NEW to state [60]
transition on MEGGYCHECKBUTTON to state [56]
transition on MINUS to state [57]

-------------------
lalr_state [58]: {
  [exp ::= FALSE (*) , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}

-------------------
lalr_state [59]: {
  [exp ::= BUTTON_LITERAL (*) , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}

-------------------
lalr_state [60]: {
  [exp ::= NEW (*) ID LPAREN RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on ID to state [92]

-------------------
lalr_state [61]: {
  [statement ::= MEGGYDELAY (*) LPAREN exp RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on LPAREN to state [88]

-------------------
lalr_state [62]: {
  [exp ::= MEGGYGETPIXEL (*) LPAREN exp COMMA exp RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on LPAREN to state [63]

-------------------
lalr_state [63]: {
  [exp ::= (*) THIS , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= MEGGYGETPIXEL LPAREN (*) exp COMMA exp RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp PLUS exp , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) MEGGYGETPIXEL LPAREN exp COMMA exp RPAREN , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) LPAREN exp RPAREN , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) exp AND exp , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) exp LT exp , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) INT_LITERAL , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) FALSE , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) NEW ID LPAREN RPAREN , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) exp EQUAL exp , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) MEGGYCHECKBUTTON LPAREN exp RPAREN , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) TONE_LITERAL , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) ID , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) exp TIMES exp , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) MINUS exp , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) NOT exp , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) exp DOT ID LPAREN exp_list RPAREN , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) exp MINUS exp , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) LPAREN BYTE RPAREN exp , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) TRUE , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
}
transition on BUTTON_LITERAL to state [59]
transition on LPAREN to state [49]
transition on COLOR_LITERAL to state [55]
transition on NOT to state [43]
transition on TONE_LITERAL to state [47]
transition on THIS to state [52]
transition on ID to state [51]
transition on MEGGYGETPIXEL to state [62]
transition on FALSE to state [58]
transition on INT_LITERAL to state [53]
transition on exp to state [64]
transition on TRUE to state [45]
transition on NEW to state [60]
transition on MEGGYCHECKBUTTON to state [56]
transition on MINUS to state [57]

-------------------
lalr_state [64]: {
  [exp ::= exp (*) LT exp , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= exp (*) PLUS exp , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= MEGGYGETPIXEL LPAREN exp (*) COMMA exp RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) DOT ID LPAREN exp_list RPAREN , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= exp (*) MINUS exp , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= exp (*) TIMES exp , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= exp (*) EQUAL exp , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= exp (*) AND exp , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
}
transition on DOT to state [72]
transition on TIMES to state [71]
transition on MINUS to state [70]
transition on EQUAL to state [69]
transition on PLUS to state [68]
transition on AND to state [67]
transition on LT to state [66]
transition on COMMA to state [65]

-------------------
lalr_state [65]: {
  [exp ::= (*) THIS , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= MEGGYGETPIXEL LPAREN exp COMMA (*) exp RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp PLUS exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) MEGGYGETPIXEL LPAREN exp COMMA exp RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) LPAREN exp RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) exp AND exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) exp LT exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) INT_LITERAL , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) FALSE , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) NEW ID LPAREN RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) exp EQUAL exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) MEGGYCHECKBUTTON LPAREN exp RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) TONE_LITERAL , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) ID , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) exp TIMES exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) MINUS exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) NOT exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) exp DOT ID LPAREN exp_list RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) exp MINUS exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) LPAREN BYTE RPAREN exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) TRUE , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
}
transition on BUTTON_LITERAL to state [59]
transition on LPAREN to state [49]
transition on COLOR_LITERAL to state [55]
transition on NOT to state [43]
transition on TONE_LITERAL to state [47]
transition on THIS to state [52]
transition on ID to state [51]
transition on MEGGYGETPIXEL to state [62]
transition on FALSE to state [58]
transition on INT_LITERAL to state [53]
transition on exp to state [86]
transition on TRUE to state [45]
transition on NEW to state [60]
transition on MEGGYCHECKBUTTON to state [56]
transition on MINUS to state [57]

-------------------
lalr_state [66]: {
  [exp ::= (*) THIS , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp PLUS exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) MEGGYGETPIXEL LPAREN exp COMMA exp RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) LPAREN exp RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp LT (*) exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp AND exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp LT exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) INT_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) FALSE , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) NEW ID LPAREN RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp EQUAL exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) MEGGYCHECKBUTTON LPAREN exp RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) TONE_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) ID , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp TIMES exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) MINUS exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) NOT exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp DOT ID LPAREN exp_list RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp MINUS exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) LPAREN BYTE RPAREN exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) TRUE , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on BUTTON_LITERAL to state [59]
transition on LPAREN to state [49]
transition on COLOR_LITERAL to state [55]
transition on NOT to state [43]
transition on TONE_LITERAL to state [47]
transition on THIS to state [52]
transition on ID to state [51]
transition on MEGGYGETPIXEL to state [62]
transition on FALSE to state [58]
transition on INT_LITERAL to state [53]
transition on exp to state [85]
transition on TRUE to state [45]
transition on NEW to state [60]
transition on MEGGYCHECKBUTTON to state [56]
transition on MINUS to state [57]

-------------------
lalr_state [67]: {
  [exp ::= (*) THIS , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp PLUS exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) MEGGYGETPIXEL LPAREN exp COMMA exp RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) LPAREN exp RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp AND (*) exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp AND exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp LT exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) INT_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) FALSE , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) NEW ID LPAREN RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp EQUAL exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) MEGGYCHECKBUTTON LPAREN exp RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) TONE_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) ID , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp TIMES exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) MINUS exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) NOT exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp DOT ID LPAREN exp_list RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp MINUS exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) LPAREN BYTE RPAREN exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) TRUE , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on BUTTON_LITERAL to state [59]
transition on LPAREN to state [49]
transition on COLOR_LITERAL to state [55]
transition on NOT to state [43]
transition on TONE_LITERAL to state [47]
transition on THIS to state [52]
transition on ID to state [51]
transition on MEGGYGETPIXEL to state [62]
transition on FALSE to state [58]
transition on INT_LITERAL to state [53]
transition on exp to state [84]
transition on TRUE to state [45]
transition on NEW to state [60]
transition on MEGGYCHECKBUTTON to state [56]
transition on MINUS to state [57]

-------------------
lalr_state [68]: {
  [exp ::= (*) THIS , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp PLUS (*) exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp PLUS exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) MEGGYGETPIXEL LPAREN exp COMMA exp RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) LPAREN exp RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp AND exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp LT exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) INT_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) FALSE , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) NEW ID LPAREN RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp EQUAL exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) MEGGYCHECKBUTTON LPAREN exp RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) TONE_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) ID , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp TIMES exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) MINUS exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) NOT exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp DOT ID LPAREN exp_list RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp MINUS exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) LPAREN BYTE RPAREN exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) TRUE , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on BUTTON_LITERAL to state [59]
transition on LPAREN to state [49]
transition on COLOR_LITERAL to state [55]
transition on NOT to state [43]
transition on TONE_LITERAL to state [47]
transition on THIS to state [52]
transition on ID to state [51]
transition on MEGGYGETPIXEL to state [62]
transition on FALSE to state [58]
transition on INT_LITERAL to state [53]
transition on exp to state [83]
transition on TRUE to state [45]
transition on NEW to state [60]
transition on MEGGYCHECKBUTTON to state [56]
transition on MINUS to state [57]

-------------------
lalr_state [69]: {
  [exp ::= (*) THIS , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp PLUS exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) MEGGYGETPIXEL LPAREN exp COMMA exp RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) LPAREN exp RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp AND exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp LT exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) INT_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) FALSE , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) NEW ID LPAREN RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp EQUAL (*) exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp EQUAL exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) MEGGYCHECKBUTTON LPAREN exp RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) TONE_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) ID , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp TIMES exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) MINUS exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) NOT exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp DOT ID LPAREN exp_list RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp MINUS exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) LPAREN BYTE RPAREN exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) TRUE , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on BUTTON_LITERAL to state [59]
transition on LPAREN to state [49]
transition on COLOR_LITERAL to state [55]
transition on NOT to state [43]
transition on TONE_LITERAL to state [47]
transition on THIS to state [52]
transition on ID to state [51]
transition on MEGGYGETPIXEL to state [62]
transition on FALSE to state [58]
transition on INT_LITERAL to state [53]
transition on exp to state [82]
transition on TRUE to state [45]
transition on NEW to state [60]
transition on MEGGYCHECKBUTTON to state [56]
transition on MINUS to state [57]

-------------------
lalr_state [70]: {
  [exp ::= (*) THIS , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp PLUS exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) MEGGYGETPIXEL LPAREN exp COMMA exp RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) LPAREN exp RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp AND exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp LT exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) INT_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) FALSE , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) NEW ID LPAREN RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp EQUAL exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) MEGGYCHECKBUTTON LPAREN exp RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) TONE_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) ID , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp TIMES exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) MINUS exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) NOT exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp DOT ID LPAREN exp_list RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp MINUS (*) exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp MINUS exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) LPAREN BYTE RPAREN exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) TRUE , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on BUTTON_LITERAL to state [59]
transition on LPAREN to state [49]
transition on COLOR_LITERAL to state [55]
transition on NOT to state [43]
transition on TONE_LITERAL to state [47]
transition on THIS to state [52]
transition on ID to state [51]
transition on MEGGYGETPIXEL to state [62]
transition on FALSE to state [58]
transition on INT_LITERAL to state [53]
transition on exp to state [81]
transition on TRUE to state [45]
transition on NEW to state [60]
transition on MEGGYCHECKBUTTON to state [56]
transition on MINUS to state [57]

-------------------
lalr_state [71]: {
  [exp ::= (*) THIS , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp PLUS exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) MEGGYGETPIXEL LPAREN exp COMMA exp RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) LPAREN exp RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp AND exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp LT exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) INT_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) FALSE , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) NEW ID LPAREN RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp EQUAL exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) MEGGYCHECKBUTTON LPAREN exp RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) TONE_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) ID , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp TIMES (*) exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp TIMES exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) MINUS exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) NOT exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp DOT ID LPAREN exp_list RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp MINUS exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) LPAREN BYTE RPAREN exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) TRUE , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on BUTTON_LITERAL to state [59]
transition on LPAREN to state [49]
transition on COLOR_LITERAL to state [55]
transition on NOT to state [43]
transition on TONE_LITERAL to state [47]
transition on THIS to state [52]
transition on ID to state [51]
transition on MEGGYGETPIXEL to state [62]
transition on FALSE to state [58]
transition on INT_LITERAL to state [53]
transition on exp to state [80]
transition on TRUE to state [45]
transition on NEW to state [60]
transition on MEGGYCHECKBUTTON to state [56]
transition on MINUS to state [57]

-------------------
lalr_state [72]: {
  [exp ::= exp DOT (*) ID LPAREN exp_list RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on ID to state [73]

-------------------
lalr_state [73]: {
  [exp ::= exp DOT ID (*) LPAREN exp_list RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on LPAREN to state [74]

-------------------
lalr_state [74]: {
  [exp_list ::= (*) , {MINUS LPAREN RPAREN NOT COMMA NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp_list ::= (*) exp_list exp , {MINUS LPAREN RPAREN NOT COMMA NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp_list ::= (*) exp_list COMMA exp , {MINUS LPAREN RPAREN NOT COMMA NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp DOT ID LPAREN (*) exp_list RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on exp_list to state [75]

-------------------
lalr_state [75]: {
  [exp ::= (*) THIS , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp PLUS exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) MEGGYGETPIXEL LPAREN exp COMMA exp RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp_list ::= exp_list (*) COMMA exp , {MINUS LPAREN RPAREN NOT COMMA NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) LPAREN exp RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp AND exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp LT exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) INT_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) FALSE , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) NEW ID LPAREN RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp EQUAL exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) MEGGYCHECKBUTTON LPAREN exp RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) TONE_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) ID , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp_list ::= exp_list (*) exp , {MINUS LPAREN RPAREN NOT COMMA NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp DOT ID LPAREN exp_list (*) RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp TIMES exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) MINUS exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) NOT exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp DOT ID LPAREN exp_list RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp MINUS exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) LPAREN BYTE RPAREN exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) TRUE , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on BUTTON_LITERAL to state [59]
transition on LPAREN to state [49]
transition on COLOR_LITERAL to state [55]
transition on NOT to state [43]
transition on TONE_LITERAL to state [47]
transition on THIS to state [52]
transition on RPAREN to state [78]
transition on COMMA to state [77]
transition on ID to state [51]
transition on MEGGYGETPIXEL to state [62]
transition on FALSE to state [58]
transition on INT_LITERAL to state [53]
transition on exp to state [76]
transition on TRUE to state [45]
transition on NEW to state [60]
transition on MEGGYCHECKBUTTON to state [56]
transition on MINUS to state [57]

-------------------
lalr_state [76]: {
  [exp ::= exp (*) LT exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) PLUS exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) DOT ID LPAREN exp_list RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) MINUS exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp_list ::= exp_list exp (*) , {MINUS LPAREN RPAREN NOT COMMA NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) TIMES exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) EQUAL exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) AND exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on DOT to state [72]
transition on TIMES to state [71]
transition on MINUS to state [70]
transition on EQUAL to state [69]
transition on PLUS to state [68]
transition on AND to state [67]
transition on LT to state [66]

-------------------
lalr_state [77]: {
  [exp ::= (*) THIS , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp PLUS exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) MEGGYGETPIXEL LPAREN exp COMMA exp RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp_list ::= exp_list COMMA (*) exp , {MINUS LPAREN RPAREN NOT COMMA NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) LPAREN exp RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp AND exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp LT exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) INT_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) FALSE , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) NEW ID LPAREN RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp EQUAL exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) MEGGYCHECKBUTTON LPAREN exp RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) TONE_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) ID , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp TIMES exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) MINUS exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) NOT exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp DOT ID LPAREN exp_list RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp MINUS exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) LPAREN BYTE RPAREN exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) TRUE , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on BUTTON_LITERAL to state [59]
transition on LPAREN to state [49]
transition on COLOR_LITERAL to state [55]
transition on NOT to state [43]
transition on TONE_LITERAL to state [47]
transition on THIS to state [52]
transition on ID to state [51]
transition on MEGGYGETPIXEL to state [62]
transition on FALSE to state [58]
transition on INT_LITERAL to state [53]
transition on exp to state [79]
transition on TRUE to state [45]
transition on NEW to state [60]
transition on MEGGYCHECKBUTTON to state [56]
transition on MINUS to state [57]

-------------------
lalr_state [78]: {
  [exp ::= exp DOT ID LPAREN exp_list RPAREN (*) , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}

-------------------
lalr_state [79]: {
  [exp ::= exp (*) LT exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) PLUS exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) DOT ID LPAREN exp_list RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) MINUS exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) TIMES exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp_list ::= exp_list COMMA exp (*) , {MINUS LPAREN RPAREN NOT COMMA NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) EQUAL exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) AND exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on DOT to state [72]
transition on TIMES to state [71]
transition on MINUS to state [70]
transition on EQUAL to state [69]
transition on PLUS to state [68]
transition on AND to state [67]
transition on LT to state [66]

-------------------
lalr_state [80]: {
  [exp ::= exp (*) LT exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) PLUS exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) DOT ID LPAREN exp_list RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp TIMES exp (*) , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) MINUS exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) TIMES exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) EQUAL exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) AND exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on DOT to state [72]
transition on TIMES to state [71]
transition on MINUS to state [70]
transition on EQUAL to state [69]
transition on PLUS to state [68]
transition on AND to state [67]
transition on LT to state [66]

-------------------
lalr_state [81]: {
  [exp ::= exp (*) LT exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) PLUS exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp MINUS exp (*) , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) DOT ID LPAREN exp_list RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) MINUS exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) TIMES exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) EQUAL exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) AND exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on DOT to state [72]
transition on TIMES to state [71]
transition on MINUS to state [70]
transition on EQUAL to state [69]
transition on PLUS to state [68]
transition on AND to state [67]
transition on LT to state [66]

-------------------
lalr_state [82]: {
  [exp ::= exp (*) LT exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) PLUS exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) DOT ID LPAREN exp_list RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) MINUS exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) TIMES exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp EQUAL exp (*) , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) EQUAL exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) AND exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on DOT to state [72]
transition on TIMES to state [71]
transition on MINUS to state [70]
transition on EQUAL to state [69]
transition on PLUS to state [68]
transition on AND to state [67]
transition on LT to state [66]

-------------------
lalr_state [83]: {
  [exp ::= exp (*) LT exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) PLUS exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) DOT ID LPAREN exp_list RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) MINUS exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) TIMES exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) EQUAL exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) AND exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp PLUS exp (*) , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on DOT to state [72]
transition on TIMES to state [71]
transition on MINUS to state [70]
transition on EQUAL to state [69]
transition on PLUS to state [68]
transition on AND to state [67]
transition on LT to state [66]

-------------------
lalr_state [84]: {
  [exp ::= exp (*) LT exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) PLUS exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) DOT ID LPAREN exp_list RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) MINUS exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) TIMES exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp AND exp (*) , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) EQUAL exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) AND exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on DOT to state [72]
transition on TIMES to state [71]
transition on MINUS to state [70]
transition on EQUAL to state [69]
transition on PLUS to state [68]
transition on AND to state [67]
transition on LT to state [66]

-------------------
lalr_state [85]: {
  [exp ::= exp (*) LT exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) PLUS exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) DOT ID LPAREN exp_list RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) MINUS exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) TIMES exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) EQUAL exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) AND exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp LT exp (*) , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on DOT to state [72]
transition on TIMES to state [71]
transition on MINUS to state [70]
transition on EQUAL to state [69]
transition on PLUS to state [68]
transition on AND to state [67]
transition on LT to state [66]

-------------------
lalr_state [86]: {
  [exp ::= exp (*) LT exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= exp (*) PLUS exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= exp (*) DOT ID LPAREN exp_list RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= exp (*) MINUS exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= exp (*) TIMES exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= exp (*) EQUAL exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= exp (*) AND exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= MEGGYGETPIXEL LPAREN exp COMMA exp (*) RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on DOT to state [72]
transition on TIMES to state [71]
transition on MINUS to state [70]
transition on EQUAL to state [69]
transition on PLUS to state [68]
transition on AND to state [67]
transition on RPAREN to state [87]
transition on LT to state [66]

-------------------
lalr_state [87]: {
  [exp ::= MEGGYGETPIXEL LPAREN exp COMMA exp RPAREN (*) , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}

-------------------
lalr_state [88]: {
  [exp ::= (*) THIS , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [statement ::= MEGGYDELAY LPAREN (*) exp RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp PLUS exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) MEGGYGETPIXEL LPAREN exp COMMA exp RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) LPAREN exp RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) exp AND exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) exp LT exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) INT_LITERAL , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) FALSE , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) NEW ID LPAREN RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) exp EQUAL exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) MEGGYCHECKBUTTON LPAREN exp RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) TONE_LITERAL , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) ID , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) exp TIMES exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) MINUS exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) NOT exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) exp DOT ID LPAREN exp_list RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) exp MINUS exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) LPAREN BYTE RPAREN exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) TRUE , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
}
transition on BUTTON_LITERAL to state [59]
transition on LPAREN to state [49]
transition on COLOR_LITERAL to state [55]
transition on NOT to state [43]
transition on TONE_LITERAL to state [47]
transition on THIS to state [52]
transition on ID to state [51]
transition on MEGGYGETPIXEL to state [62]
transition on FALSE to state [58]
transition on INT_LITERAL to state [53]
transition on exp to state [89]
transition on TRUE to state [45]
transition on NEW to state [60]
transition on MEGGYCHECKBUTTON to state [56]
transition on MINUS to state [57]

-------------------
lalr_state [89]: {
  [exp ::= exp (*) LT exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= exp (*) PLUS exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= exp (*) DOT ID LPAREN exp_list RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= exp (*) MINUS exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= exp (*) TIMES exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [statement ::= MEGGYDELAY LPAREN exp (*) RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) EQUAL exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= exp (*) AND exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
}
transition on DOT to state [72]
transition on TIMES to state [71]
transition on MINUS to state [70]
transition on EQUAL to state [69]
transition on PLUS to state [68]
transition on AND to state [67]
transition on RPAREN to state [90]
transition on LT to state [66]

-------------------
lalr_state [90]: {
  [statement ::= MEGGYDELAY LPAREN exp RPAREN (*) SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on SEMI to state [91]

-------------------
lalr_state [91]: {
  [statement ::= MEGGYDELAY LPAREN exp RPAREN SEMI (*) , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}

-------------------
lalr_state [92]: {
  [exp ::= NEW ID (*) LPAREN RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on LPAREN to state [93]

-------------------
lalr_state [93]: {
  [exp ::= NEW ID LPAREN (*) RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on RPAREN to state [94]

-------------------
lalr_state [94]: {
  [exp ::= NEW ID LPAREN RPAREN (*) , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}

-------------------
lalr_state [95]: {
  [exp ::= exp (*) LT exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) PLUS exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) DOT ID LPAREN exp_list RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) MINUS exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) TIMES exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= MINUS exp (*) , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) EQUAL exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) AND exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on DOT to state [72]
transition on TIMES to state [71]
transition on MINUS to state [70]
transition on EQUAL to state [69]
transition on PLUS to state [68]
transition on AND to state [67]
transition on LT to state [66]

-------------------
lalr_state [96]: {
  [exp ::= (*) THIS , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) exp PLUS exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) MEGGYGETPIXEL LPAREN exp COMMA exp RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) LPAREN exp RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) exp AND exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) exp LT exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) INT_LITERAL , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) FALSE , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) NEW ID LPAREN RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= MEGGYCHECKBUTTON LPAREN (*) exp RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp EQUAL exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) MEGGYCHECKBUTTON LPAREN exp RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) TONE_LITERAL , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) ID , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) exp TIMES exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) MINUS exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) NOT exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) exp DOT ID LPAREN exp_list RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) exp MINUS exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) LPAREN BYTE RPAREN exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) TRUE , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
}
transition on BUTTON_LITERAL to state [59]
transition on LPAREN to state [49]
transition on COLOR_LITERAL to state [55]
transition on NOT to state [43]
transition on TONE_LITERAL to state [47]
transition on THIS to state [52]
transition on ID to state [51]
transition on MEGGYGETPIXEL to state [62]
transition on FALSE to state [58]
transition on INT_LITERAL to state [53]
transition on exp to state [97]
transition on TRUE to state [45]
transition on NEW to state [60]
transition on MEGGYCHECKBUTTON to state [56]
transition on MINUS to state [57]

-------------------
lalr_state [97]: {
  [exp ::= exp (*) LT exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= exp (*) PLUS exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= exp (*) DOT ID LPAREN exp_list RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= exp (*) MINUS exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= exp (*) TIMES exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= exp (*) EQUAL exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= MEGGYCHECKBUTTON LPAREN exp (*) RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) AND exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
}
transition on DOT to state [72]
transition on TIMES to state [71]
transition on MINUS to state [70]
transition on EQUAL to state [69]
transition on PLUS to state [68]
transition on AND to state [67]
transition on RPAREN to state [98]
transition on LT to state [66]

-------------------
lalr_state [98]: {
  [exp ::= MEGGYCHECKBUTTON LPAREN exp RPAREN (*) , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}

-------------------
lalr_state [99]: {
  [exp ::= (*) THIS , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) exp PLUS exp , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) MEGGYGETPIXEL LPAREN exp COMMA exp RPAREN , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) LPAREN exp RPAREN , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) exp AND exp , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) exp LT exp , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) INT_LITERAL , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) FALSE , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) NEW ID LPAREN RPAREN , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) exp EQUAL exp , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) MEGGYCHECKBUTTON LPAREN exp RPAREN , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) TONE_LITERAL , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) ID , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [statement ::= MEGGYSETPIXEL LPAREN (*) exp COMMA exp COMMA exp RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp TIMES exp , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) MINUS exp , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) NOT exp , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) exp DOT ID LPAREN exp_list RPAREN , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) exp MINUS exp , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) LPAREN BYTE RPAREN exp , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) TRUE , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
}
transition on BUTTON_LITERAL to state [59]
transition on LPAREN to state [49]
transition on COLOR_LITERAL to state [55]
transition on NOT to state [43]
transition on TONE_LITERAL to state [47]
transition on THIS to state [52]
transition on ID to state [51]
transition on MEGGYGETPIXEL to state [62]
transition on FALSE to state [58]
transition on INT_LITERAL to state [53]
transition on exp to state [100]
transition on TRUE to state [45]
transition on NEW to state [60]
transition on MEGGYCHECKBUTTON to state [56]
transition on MINUS to state [57]

-------------------
lalr_state [100]: {
  [exp ::= exp (*) LT exp , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= exp (*) PLUS exp , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= exp (*) DOT ID LPAREN exp_list RPAREN , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= exp (*) MINUS exp , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= exp (*) TIMES exp , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= exp (*) EQUAL exp , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= exp (*) AND exp , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [statement ::= MEGGYSETPIXEL LPAREN exp (*) COMMA exp COMMA exp RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on DOT to state [72]
transition on TIMES to state [71]
transition on MINUS to state [70]
transition on EQUAL to state [69]
transition on PLUS to state [68]
transition on AND to state [67]
transition on LT to state [66]
transition on COMMA to state [101]

-------------------
lalr_state [101]: {
  [exp ::= (*) THIS , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) exp PLUS exp , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) MEGGYGETPIXEL LPAREN exp COMMA exp RPAREN , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) LPAREN exp RPAREN , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) exp AND exp , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) exp LT exp , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) INT_LITERAL , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) FALSE , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) NEW ID LPAREN RPAREN , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) exp EQUAL exp , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) MEGGYCHECKBUTTON LPAREN exp RPAREN , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) TONE_LITERAL , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) ID , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [statement ::= MEGGYSETPIXEL LPAREN exp COMMA (*) exp COMMA exp RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp TIMES exp , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) MINUS exp , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) NOT exp , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) exp DOT ID LPAREN exp_list RPAREN , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) exp MINUS exp , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) LPAREN BYTE RPAREN exp , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) TRUE , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
}
transition on BUTTON_LITERAL to state [59]
transition on LPAREN to state [49]
transition on COLOR_LITERAL to state [55]
transition on NOT to state [43]
transition on TONE_LITERAL to state [47]
transition on THIS to state [52]
transition on ID to state [51]
transition on MEGGYGETPIXEL to state [62]
transition on FALSE to state [58]
transition on INT_LITERAL to state [53]
transition on exp to state [102]
transition on TRUE to state [45]
transition on NEW to state [60]
transition on MEGGYCHECKBUTTON to state [56]
transition on MINUS to state [57]

-------------------
lalr_state [102]: {
  [exp ::= exp (*) LT exp , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= exp (*) PLUS exp , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= exp (*) DOT ID LPAREN exp_list RPAREN , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= exp (*) MINUS exp , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= exp (*) TIMES exp , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [statement ::= MEGGYSETPIXEL LPAREN exp COMMA exp (*) COMMA exp RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) EQUAL exp , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= exp (*) AND exp , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
}
transition on DOT to state [72]
transition on TIMES to state [71]
transition on MINUS to state [70]
transition on EQUAL to state [69]
transition on PLUS to state [68]
transition on AND to state [67]
transition on LT to state [66]
transition on COMMA to state [103]

-------------------
lalr_state [103]: {
  [exp ::= (*) THIS , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) exp PLUS exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) MEGGYGETPIXEL LPAREN exp COMMA exp RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) LPAREN exp RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) exp AND exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) exp LT exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) INT_LITERAL , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) FALSE , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) NEW ID LPAREN RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) exp EQUAL exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) MEGGYCHECKBUTTON LPAREN exp RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [statement ::= MEGGYSETPIXEL LPAREN exp COMMA exp COMMA (*) exp RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) TONE_LITERAL , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) ID , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) exp TIMES exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) MINUS exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) NOT exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) exp DOT ID LPAREN exp_list RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) exp MINUS exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) LPAREN BYTE RPAREN exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) TRUE , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
}
transition on BUTTON_LITERAL to state [59]
transition on LPAREN to state [49]
transition on COLOR_LITERAL to state [55]
transition on NOT to state [43]
transition on TONE_LITERAL to state [47]
transition on THIS to state [52]
transition on ID to state [51]
transition on MEGGYGETPIXEL to state [62]
transition on FALSE to state [58]
transition on INT_LITERAL to state [53]
transition on exp to state [104]
transition on TRUE to state [45]
transition on NEW to state [60]
transition on MEGGYCHECKBUTTON to state [56]
transition on MINUS to state [57]

-------------------
lalr_state [104]: {
  [exp ::= exp (*) LT exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= exp (*) PLUS exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= exp (*) DOT ID LPAREN exp_list RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= exp (*) MINUS exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= exp (*) TIMES exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [statement ::= MEGGYSETPIXEL LPAREN exp COMMA exp COMMA exp (*) RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) EQUAL exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= exp (*) AND exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
}
transition on DOT to state [72]
transition on TIMES to state [71]
transition on MINUS to state [70]
transition on EQUAL to state [69]
transition on PLUS to state [68]
transition on AND to state [67]
transition on RPAREN to state [105]
transition on LT to state [66]

-------------------
lalr_state [105]: {
  [statement ::= MEGGYSETPIXEL LPAREN exp COMMA exp COMMA exp RPAREN (*) SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on SEMI to state [106]

-------------------
lalr_state [106]: {
  [statement ::= MEGGYSETPIXEL LPAREN exp COMMA exp COMMA exp RPAREN SEMI (*) , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}

-------------------
lalr_state [107]: {
  [exp ::= (*) THIS , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [statement ::= (*) MEGGYDELAY LPAREN exp RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF NOT WHILE NEW MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [statement ::= (*) exp DOT ID LPAREN exp_list RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF NOT WHILE NEW MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp PLUS exp , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) MEGGYGETPIXEL LPAREN exp COMMA exp RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) LPAREN exp RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [statement ::= LBRACE statement_list (*) RBRACE , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [statement ::= (*) LBRACE statement_list RBRACE , {MINUS LPAREN LBRACE RBRACE IF NOT WHILE NEW MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [statement ::= (*) WHILE LPAREN exp RPAREN statement , {MINUS LPAREN LBRACE RBRACE IF NOT WHILE NEW MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp AND exp , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) exp LT exp , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) INT_LITERAL , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) FALSE , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) NEW ID LPAREN RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [statement ::= (*) IF LPAREN exp RPAREN statement , {MINUS LPAREN LBRACE RBRACE IF NOT WHILE NEW MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [statement_list ::= statement_list (*) statement , {MINUS LPAREN LBRACE RBRACE IF NOT WHILE NEW MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp EQUAL exp , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) MEGGYCHECKBUTTON LPAREN exp RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) TONE_LITERAL , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) ID , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [statement ::= (*) MEGGYSETPIXEL LPAREN exp COMMA exp COMMA exp RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF NOT WHILE NEW MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [statement ::= (*) MEGGYTONESTART LPAREN exp COMMA exp RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF NOT WHILE NEW MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp TIMES exp , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) MINUS exp , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) NOT exp , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) exp DOT ID LPAREN exp_list RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [statement ::= (*) IF LPAREN exp RPAREN statement ELSE statement , {MINUS LPAREN LBRACE RBRACE IF NOT WHILE NEW MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp MINUS exp , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) LPAREN BYTE RPAREN exp , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) TRUE , {PLUS MINUS TIMES LT EQUAL AND DOT }]
}
transition on MEGGYGETPIXEL to state [62]
transition on MEGGYDELAY to state [61]
transition on NEW to state [60]
transition on BUTTON_LITERAL to state [59]
transition on FALSE to state [58]
transition on MINUS to state [57]
transition on MEGGYCHECKBUTTON to state [56]
transition on COLOR_LITERAL to state [55]
transition on MEGGYSETPIXEL to state [54]
transition on INT_LITERAL to state [53]
transition on THIS to state [52]
transition on ID to state [51]
transition on LBRACE to state [50]
transition on LPAREN to state [49]
transition on IF to state [48]
transition on TONE_LITERAL to state [47]
transition on exp to state [46]
transition on TRUE to state [45]
transition on NOT to state [43]
transition on WHILE to state [42]
transition on RBRACE to state [108]
transition on statement to state [41]
transition on MEGGYTONESTART to state [40]

-------------------
lalr_state [108]: {
  [statement ::= LBRACE statement_list RBRACE (*) , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}

-------------------
lalr_state [109]: {
  [exp ::= exp (*) LT exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= exp (*) PLUS exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= exp (*) DOT ID LPAREN exp_list RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= exp (*) MINUS exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= exp (*) TIMES exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= LPAREN exp (*) RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) EQUAL exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= exp (*) AND exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
}
transition on DOT to state [72]
transition on TIMES to state [71]
transition on MINUS to state [70]
transition on EQUAL to state [69]
transition on PLUS to state [68]
transition on AND to state [67]
transition on RPAREN to state [113]
transition on LT to state [66]

-------------------
lalr_state [110]: {
  [exp ::= LPAREN BYTE (*) RPAREN exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on RPAREN to state [111]

-------------------
lalr_state [111]: {
  [exp ::= (*) THIS , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp PLUS exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) MEGGYGETPIXEL LPAREN exp COMMA exp RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) LPAREN exp RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp AND exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp LT exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) INT_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) FALSE , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) NEW ID LPAREN RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp EQUAL exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) MEGGYCHECKBUTTON LPAREN exp RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) TONE_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) ID , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp TIMES exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) MINUS exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) NOT exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp DOT ID LPAREN exp_list RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= LPAREN BYTE RPAREN (*) exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp MINUS exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) LPAREN BYTE RPAREN exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) TRUE , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on BUTTON_LITERAL to state [59]
transition on LPAREN to state [49]
transition on COLOR_LITERAL to state [55]
transition on NOT to state [43]
transition on TONE_LITERAL to state [47]
transition on THIS to state [52]
transition on ID to state [51]
transition on MEGGYGETPIXEL to state [62]
transition on FALSE to state [58]
transition on INT_LITERAL to state [53]
transition on exp to state [112]
transition on TRUE to state [45]
transition on NEW to state [60]
transition on MEGGYCHECKBUTTON to state [56]
transition on MINUS to state [57]

-------------------
lalr_state [112]: {
  [exp ::= exp (*) LT exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) PLUS exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) DOT ID LPAREN exp_list RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= LPAREN BYTE RPAREN exp (*) , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) MINUS exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) TIMES exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) EQUAL exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) AND exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on DOT to state [72]
transition on TIMES to state [71]
transition on MINUS to state [70]
transition on EQUAL to state [69]
transition on PLUS to state [68]
transition on AND to state [67]
transition on LT to state [66]

-------------------
lalr_state [113]: {
  [exp ::= LPAREN exp RPAREN (*) , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}

-------------------
lalr_state [114]: {
  [exp ::= (*) THIS , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) exp PLUS exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) MEGGYGETPIXEL LPAREN exp COMMA exp RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) LPAREN exp RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) exp AND exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) exp LT exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) INT_LITERAL , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) FALSE , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) NEW ID LPAREN RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [statement ::= IF LPAREN (*) exp RPAREN statement , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp EQUAL exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) MEGGYCHECKBUTTON LPAREN exp RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) TONE_LITERAL , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) ID , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) exp TIMES exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) MINUS exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) NOT exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) exp DOT ID LPAREN exp_list RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [statement ::= IF LPAREN (*) exp RPAREN statement ELSE statement , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp MINUS exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) LPAREN BYTE RPAREN exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) TRUE , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
}
transition on BUTTON_LITERAL to state [59]
transition on LPAREN to state [49]
transition on COLOR_LITERAL to state [55]
transition on NOT to state [43]
transition on TONE_LITERAL to state [47]
transition on THIS to state [52]
transition on ID to state [51]
transition on MEGGYGETPIXEL to state [62]
transition on FALSE to state [58]
transition on INT_LITERAL to state [53]
transition on exp to state [115]
transition on TRUE to state [45]
transition on NEW to state [60]
transition on MEGGYCHECKBUTTON to state [56]
transition on MINUS to state [57]

-------------------
lalr_state [115]: {
  [exp ::= exp (*) MINUS exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= exp (*) TIMES exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= exp (*) DOT ID LPAREN exp_list RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= exp (*) EQUAL exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= exp (*) AND exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [statement ::= IF LPAREN exp (*) RPAREN statement ELSE statement , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) LT exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= exp (*) PLUS exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [statement ::= IF LPAREN exp (*) RPAREN statement , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on DOT to state [72]
transition on TIMES to state [71]
transition on MINUS to state [70]
transition on EQUAL to state [69]
transition on PLUS to state [68]
transition on AND to state [67]
transition on RPAREN to state [116]
transition on LT to state [66]

-------------------
lalr_state [116]: {
  [exp ::= (*) THIS , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [statement ::= (*) MEGGYDELAY LPAREN exp RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [statement ::= (*) exp DOT ID LPAREN exp_list RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp PLUS exp , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) MEGGYGETPIXEL LPAREN exp COMMA exp RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) LPAREN exp RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [statement ::= (*) LBRACE statement_list RBRACE , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [statement ::= (*) WHILE LPAREN exp RPAREN statement , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp AND exp , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) exp LT exp , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) INT_LITERAL , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) FALSE , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) NEW ID LPAREN RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [statement ::= IF LPAREN exp RPAREN (*) statement , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [statement ::= (*) IF LPAREN exp RPAREN statement , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp EQUAL exp , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) MEGGYCHECKBUTTON LPAREN exp RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) TONE_LITERAL , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) ID , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [statement ::= (*) MEGGYSETPIXEL LPAREN exp COMMA exp COMMA exp RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [statement ::= (*) MEGGYTONESTART LPAREN exp COMMA exp RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp TIMES exp , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) MINUS exp , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) NOT exp , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [statement ::= IF LPAREN exp RPAREN (*) statement ELSE statement , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp DOT ID LPAREN exp_list RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [statement ::= (*) IF LPAREN exp RPAREN statement ELSE statement , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp MINUS exp , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) LPAREN BYTE RPAREN exp , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) TRUE , {PLUS MINUS TIMES LT EQUAL AND DOT }]
}
transition on MEGGYGETPIXEL to state [62]
transition on MEGGYDELAY to state [61]
transition on NEW to state [60]
transition on BUTTON_LITERAL to state [59]
transition on FALSE to state [58]
transition on MINUS to state [57]
transition on MEGGYCHECKBUTTON to state [56]
transition on COLOR_LITERAL to state [55]
transition on MEGGYSETPIXEL to state [54]
transition on INT_LITERAL to state [53]
transition on THIS to state [52]
transition on ID to state [51]
transition on LBRACE to state [50]
transition on LPAREN to state [49]
transition on IF to state [48]
transition on TONE_LITERAL to state [47]
transition on exp to state [46]
transition on TRUE to state [45]
transition on NOT to state [43]
transition on WHILE to state [42]
transition on statement to state [117]
transition on MEGGYTONESTART to state [40]

-------------------
lalr_state [117]: {
  [statement ::= IF LPAREN exp RPAREN statement (*) , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [statement ::= IF LPAREN exp RPAREN statement (*) ELSE statement , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on ELSE to state [118]

-------------------
lalr_state [118]: {
  [exp ::= (*) THIS , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [statement ::= (*) MEGGYDELAY LPAREN exp RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [statement ::= (*) exp DOT ID LPAREN exp_list RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp PLUS exp , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) MEGGYGETPIXEL LPAREN exp COMMA exp RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) LPAREN exp RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [statement ::= (*) LBRACE statement_list RBRACE , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [statement ::= (*) WHILE LPAREN exp RPAREN statement , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp AND exp , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) exp LT exp , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) INT_LITERAL , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) FALSE , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) NEW ID LPAREN RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [statement ::= (*) IF LPAREN exp RPAREN statement , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp EQUAL exp , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) MEGGYCHECKBUTTON LPAREN exp RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) TONE_LITERAL , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) ID , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [statement ::= (*) MEGGYSETPIXEL LPAREN exp COMMA exp COMMA exp RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [statement ::= (*) MEGGYTONESTART LPAREN exp COMMA exp RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp TIMES exp , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) MINUS exp , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [statement ::= IF LPAREN exp RPAREN statement ELSE (*) statement , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) NOT exp , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) exp DOT ID LPAREN exp_list RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [statement ::= (*) IF LPAREN exp RPAREN statement ELSE statement , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp MINUS exp , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) LPAREN BYTE RPAREN exp , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) TRUE , {PLUS MINUS TIMES LT EQUAL AND DOT }]
}
transition on MEGGYGETPIXEL to state [62]
transition on MEGGYDELAY to state [61]
transition on NEW to state [60]
transition on BUTTON_LITERAL to state [59]
transition on FALSE to state [58]
transition on MINUS to state [57]
transition on MEGGYCHECKBUTTON to state [56]
transition on COLOR_LITERAL to state [55]
transition on MEGGYSETPIXEL to state [54]
transition on INT_LITERAL to state [53]
transition on THIS to state [52]
transition on ID to state [51]
transition on LBRACE to state [50]
transition on LPAREN to state [49]
transition on IF to state [48]
transition on TONE_LITERAL to state [47]
transition on exp to state [46]
transition on TRUE to state [45]
transition on NOT to state [43]
transition on WHILE to state [42]
transition on statement to state [119]
transition on MEGGYTONESTART to state [40]

-------------------
lalr_state [119]: {
  [statement ::= IF LPAREN exp RPAREN statement ELSE statement (*) , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}

-------------------
lalr_state [120]: {
  [exp ::= exp DOT (*) ID LPAREN exp_list RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [statement ::= exp DOT (*) ID LPAREN exp_list RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on ID to state [121]

-------------------
lalr_state [121]: {
  [exp ::= exp DOT ID (*) LPAREN exp_list RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [statement ::= exp DOT ID (*) LPAREN exp_list RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on LPAREN to state [122]

-------------------
lalr_state [122]: {
  [exp_list ::= (*) , {MINUS LPAREN RPAREN NOT COMMA NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp_list ::= (*) exp_list exp , {MINUS LPAREN RPAREN NOT COMMA NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [statement ::= exp DOT ID LPAREN (*) exp_list RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp_list ::= (*) exp_list COMMA exp , {MINUS LPAREN RPAREN NOT COMMA NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp DOT ID LPAREN (*) exp_list RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT }]
}
transition on exp_list to state [123]

-------------------
lalr_state [123]: {
  [exp ::= (*) THIS , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [statement ::= exp DOT ID LPAREN exp_list (*) RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp PLUS exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) MEGGYGETPIXEL LPAREN exp COMMA exp RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp_list ::= exp_list (*) COMMA exp , {MINUS LPAREN RPAREN NOT COMMA NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) LPAREN exp RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp AND exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp LT exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) INT_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) FALSE , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) NEW ID LPAREN RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp EQUAL exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) MEGGYCHECKBUTTON LPAREN exp RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) TONE_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) ID , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp_list ::= exp_list (*) exp , {MINUS LPAREN RPAREN NOT COMMA NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp DOT ID LPAREN exp_list (*) RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) exp TIMES exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) MINUS exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) NOT exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp DOT ID LPAREN exp_list RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp MINUS exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) LPAREN BYTE RPAREN exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) TRUE , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on BUTTON_LITERAL to state [59]
transition on LPAREN to state [49]
transition on COLOR_LITERAL to state [55]
transition on NOT to state [43]
transition on TONE_LITERAL to state [47]
transition on RPAREN to state [124]
transition on THIS to state [52]
transition on COMMA to state [77]
transition on ID to state [51]
transition on MEGGYGETPIXEL to state [62]
transition on FALSE to state [58]
transition on INT_LITERAL to state [53]
transition on exp to state [76]
transition on TRUE to state [45]
transition on NEW to state [60]
transition on MEGGYCHECKBUTTON to state [56]
transition on MINUS to state [57]

-------------------
lalr_state [124]: {
  [statement ::= exp DOT ID LPAREN exp_list RPAREN (*) SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp DOT ID LPAREN exp_list RPAREN (*) , {PLUS MINUS TIMES LT EQUAL AND DOT }]
}
transition on SEMI to state [125]

-------------------
lalr_state [125]: {
  [statement ::= exp DOT ID LPAREN exp_list RPAREN SEMI (*) , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}

-------------------
lalr_state [126]: {
  [exp ::= exp (*) LT exp , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [exp ::= exp (*) PLUS exp , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [method ::= PUBLIC type ID LPAREN formal_list RPAREN LBRACE statement_list RETURN exp (*) SEMI , {RBRACE PUBLIC }]
  [exp ::= exp (*) DOT ID LPAREN exp_list RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [exp ::= exp (*) MINUS exp , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [exp ::= exp (*) TIMES exp , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [exp ::= exp (*) EQUAL exp , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
  [exp ::= exp (*) AND exp , {PLUS MINUS TIMES LT EQUAL AND DOT SEMI }]
}
transition on DOT to state [72]
transition on TIMES to state [71]
transition on SEMI to state [127]
transition on MINUS to state [70]
transition on EQUAL to state [69]
transition on PLUS to state [68]
transition on AND to state [67]
transition on LT to state [66]

-------------------
lalr_state [127]: {
  [method ::= PUBLIC type ID LPAREN formal_list RPAREN LBRACE statement_list RETURN exp SEMI (*) , {RBRACE PUBLIC }]
}

-------------------
lalr_state [128]: {
  [exp ::= exp (*) LT exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) PLUS exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) DOT ID LPAREN exp_list RPAREN , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) MINUS exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) TIMES exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) EQUAL exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) AND exp , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= NOT exp (*) , {PLUS MINUS TIMES LPAREN RPAREN LT EQUAL AND NOT COMMA DOT NEW SEMI MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on DOT to state [72]
transition on TIMES to state [71]
transition on MINUS to state [70]
transition on EQUAL to state [69]
transition on PLUS to state [68]
transition on AND to state [67]
transition on LT to state [66]

-------------------
lalr_state [129]: {
  [exp ::= (*) THIS , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) exp PLUS exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) MEGGYGETPIXEL LPAREN exp COMMA exp RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) LPAREN exp RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [statement ::= WHILE LPAREN (*) exp RPAREN statement , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp AND exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) exp LT exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) INT_LITERAL , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) FALSE , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) NEW ID LPAREN RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) exp EQUAL exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) MEGGYCHECKBUTTON LPAREN exp RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) TONE_LITERAL , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) ID , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) exp TIMES exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) MINUS exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) NOT exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) exp DOT ID LPAREN exp_list RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) exp MINUS exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) LPAREN BYTE RPAREN exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) TRUE , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
}
transition on BUTTON_LITERAL to state [59]
transition on LPAREN to state [49]
transition on COLOR_LITERAL to state [55]
transition on NOT to state [43]
transition on TONE_LITERAL to state [47]
transition on THIS to state [52]
transition on ID to state [51]
transition on MEGGYGETPIXEL to state [62]
transition on FALSE to state [58]
transition on INT_LITERAL to state [53]
transition on exp to state [130]
transition on TRUE to state [45]
transition on NEW to state [60]
transition on MEGGYCHECKBUTTON to state [56]
transition on MINUS to state [57]

-------------------
lalr_state [130]: {
  [exp ::= exp (*) LT exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= exp (*) PLUS exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= exp (*) DOT ID LPAREN exp_list RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= exp (*) MINUS exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= exp (*) TIMES exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [statement ::= WHILE LPAREN exp (*) RPAREN statement , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) EQUAL exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= exp (*) AND exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
}
transition on DOT to state [72]
transition on TIMES to state [71]
transition on MINUS to state [70]
transition on EQUAL to state [69]
transition on PLUS to state [68]
transition on AND to state [67]
transition on RPAREN to state [131]
transition on LT to state [66]

-------------------
lalr_state [131]: {
  [exp ::= (*) THIS , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [statement ::= (*) MEGGYDELAY LPAREN exp RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [statement ::= (*) exp DOT ID LPAREN exp_list RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp PLUS exp , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) MEGGYGETPIXEL LPAREN exp COMMA exp RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) LPAREN exp RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [statement ::= WHILE LPAREN exp RPAREN (*) statement , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [statement ::= (*) LBRACE statement_list RBRACE , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [statement ::= (*) WHILE LPAREN exp RPAREN statement , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp AND exp , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) exp LT exp , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) INT_LITERAL , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) FALSE , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) NEW ID LPAREN RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [statement ::= (*) IF LPAREN exp RPAREN statement , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp EQUAL exp , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) MEGGYCHECKBUTTON LPAREN exp RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) TONE_LITERAL , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) ID , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [statement ::= (*) MEGGYSETPIXEL LPAREN exp COMMA exp COMMA exp RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [statement ::= (*) MEGGYTONESTART LPAREN exp COMMA exp RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp TIMES exp , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) MINUS exp , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) NOT exp , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) exp DOT ID LPAREN exp_list RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [statement ::= (*) IF LPAREN exp RPAREN statement ELSE statement , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp MINUS exp , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) LPAREN BYTE RPAREN exp , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) TRUE , {PLUS MINUS TIMES LT EQUAL AND DOT }]
}
transition on MEGGYGETPIXEL to state [62]
transition on MEGGYDELAY to state [61]
transition on NEW to state [60]
transition on BUTTON_LITERAL to state [59]
transition on FALSE to state [58]
transition on MINUS to state [57]
transition on MEGGYCHECKBUTTON to state [56]
transition on COLOR_LITERAL to state [55]
transition on MEGGYSETPIXEL to state [54]
transition on INT_LITERAL to state [53]
transition on THIS to state [52]
transition on ID to state [51]
transition on LBRACE to state [50]
transition on LPAREN to state [49]
transition on IF to state [48]
transition on TONE_LITERAL to state [47]
transition on exp to state [46]
transition on TRUE to state [45]
transition on NOT to state [43]
transition on WHILE to state [42]
transition on statement to state [132]
transition on MEGGYTONESTART to state [40]

-------------------
lalr_state [132]: {
  [statement ::= WHILE LPAREN exp RPAREN statement (*) , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}

-------------------
lalr_state [133]: {
  [exp ::= (*) THIS , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) exp PLUS exp , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) MEGGYGETPIXEL LPAREN exp COMMA exp RPAREN , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) LPAREN exp RPAREN , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) exp AND exp , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) exp LT exp , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) INT_LITERAL , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) FALSE , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) NEW ID LPAREN RPAREN , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) exp EQUAL exp , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) MEGGYCHECKBUTTON LPAREN exp RPAREN , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) TONE_LITERAL , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) ID , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [statement ::= MEGGYTONESTART LPAREN (*) exp COMMA exp RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp TIMES exp , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) MINUS exp , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) NOT exp , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) exp DOT ID LPAREN exp_list RPAREN , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) exp MINUS exp , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) LPAREN BYTE RPAREN exp , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= (*) TRUE , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
}
transition on BUTTON_LITERAL to state [59]
transition on LPAREN to state [49]
transition on COLOR_LITERAL to state [55]
transition on NOT to state [43]
transition on TONE_LITERAL to state [47]
transition on THIS to state [52]
transition on ID to state [51]
transition on MEGGYGETPIXEL to state [62]
transition on FALSE to state [58]
transition on INT_LITERAL to state [53]
transition on exp to state [134]
transition on TRUE to state [45]
transition on NEW to state [60]
transition on MEGGYCHECKBUTTON to state [56]
transition on MINUS to state [57]

-------------------
lalr_state [134]: {
  [exp ::= exp (*) LT exp , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [statement ::= MEGGYTONESTART LPAREN exp (*) COMMA exp RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= exp (*) PLUS exp , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= exp (*) DOT ID LPAREN exp_list RPAREN , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= exp (*) MINUS exp , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= exp (*) TIMES exp , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= exp (*) EQUAL exp , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
  [exp ::= exp (*) AND exp , {PLUS MINUS TIMES LT EQUAL AND COMMA DOT }]
}
transition on DOT to state [72]
transition on TIMES to state [71]
transition on MINUS to state [70]
transition on EQUAL to state [69]
transition on PLUS to state [68]
transition on AND to state [67]
transition on LT to state [66]
transition on COMMA to state [135]

-------------------
lalr_state [135]: {
  [exp ::= (*) THIS , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) exp PLUS exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) MEGGYGETPIXEL LPAREN exp COMMA exp RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) LPAREN exp RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) exp AND exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) exp LT exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) INT_LITERAL , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) FALSE , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) NEW ID LPAREN RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) exp EQUAL exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) MEGGYCHECKBUTTON LPAREN exp RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) TONE_LITERAL , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) ID , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [statement ::= MEGGYTONESTART LPAREN exp COMMA (*) exp RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
  [exp ::= (*) exp TIMES exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) MINUS exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) NOT exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) exp DOT ID LPAREN exp_list RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) exp MINUS exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) LPAREN BYTE RPAREN exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= (*) TRUE , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
}
transition on BUTTON_LITERAL to state [59]
transition on LPAREN to state [49]
transition on COLOR_LITERAL to state [55]
transition on NOT to state [43]
transition on TONE_LITERAL to state [47]
transition on THIS to state [52]
transition on ID to state [51]
transition on MEGGYGETPIXEL to state [62]
transition on FALSE to state [58]
transition on INT_LITERAL to state [53]
transition on exp to state [136]
transition on TRUE to state [45]
transition on NEW to state [60]
transition on MEGGYCHECKBUTTON to state [56]
transition on MINUS to state [57]

-------------------
lalr_state [136]: {
  [exp ::= exp (*) LT exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= exp (*) PLUS exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= exp (*) DOT ID LPAREN exp_list RPAREN , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= exp (*) MINUS exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= exp (*) TIMES exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= exp (*) EQUAL exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [exp ::= exp (*) AND exp , {PLUS MINUS TIMES RPAREN LT EQUAL AND DOT }]
  [statement ::= MEGGYTONESTART LPAREN exp COMMA exp (*) RPAREN SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on DOT to state [72]
transition on TIMES to state [71]
transition on MINUS to state [70]
transition on EQUAL to state [69]
transition on PLUS to state [68]
transition on AND to state [67]
transition on RPAREN to state [137]
transition on LT to state [66]

-------------------
lalr_state [137]: {
  [statement ::= MEGGYTONESTART LPAREN exp COMMA exp RPAREN (*) SEMI , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}
transition on SEMI to state [138]

-------------------
lalr_state [138]: {
  [statement ::= MEGGYTONESTART LPAREN exp COMMA exp RPAREN SEMI (*) , {MINUS LPAREN LBRACE RBRACE IF ELSE NOT WHILE NEW PUBLIC RETURN MEGGYSETPIXEL MEGGYTONESTART MEGGYDELAY MEGGYGETPIXEL MEGGYCHECKBUTTON INT_LITERAL ID TRUE FALSE COLOR_LITERAL BUTTON_LITERAL TONE_LITERAL THIS }]
}

-------------------
lalr_state [139]: {
  [formal_list ::= formal_list COMMA formal (*) , {RPAREN BOOLEAN COMMA }]
}

-------------------
lalr_state [140]: {
  [NT$0 ::= (*) , {LBRACE }]
  [main_class ::= CLASS ID (*) NT$0 LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN statement NT$1 RBRACE , {EOF CLASS }]
}
transition on NT$0 to state [141]

-------------------
lalr_state [141]: {
  [main_class ::= CLASS ID NT$0 (*) LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN statement NT$1 RBRACE , {EOF CLASS }]
}
transition on LBRACE to state [142]

-------------------
lalr_state [142]: {
  [main_class ::= CLASS ID NT$0 LBRACE (*) PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN statement NT$1 RBRACE , {EOF CLASS }]
}
transition on PUBLIC to state [143]

-------------------
lalr_state [143]: {
  [main_class ::= CLASS ID NT$0 LBRACE PUBLIC (*) STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN statement NT$1 RBRACE , {EOF CLASS }]
}
transition on STATIC to state [144]

-------------------
lalr_state [144]: {
  [main_class ::= CLASS ID NT$0 LBRACE PUBLIC STATIC (*) VOID MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN statement NT$1 RBRACE , {EOF CLASS }]
}
transition on VOID to state [145]

-------------------
lalr_state [145]: {
  [main_class ::= CLASS ID NT$0 LBRACE PUBLIC STATIC VOID (*) MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN statement NT$1 RBRACE , {EOF CLASS }]
}
transition on MAIN to state [146]

-------------------
lalr_state [146]: {
  [main_class ::= CLASS ID NT$0 LBRACE PUBLIC STATIC VOID MAIN (*) LPAREN STRING LBRACKET RBRACKET ID RPAREN statement NT$1 RBRACE , {EOF CLASS }]
}
transition on LPAREN to state [147]

-------------------
lalr_state [147]: {
  [main_class ::= CLASS ID NT$0 LBRACE PUBLIC STATIC VOID MAIN LPAREN (*) STRING LBRACKET RBRACKET ID RPAREN statement NT$1 RBRACE , {EOF CLASS }]
}
transition on STRING to state [148]

-------------------
lalr_state [148]: {
  [main_class ::= CLASS ID NT$0 LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING (*) LBRACKET RBRACKET ID RPAREN statement NT$1 RBRACE , {EOF CLASS }]
}
transition on LBRACKET to state [149]

-------------------
lalr_state [149]: {
  [main_class ::= CLASS ID NT$0 LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET (*) RBRACKET ID RPAREN statement NT$1 RBRACE , {EOF CLASS }]
}
transition on RBRACKET to state [150]

-------------------
lalr_state [150]: {
  [main_class ::= CLASS ID NT$0 LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET (*) ID RPAREN statement NT$1 RBRACE , {EOF CLASS }]
}
transition on ID to state [151]

-------------------
lalr_state [151]: {
  [main_class ::= CLASS ID NT$0 LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID (*) RPAREN statement NT$1 RBRACE , {EOF CLASS }]
}
transition on RPAREN to state [152]

-------------------
lalr_state [152]: {
  [exp ::= (*) THIS , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [statement ::= (*) MEGGYDELAY LPAREN exp RPAREN SEMI , {RBRACE }]
  [statement ::= (*) exp DOT ID LPAREN exp_list RPAREN SEMI , {RBRACE }]
  [exp ::= (*) exp PLUS exp , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) MEGGYGETPIXEL LPAREN exp COMMA exp RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) BUTTON_LITERAL , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) LPAREN exp RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [statement ::= (*) LBRACE statement_list RBRACE , {RBRACE }]
  [main_class ::= CLASS ID NT$0 LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN (*) statement NT$1 RBRACE , {EOF CLASS }]
  [statement ::= (*) WHILE LPAREN exp RPAREN statement , {RBRACE }]
  [exp ::= (*) exp AND exp , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) exp LT exp , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) INT_LITERAL , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) FALSE , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) NEW ID LPAREN RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [statement ::= (*) IF LPAREN exp RPAREN statement , {RBRACE }]
  [exp ::= (*) exp EQUAL exp , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) MEGGYCHECKBUTTON LPAREN exp RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) TONE_LITERAL , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) ID , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [statement ::= (*) MEGGYSETPIXEL LPAREN exp COMMA exp COMMA exp RPAREN SEMI , {RBRACE }]
  [statement ::= (*) MEGGYTONESTART LPAREN exp COMMA exp RPAREN SEMI , {RBRACE }]
  [exp ::= (*) exp TIMES exp , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) MINUS exp , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) COLOR_LITERAL , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) NOT exp , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) exp DOT ID LPAREN exp_list RPAREN , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [statement ::= (*) IF LPAREN exp RPAREN statement ELSE statement , {RBRACE }]
  [exp ::= (*) exp MINUS exp , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) LPAREN BYTE RPAREN exp , {PLUS MINUS TIMES LT EQUAL AND DOT }]
  [exp ::= (*) TRUE , {PLUS MINUS TIMES LT EQUAL AND DOT }]
}
transition on MEGGYGETPIXEL to state [62]
transition on MEGGYDELAY to state [61]
transition on NEW to state [60]
transition on BUTTON_LITERAL to state [59]
transition on FALSE to state [58]
transition on MINUS to state [57]
transition on MEGGYCHECKBUTTON to state [56]
transition on COLOR_LITERAL to state [55]
transition on MEGGYSETPIXEL to state [54]
transition on INT_LITERAL to state [53]
transition on THIS to state [52]
transition on ID to state [51]
transition on LBRACE to state [50]
transition on LPAREN to state [49]
transition on IF to state [48]
transition on TONE_LITERAL to state [47]
transition on exp to state [46]
transition on TRUE to state [45]
transition on NOT to state [43]
transition on WHILE to state [42]
transition on statement to state [153]
transition on MEGGYTONESTART to state [40]

-------------------
lalr_state [153]: {
  [main_class ::= CLASS ID NT$0 LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN statement (*) NT$1 RBRACE , {EOF CLASS }]
  [NT$1 ::= (*) , {RBRACE }]
}
transition on NT$1 to state [154]

-------------------
lalr_state [154]: {
  [main_class ::= CLASS ID NT$0 LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN statement NT$1 (*) RBRACE , {EOF CLASS }]
}
transition on RBRACE to state [155]

-------------------
lalr_state [155]: {
  [main_class ::= CLASS ID NT$0 LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN statement NT$1 RBRACE (*) , {EOF CLASS }]
}

-------------------
lalr_state [156]: {
  [$START ::= program EOF (*) , {EOF }]
}

-------------------
------- CUP v0.11a beta 20060608 Parser Generation Summary -------
  1 error and 5 warnings
  55 terminals, 21 non-terminals, and 58 productions declared, 
  producing 157 unique parse states.
  4 terminals declared but not used.
  0 non-terminals declared but not used.
  0 productions never reduced.
  1 conflict detected (0 expected).
  No code produced.
---------------------------------------------------- (v0.11a beta 20060608)
